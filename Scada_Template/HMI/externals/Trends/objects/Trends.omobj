<type access-modifier="public" name="Trends" display-name="Trends" uuid="81673f92-ac48-4244-bfe3-ddbdcc98167a" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5">
	<designed target="X" value="0" ver="5"/>
	<designed target="Y" value="0" ver="5"/>
	<designed target="Rotation" value="0" ver="5"/>
	<designed target="Scale" value="1" ver="5"/>
	<designed target="Visible" value="true" ver="5"/>
	<designed target="Enabled" value="true" ver="5"/>
	<designed target="Tooltip" value="" ver="5"/>
	<designed target="Width" value="900" ver="5"/>
	<designed target="Height" value="600" ver="5"/>
	<designed target="RoundingRadius" value="0" ver="5"/>
	<designed target="PenColor" value="4278190080" ver="5"/>
	<designed target="PenStyle" value="1" ver="5"/>
	<designed target="PenWidth" value="1" ver="5"/>
	<designed target="BrushColor" value="4278190080" ver="5"/>
	<designed target="BrushStyle" value="0" ver="5"/>
	<object access-modifier="private" name="Layout" display-name="Layout" uuid="e19ee752-1d1a-4b52-b667-f9d9f7be9db0" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="5">
		<designed target="Orientation" value="2" ver="5"/>
		<designed target="Gap" value="0" ver="5"/>
	</object>
	<object access-modifier="private" name="private" display-name="private" uuid="c63682c6-6fd0-4b6d-a83c-f6a32e02ae47" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5">
		<do access-modifier="private" name="Initializer" display-name="Initializer" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[// Повторная инициализация не нужна
if (initialized) 
	return;
initialized = true;	

WS.RS.Chart.private.Initializer();
]]>
			</body>
		</do>
		<do access-modifier="private" name="GetAbsolutePath" display-name="GetAbsolutePath" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="om">
				<![CDATA[// если путь абсолютный, то его и возвращаем
if (String.Length(path) > 1 && (String.SubString(path, 0, 1) == "/" || String.SubString(path, 1, 1) == ":"))
	return path;

// относительный путь относительно папки
return FileManager.CombinePath(root, path);]]>
			</body>
			<param access-modifier="private" name="root" display-name="" uuid="084508d4-ae05-4560-97a6-cb7fbde29e29" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<param access-modifier="private" name="path" display-name="" uuid="2603889c-431a-44c2-abf2-aee32e2dbd14" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="SaveConfiguration" display-name="SaveConfiguration" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[// определение пути к папке с конфигурацией
configurationPath: string = private.GetAbsolutePath(unit.ProductInfo.GetProgramDataFolder(), ConfigurationPath);
//Debug.Log("Сохранение конфигурации в папку " + configurationPath);

// при необходимости создаем папку
if (!FileManager.Exists(configurationPath))	
	FileManager.CreateRecursiveFolder(configurationPath);
	
// сохраняем настройки
SaveSettings(configurationPath);

// сохраняем настройки легенды
WS.RS.Legend.SaveSettings(configurationPath);]]>
			</body>
		</do>
		<object access-modifier="private" name="initialized" display-name="initialized" uuid="c27e95b9-1182-42a6-96d1-3fec86089157" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
		<do access-modifier="private" name="LayoutUpdate" display-name="LayoutUpdate" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[WS.LayoutUpdate();
WS.RS.LayoutUpdate();]]>
			</body>
		</do>
		<do access-modifier="private" name="SaveSettings" display-name="SaveSettings" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<param access-modifier="private" name="folder" display-name="" uuid="f0dda406-69e2-4a06-bba1-00f93435adfb" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<body kind="javascript">
				<![CDATA[var filePath = FileManager.CombinePath(folder, "settings.json");
//log("Сохранение настроек в файл "  + filePath);
try
{
	var settings = {
		"ToolBar": JSON.parse(ToolBar.GetViewSettings()),
		"ItemsTree": {
			"Width": WS.Splitter.Distance
		},
		"Print": {
			"EnableTitlePrint": WS.RS.Chart.EnableTitlePrint,
			"TitlePrint": WS.RS.Chart.TitlePrint
		},		
		"FilePaths": {
			"ExportImportFolder": ExportImportFolderPath.Value,
			"OpenFileType": WS.RS.Chart.ShowOpenDialog.FileType,
			"SaveFileType": WS.RS.Chart.ShowSaveDialog.FileType,
			"ExportFileType": WS.RS.Chart.ShowExportDialog.FileType
		},
		"OpenFileFormat": 	{
			"FormatDateTime": []
		},
		"ColorPalette": JSON.parse(WS.RS.Chart.private.Palette.GetColors()),
		"UnitConvert": JSON.parse(WS.RS.Chart.private.UnitConvert),
		"LineDecorators": JSON.parse(WS.RS.Chart.private.LineDecor.GetStyle()) 
	};
	
	if (WS.RS.Chart.OpenDataTable.Settings != "")
		settings.DataTable = JSON.parse(WS.RS.Chart.OpenDataTable.Settings);
	
	let i = 0;
	while (i < WS.RS.Chart.private.FileOpenFormatDT.Length)
	{
		settings.OpenFileFormat.FormatDateTime.push(WS.RS.Chart.private.FileOpenFormatDT[i]);
		i += 1; 
	}

	if (ColorDialogResult.CustomColors != "")
		settings.CustomColors = JSON.parse(ColorDialogResult.CustomColors);
	
	var json = JSON.stringify(settings, null, 2);
	FileManager.WriteTextFile(filePath, json);
}
catch(error)
{
	log("Не удалось сохранить настройки в "  + filePath + "\n" + error.message);
}]]>
			</body>
		</do>
		<do access-modifier="private" name="LoadSettings" display-name="LoadSettings" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
			<param access-modifier="private" name="folder" display-name="" uuid="59902175-4116-499e-96cb-38cc96535af2" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<body kind="javascript">
				<![CDATA[var filePath = FileManager.CombinePath(folder, "settings.json");
if (FileManager.Exists(filePath))
{
//	log("Загрузка настроек из файла "  + filePath);
	try
	{
		var json = FileManager.ReadTextFile(filePath);
		var settings = JSON.parse(json);
	
		var toolbar = settings.ToolBar;
		if (toolbar != undefined)
			ToolBar.UpdateView(JSON.stringify(toolbar));
	
		var itemsTree = settings.ItemsTree;
		if (itemsTree != undefined)
		{
			WS.Splitter.Distance = itemsTree.Width;
		}
		if (WS.ItemsTree.SizeLimits.MinWidth != WS.Splitter.Distance)
			WS.LayoutUpdate();
		
		var printSettings = settings.Print;
		if (printSettings != undefined)
		{
			WS.RS.Chart.EnableTitlePrint = printSettings.EnableTitlePrint;
			WS.RS.Chart.TitlePrint = printSettings.TitlePrint;
		}

		if (settings.DataTable != undefined)
			WS.RS.Chart.OpenDataTable.Settings = JSON.stringify(settings.DataTable);

		var filePaths = settings.FilePaths;
		if (filePaths != undefined)
		{
			ExportImportFolderPath = filePaths.ExportImportFolder;
			WS.RS.Chart.ShowOpenDialog.FileType = filePaths.OpenFileType; 
			WS.RS.Chart.ShowSaveDialog.FileType = filePaths.SaveFileType;
			WS.RS.Chart.ShowExportDialog.FileType = filePaths.ExportFileType;
		}
		
		var formatOpenCSV = settings.OpenFileFormat;
		if (formatOpenCSV != undefined)
		{
			let i = 0;
			while (i<formatOpenCSV.FormatDateTime.length && i<WS.RS.Chart.private.FileOpenFormatDT.Length)
			{
				WS.RS.Chart.private.FileOpenFormatDT[i] = formatOpenCSV.FormatDateTime[i];
				i += 1;
			}
		}

		var colorPalette = settings.ColorPalette;
		if (colorPalette != undefined)
			WS.RS.Chart.private.Palette.Update(JSON.stringify(colorPalette))
	
		var customColors = settings.CustomColors;
		if (customColors != undefined)		
			ColorDialogResult.CustomColors = JSON.stringify(customColors);
			
		var unitConvert = settings.UnitConvert;
		if (unitConvert != undefined)
			WS.RS.Chart.private.UnitConvert = JSON.stringify(unitConvert);
			
		var lineDecorators = settings.LineDecorators;
		if (lineDecorators != undefined)
			WS.RS.Chart.private.LineDecor.SetStyle(JSON.stringify(lineDecorators));
	}
	catch(err)
	{
		log("Не удалось загрузить настройки из "  + filePath + "\n" + err.message);
		return false;
	}
}
else
{
	return false;
}
return true;]]>
			</body>
		</do>
		<object access-modifier="private" name="DoSaveSettings" display-name="DoSaveSettings" uuid="d693da9f-199f-4b8b-8e76-5bcc695f5bde" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="om">
					<![CDATA[Timer.Active = true;]]>
				</body>
			</do-on>
			<object access-modifier="private" name="Timer" display-name="Timer" uuid="ca4fc949-7cdc-4670-bb6d-0d79d23e236a" base-type="Timer" base-type-id="72ba7cd4-549e-41f2-923c-2431b91f349a" ver="5">
				<designed target="Period" value="250" ver="5"/>
				<designed target="Active" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="OnTimer">
					<body kind="om">
						<![CDATA[Active = false;

// определение пути к папке с конфигурацией
configurationPath: string = GetAbsolutePath(unit.ProductInfo.GetProgramDataFolder(), ConfigurationPath);

if (FileManager.Exists(configurationPath))	
	FileManager.CreateRecursiveFolder(configurationPath);

SaveSettings(configurationPath);]]>
					</body>
				</do-on>
			</object>
		</object>
		<object access-modifier="private" name="DoSaveConfig" display-name="DoSaveConfig" uuid="70511776-25e9-46cc-ba9a-6d00446bce73" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="om">
					<![CDATA[Timer.Active = true;]]>
				</body>
			</do-on>
			<object access-modifier="private" name="Timer" display-name="Timer" uuid="dd77fefd-6bf8-4afa-9aa0-01a939b8c2ea" base-type="Timer" base-type-id="72ba7cd4-549e-41f2-923c-2431b91f349a" ver="5">
				<designed target="Period" value="250" ver="5"/>
				<designed target="Active" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="OnTimer">
					<body kind="om">
						<![CDATA[Active = false;
SaveConfiguration();]]>
					</body>
				</do-on>
			</object>
		</object>
		<object access-modifier="private" name="bConfigLoaded" display-name="bConfigLoaded" uuid="014b1ab3-6ac1-4d49-a505-7643a136add3" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
		<object access-modifier="private" name="EventParams" display-name="EventParams" uuid="72023632-35bd-4f1d-b72a-71f8bb60459b" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" cardinal="2"/>
		<object access-modifier="private" name="pTheme" display-name="pTheme" uuid="9c688735-8081-4e5c-867c-4e562e04eb7f" base-type="Trends_Theme" base-type-id="3fbfa4c2-c742-4bec-94dc-d1bcb7ef25b6" ver="5" base-ref="true"/>
		<do access-modifier="private" name="LoadCustomTree" display-name="LoadCustomTree" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (filePath != "")
{	
	filePath = GetAbsolutePath(unit.ProductInfo.GetProgramDataFolder(), filePath); // дополнение относительного пути
	WS.ItemsTree.LoadFromFile(filePath);
}
else
	Debug.Log("Не задан путь к файлу дерева сигналов");]]>
			</body>
			<param access-modifier="private" name="filePath" display-name="" uuid="a7eb50c3-5d1d-4b23-8836-46e6e10ca36f" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<object access-modifier="private" name="pPermissions" display-name="pPermissions" uuid="a0262d54-4aa7-4f2c-84a1-a30f47f13cb5" base-type="Trends_Permissions" base-type-id="083b63d1-3678-4da0-80a0-9c09d0076a3c" base-const="true" base-ref="true" ver="5" description=""/>
		<object access-modifier="private" name="pScreenKeyboard" display-name="pScreenKeyboard" uuid="1b1c5677-7914-4fbe-9483-9e5536230c2b" base-type="ScreenKeyboardOptions" base-type-id="0589bc8e-fbb2-4f0e-b5d2-f0d825538ef1" base-const="true" base-ref="true" ver="5" description=""/>
		<object access-modifier="private" name="FileSystemAccess" display-name="FileSystemAccess" uuid="2510b671-233d-4f52-a716-ee6faf870633" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[WS.RS.Chart.ExportPath.Update(ExportImportFolderPath, value);]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="ColorDialogResult" display-name="ColorDialogResult" uuid="3c0aaf66-7159-4e2d-958f-2f24568fbc3d" base-type="ColorDialogResult" base-type-id="b51f78e4-f30c-411b-9a81-b57ef602013a" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="ShowError" display-name="ShowError" uuid="21814406-8977-43e0-97ac-b4e31e71dcfe" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="6c4d75e2-dd04-43f5-b26b-d03103cebbff" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="5">
					<init target="Icon" ver="5" value="2"/>
					<init target="Buttons" ver="5" value="0"/>
					<init target="Message" ver="5">
						<expr>
							<![CDATA[message]]>
						</expr>
					</init>
					<designed target="WindowCaption" value="Внимание" ver="5"/>
					<init target="pTheme" ver="5" ref="here.private.pTheme"/>
				</object>
			</do-on>
			<object access-modifier="private" name="message" display-name="message" uuid="ba554a5f-72ac-493f-a6a7-6780939abd05" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</object>
		<object access-modifier="private" name="ShowComplete" display-name="ShowComplete" uuid="541f8d66-7b2a-45b8-9a7c-de89e5b94d51" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="ddbcd54e-6839-4875-9ad4-ab0569d44cfe" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="5">
					<init target="Icon" ver="5" value="0"/>
					<init target="Buttons" ver="5" value="0"/>
					<init target="Message" ver="5">
						<expr>
							<![CDATA[message]]>
						</expr>
					</init>
					<init target="pTheme" ver="5" ref="here.private.pTheme"/>
				</object>
			</do-on>
			<object access-modifier="private" name="message" display-name="message" uuid="8eafceec-7833-4916-b65f-c2d1917c413d" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</object>
		<object access-modifier="private" name="EditSettings" display-name="EditSettings" uuid="3897b3c4-7c27-4465-a789-9fbb745907d3" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="b06c5aef-552a-45b1-a1af-dafd93d7b473" base-type="Trends_SettingsMain" base-type-id="73f343c2-cdfc-4c21-b5ea-f00c75151521" ver="5">
					<init target="pToolBar" ver="5" ref="ToolBar"/>
					<init target="pTheme" ver="5" ref="here.private.pTheme"/>
					<init target="pSaveSettings" ver="5" ref="private.DoSaveSettings"/>
				</object>
			</do-on>
		</object>
		<object access-modifier="private" name="SaveScreenshot" display-name="SaveScreenshot" uuid="a31a4727-9cd0-48cd-b770-6f9d4d6354a3" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="om">
					<![CDATA[// Делаем скриншот трендов и легенды
if (Screenshot.ShotRegion(WS.RS.ScreenX(0, 0), WS.RS.ScreenY(0, 0), TypeConvert.ToInt4(WS.RS.Width), TypeConvert.ToInt4(WS.RS.Height)))
{
	// Предлагаем сохранить
	ShowSaveDialog.Invoke();
}
else
{
	private.ShowError.message = "Не удалось подготовить текущее изображение";
	private.ShowError.Invoke();
}]]>
				</body>
			</do-on>
			<object access-modifier="private" name="ShowSaveDialog" display-name="ShowSaveDialog" uuid="0ea8cc5d-8c1e-4f22-aaab-49c0461579f6" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-by-id="false" form-action="open-dialog">
					<object access-modifier="private" uuid="75c0762b-82ef-4dd8-a345-b5a156b1c388" base-type="SaveFileDialog" base-type-id="d69a91c3-89e9-4e7b-994e-9242dbc5e095" ver="5">
						<init target="EditSettingsAllowed" ver="5" value="false"/>
						<init target="OnComplete" ver="5" ref="SaveFile"/>
						<init target="FileTypeFilter" ver="5" value="PNG (*.png)|*.png"/>
						<init target="Result" ver="5" ref="DialogResult"/>
						<init target="RootPath" ver="5">
							<expr>
								<![CDATA[WS.RS.Chart.ExportPath.Root]]>
							</expr>
						</init>
						<init target="DefaultPath" ver="5">
							<expr>
								<![CDATA[WS.RS.Chart.ExportPath]]>
							</expr>
						</init>
						<init target="init_Theme" ver="5" ref="here.private.pTheme"/>
						<init target="init_ScreenKeyboard" ver="5" ref="here.private.pScreenKeyboard"/>
					</object>
				</do-on>
				<object access-modifier="private" name="DialogResult" display-name="DialogResult" uuid="472640a8-6b21-44dd-a26c-33d40e6f90a4" base-type="FileDialogResult" base-type-id="602926f1-7d01-4d50-a5c0-d8fd35eadc74" ver="5"/>
				<object access-modifier="private" name="SaveFile" display-name="SaveFile" uuid="3f92e99b-9143-4a68-9d75-d6d3930e75dc" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[Screenshot.Save(DialogResult.FilePath);
Screenshot.Clear();

ShowComplete.message = "Текущее изображение сохранено в файл \n" + DialogResult.FilePath;
ShowComplete.Invoke();

OnExportImportFinished(DialogResult.FilePath);]]>
						</body>
					</do-on>
				</object>
			</object>
			<object access-modifier="private" name="Screenshot" display-name="Screenshot" uuid="3ea928e1-ef4d-400f-ba64-ccf50d93e574" base-type="Screenshot" base-type-id="ee8cdf0b-f2a3-445d-94f7-d61c8ba6f853" ver="5"/>
		</object>
		<object access-modifier="private" name="ShowPrintDialog" display-name="ShowPrintDialog" uuid="960fa169-97a6-477b-9afb-660e04ce6b9a" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-by-id="false" form-action="open-dialog">
				<object access-modifier="private" uuid="fd7094b1-c9a9-49b2-acad-23253b19817d" base-type="Trends_Print" base-type-id="9ea85c57-5943-4aa2-a7c6-3e8b12cba954" ver="5">
					<init target="pChart" ver="5" ref="WS.RS.Chart"/>
					<init target="pOnPrint" ver="5" ref="here.OnPrint"/>
					<init target="pOnPrintPreview" ver="5" ref="here.OnDoPrintSettings"/>
					<init target="pLegend" ver="5" ref="WS.RS.Legend"/>
					<init target="init_Theme" ver="5" ref="here.private.pTheme"/>
					<init target="pOnClosed" ver="5" ref="here.private.DoSaveSettings"/>
					<init target="AllowSelectPrinter" ver="5" ref="here.private.pPermissions.PrinterSelecting"/>
					<init target="init_ScreenKeyboard" ver="5" ref="here.private.pScreenKeyboard"/>
				</object>
			</do-on>
		</object>
		<do access-modifier="private" name="OnExportImportFinished" display-name="OnExportImportFinished" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[// запоминаем выбранную папку, если у пользователя есть доступ к файловой системе
if (pPermissions.FileSystemAccess)
	ExportImportFolderPath = FileManager.AbsolutePath(FileManager.ParentPath(filePath));
	
// сохраняем параметры экспорта/импорта
here.private.DoSaveSettings.Timer.Active = true;		]]>
			</body>
			<param access-modifier="private" name="filePath" display-name="" uuid="b6eacf38-af12-4bb4-a8d0-8dfdeb285bcb" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<init target="pTheme" ver="5" ref="here.init_Theme"/>
		<init target="pPermissions" ver="5" ref="here.init_Permissions"/>
		<do-trace access-modifier="private" target="FileSystemAccess" ver="5">
			<body>
				<![CDATA[pPermissions.FileSystemAccess]]>
			</body>
		</do-trace>
		<init target="pScreenKeyboard" ver="5" ref="here.init_ScreenKeyboard"/>
		<object access-modifier="private" name="DoOnPrintMenuClick" display-name="DoOnPrintMenuClick" uuid="3fcce51d-c903-403a-93e4-57fef0883839" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="om">
					<![CDATA[if (ToolBar.btnPrintDrop.MenuResult.Id == "dialog")
	ShowPrintDialog.Invoke();
if (ToolBar.btnPrintDrop.MenuResult.Id == "preview")
{
	OnDoPrintSettings.Invoke();
	WS.RS.ChartPrint.PrintPreviewDialog();
}
else if (ToolBar.btnPrintDrop.MenuResult.Id == "print")
{
	OnPrint.Invoke();
	WS.RS.ChartPrint.Print();
}]]>
				</body>
			</do-on>
		</object>
	</object>
	<object access-modifier="private" name="Initializer" display-name="Initializer" uuid="70efc10e-6752-43f6-9c2b-d1fe098ea60c" base-type="Initializer" base-type-id="6db89679-9299-4993-ad1a-0d086cd1c7d2" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Initialized">
			<body kind="om">
				<![CDATA[// Инициализатор вынесен в отдельную функцию, что бы иметь возможность запускать его в ручную,
// например в событии Opened основной формы, который по недоразмению срабатывает раньше штатного инициализатора.
// Это необходимо, если в событии Opened происходит добавление графиков в тренды.
private.Initializer();

// Выполняем загрузку конфигурации, если она не была выполнена из скрипта ранее
if (!private.bConfigLoaded)
	LoadConfiguration(ConfigurationPath);]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="Debug" display-name="Debug" uuid="07b423d2-0a1d-42a0-851a-3d69fc163b7e" base-type="DebugTool" base-type-id="43946044-139a-43f4-a7b8-19a6074ffc56" ver="5"/>
	<object access-modifier="private" name="ApSource_Trends" display-name="ApSource_Trends" uuid="9219da98-6462-4d16-8af0-99d26f9411f4" base-type="ApSource" base-type-id="966603da-f05e-4b4d-8ef0-919efbf8ab2c" ver="5">
		<designed target="Active" value="true" ver="5"/>
		<init target="Timeout" ver="5" value="0"/>
		<init target="ConnectionEstablishTimeout" ver="5" value="0"/>
		<init target="MaxBufferPoolSize" ver="5" value="0"/>
		<init target="ParentSource" ver="5" ref="int_AP"/>
		<designed target="Path" value="" ver="5"/>
		<designed target="ReAdvise" value="0" ver="5"/>
	</object>
	<object access-modifier="private" name="FileManager" display-name="FileManager" uuid="32b1deb1-3f44-474a-b231-e2e9884e13de" base-type="FileSystem" base-type-id="34d744f9-7303-4077-a3f7-9c06c0945512" ver="5">
		<designed target="RootPath" value="/" ver="5"/>
	</object>
	<object access-modifier="private" name="LowRange" display-name="Нижний предел значений по Y" uuid="56563643-bebc-49a7-a678-2afd7473ba6c" base-type="notifying_double" base-type-id="3f905fb7-7738-4619-b402-5a91f136d4bd" ver="5"/>
	<object access-modifier="private" name="HighRange" display-name="Верхний предел значений по Y" uuid="a9bd199c-391e-40f5-91fe-025c8aba8f95" base-type="notifying_double" base-type-id="3f905fb7-7738-4619-b402-5a91f136d4bd" ver="5"/>
	<object access-modifier="private" name="ActiveMode" display-name="Активный режим" uuid="c625cfff-1cbb-4180-be5c-383f225af57e" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[//Debug.Log("ActiveMode.ValueChanged " + String.ToString(Value));
if (WS.RS.Chart.ActiveMode != Value)
	WS.RS.Chart.ActiveMode = Value;]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="AutoRange" display-name="Автоматическое определение диапазона значений для всех сигналов" uuid="3491ba60-8a33-4a2a-ad96-ef26a1357351" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[//Debug.Log("AutoRange.ValueChanged " + String.ToString(Value));
WS.RS.Chart.Params.SetUserScale(false);
if (WS.RS.Chart.AutoRange != Value)
	WS.RS.Chart.AutoRange = Value;]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="GlobalRanges" display-name="Общий диапазон значений для всех сигналов" uuid="de1a8296-7df3-40a4-a468-fd2544e3d531" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" cardinal="1">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[//Debug.Log("GlobalRanges.ValueChanged " + String.ToString(Value));
WS.RS.Chart.Params.SetUserScale(false);
if (WS.RS.Chart.GlobalRanges != Value)
	WS.RS.Chart.GlobalRanges = Value;]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="GraphicThickness" display-name="Толщина графиков" uuid="91fc36bb-951a-419e-a80f-188e84245940" base-type="notifying_float" base-type-id="bb7d05ee-cbf0-4c44-8740-1905239c8ead" ver="5"/>
	<object access-modifier="private" name="DeltaLineWidth" display-name="Утолщение выделенного графика" uuid="158dcbfa-af6f-4c91-80b4-c4088b57d902" base-type="notifying_float" base-type-id="bb7d05ee-cbf0-4c44-8740-1905239c8ead" ver="5"/>
	<object access-modifier="private" name="InterpolationLine" display-name="Режим интерполяции" uuid="047b9ab0-4afd-47a7-b6f7-78981828c295" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
	<object access-modifier="private" name="TicksCountAxisX" display-name="Количество делений на оси X" uuid="d2a763b4-69dd-4dda-9203-90ce43666a3d" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="5"/>
	<object access-modifier="private" name="TicksCountAxisY" display-name="Количество делений на оси Y" uuid="7a6b63d4-d7c6-40c1-8c47-fd70d2141af5" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="5"/>
	<object access-modifier="private" name="YAxisPrecision" display-name="Точность отображения значений" uuid="de7b2872-4a5b-4df8-9bcc-dd51482d0df8" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="5"/>
	<param access-modifier="private" name="int_AP" display-name="int_AP" uuid="ccf5cf75-446e-47b6-9153-3e5280b78f3f" base-type="ApSource" base-type-id="966603da-f05e-4b4d-8ef0-919efbf8ab2c" base-const="true" base-ref="true" ver="5"/>
	<param access-modifier="private" name="init_Theme" display-name="Тема оформления" uuid="aa2bfe54-44b8-4a2c-bbcb-dda33e29cbaa" base-type="Trends_Theme" base-type-id="3fbfa4c2-c742-4bec-94dc-d1bcb7ef25b6" base-const="true" base-ref="true" ver="5"/>
	<param access-modifier="private" name="init_Permissions" display-name="Разрешения" uuid="16232911-7009-49e3-b1af-d067e7b890f9" base-type="Trends_Permissions" base-type-id="083b63d1-3678-4da0-80a0-9c09d0076a3c" base-const="true" base-ref="true" ver="5" description=""/>
	<param access-modifier="private" name="init_ScreenKeyboard" display-name="Вызов экранной клавиатуры" uuid="74bb82bd-7759-46dc-95f8-b0eb22e5c703" base-type="ScreenKeyboardOptions" base-type-id="0589bc8e-fbb2-4f0e-b5d2-f0d825538ef1" ver="5" description="" cardinal="1" base-ref="true">
		<init target="Enabled" ver="5" value="false"/>
	</param>
	<param access-modifier="private" name="DataUpdatePeriod" display-name="Период обновления данных, мс" uuid="8d6d28c1-c72b-4d99-aa00-b022caf9cc9f" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
	<do access-modifier="private" name="ForcedAddItem" display-name="ForcedAddItem" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<param access-modifier="private" name="path" display-name="" uuid="2a330e59-588d-434c-b646-85d6f5e5e709" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<body kind="om">
			<![CDATA[return WS.RS.Chart.AddItem(path, eUnit, description, -1) > 0;]]>
		</body>
		<param access-modifier="private" name="eUnit" display-name="" uuid="4cb4bcbf-7de2-4094-bbf0-a54bb9b569db" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="description" display-name="" uuid="0757a0e9-bf70-408e-a3eb-2bdbcc28e689" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
	</do>
	<do access-modifier="private" name="RemoveItem" display-name="RemoveItem" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<param access-modifier="private" name="path" display-name="" uuid="f9066ccd-4821-480e-857f-a852a3f84360" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<body kind="om">
			<![CDATA[WS.RS.Chart.RemoveItem(path);]]>
		</body>
	</do>
	<do access-modifier="private" name="SetGraphicThickness" display-name="SetGraphicThickness" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<param access-modifier="private" name="tag" display-name="" uuid="52f435be-7089-4119-9d97-91fb7691673a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="thick" display-name="" uuid="5f83ef11-0f4e-40b8-be6c-b9da54c6cfa5" base-type="float" base-type-id="730a70b7-31fd-42cf-860d-ba8faa618f9d" ver="5"/>
		<body kind="om">
			<![CDATA[return WS.RS.Chart.SetGraphicThickness(tag, thick);]]>
		</body>
	</do>
	<do access-modifier="private" name="SetGraphicMarkerLabelVisible" display-name="SetGraphicMarkerLabelVisible" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[WS.RS.Chart.SetGraphicMarkerLabelVisible(tag, markerLabelVisible);
]]>
		</body>
		<param access-modifier="private" name="tag" display-name="" uuid="a31e74c2-7c67-46be-99e6-19a8978f49fd" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="markerLabelVisible" display-name="" uuid="f25d5251-c479-476d-89c5-6af56a1e3ed4" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
	</do>
	<do access-modifier="private" name="AddLevel" display-name="AddLevel" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<param access-modifier="private" name="path" display-name="" uuid="f7287d61-9250-4e12-9a06-ec35c80ef4cf" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<body kind="om">
			<![CDATA[return WS.RS.Chart.AddLevel(path, lineStyle) > 0;]]>
		</body>
		<param access-modifier="private" name="lineStyle" display-name="" uuid="c77a0407-6357-47bb-a94a-ba6f50777c93" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
	</do>
	<do access-modifier="private" name="ClearData" display-name="ClearData" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[WS.RS.Chart.Clear();]]>
		</body>
	</do>
	<do access-modifier="private" name="SetGraphicColor" display-name="SetGraphicColor" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<param access-modifier="private" name="tag" display-name="" uuid="4c633d25-4999-4de6-89d4-e79dbb6ae537" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="R" display-name="" uuid="43273ffa-0d64-4e0c-8d1f-805e45b87b82" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
		<body kind="om">
			<![CDATA[return WS.RS.Chart.SetGraphicColor(tag, R, G, B);]]>
		</body>
		<param access-modifier="private" name="G" display-name="" uuid="69dc5f6f-69ba-4dce-b63a-351474b723b0" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
		<param access-modifier="private" name="B" display-name="" uuid="1dc87948-5577-4f36-bda0-803b6345b92d" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
	</do>
	<do access-modifier="private" name="SetGraphicColorU4" display-name="SetGraphicColorU4" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<param access-modifier="private" name="tag" display-name="" uuid="65465370-aa3d-43fa-b98e-7650aa17614b" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="color" display-name="" uuid="2fd63aab-c65e-40b1-85c6-9ad1443ce56c" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
		<body kind="om">
			<![CDATA[return WS.RS.Chart.SetGraphicColorU4(tag, color);]]>
		</body>
	</do>
	<do access-modifier="private" name="SetAxisColor" display-name="SetAxisColor" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<param access-modifier="private" name="tag" display-name="" uuid="76e5f167-1ee6-4359-a7a9-5fbbe98e3165" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="R" display-name="" uuid="a5c33a39-c0ca-4b08-9691-22632f62553d" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
		<body kind="om">
			<![CDATA[return WS.RS.Chart.SetAxisColor(tag, R, G, B);]]>
		</body>
		<param access-modifier="private" name="G" display-name="" uuid="816bdd1e-d8b9-484e-9448-3287a20de932" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
		<param access-modifier="private" name="B" display-name="" uuid="ef96d6a8-8182-4d88-a5eb-93e1225071f8" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
	</do>
	<do access-modifier="private" name="SetAxisColorU4" display-name="SetAxisColorU4" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<param access-modifier="private" name="axisName" display-name="" uuid="dd0b3623-441e-4dfa-97e1-8623acb25146" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="color" display-name="" uuid="e4e74c1e-8fd3-4c08-9326-3bfb98ca756a" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
		<body kind="om">
			<![CDATA[return WS.RS.Chart.SetAxisColorU4(axisName, color);]]>
		</body>
	</do>
	<do access-modifier="private" name="SetOperativInterval" display-name="SetOperativInterval" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<param access-modifier="private" name="nMinutes" display-name="" uuid="c7dbadf0-a462-42ea-b76a-5b3c2add3790" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="5"/>
		<param access-modifier="private" name="nUpdateRate" display-name="" uuid="f442124a-0764-4c6b-ac54-857d93070177" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
		<body kind="om">
			<![CDATA[WS.RS.Chart.SetOperativInterval(nMinutes, nUpdateRate);]]>
		</body>
	</do>
	<object access-modifier="private" name="ShowToolbar" display-name="Видимость панели инструментов" uuid="d6cde7a9-87c5-4e3d-a63c-6d2d3169afd1" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[here.private.LayoutUpdate();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ShowLegend" display-name="Видимость легенды" uuid="e2e42267-3c49-4b73-a6e9-d62a51040f0f" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[WS.RS.LayoutUpdate();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ShowSources" display-name="Видимость дерева сигналов" uuid="4d9dc435-589f-4c39-a412-aed80ebafc86" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (oldValue != value)
{
	oldValue = value;	
	WS.LayoutUpdate();
}]]>
			</body>
		</do-on>
		<object access-modifier="private" name="oldValue" display-name="oldValue" uuid="eed5408e-1e26-48c0-965c-a82fdc34fa89" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
		<init target="oldValue" ver="5" value="true"/>
	</object>
	<object access-modifier="private" name="ShowStatus" display-name="Видимость строки статуса" uuid="f4a353c4-917a-4aa3-a516-9001a32d5f0a" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[here.private.LayoutUpdate();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ShowEU" display-name="Видимость единиц измерений" uuid="c5818f83-73e5-4e15-9dd2-277024de6e36" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (WS.RS.Chart.ShowEU != value)
	WS.RS.Chart.ShowEU = value;]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ShowMarkerLabels" display-name="Видимость выносок реперов" uuid="14c7db4a-fe86-4c52-b1fb-ff6fe7309282" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (WS.RS.Chart.ShowMarkerLabels != value)
	WS.RS.Chart.ShowMarkerLabels = value;]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ShowDataPoints" display-name="Видимость точек на графиках" uuid="f61224b3-e0f6-4554-9975-e85c94b8e385" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (WS.RS.Chart.ShowDataPoints != value)
	WS.RS.Chart.ShowDataPoints = value;]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ShowMiniTrends" display-name="Видимость минитрендов" uuid="ffead676-9ce8-4ee0-bb60-830c1e9d7252" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (WS.RS.Chart.ShowMiniTrends != value)
	WS.RS.Chart.ShowMiniTrends = value;]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="MaxLineLegendShow" display-name="Максимальное количество строк в легенде" uuid="59a3fd68-8945-452e-9c92-8899303b50b6" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[WS.RS.LayoutUpdate();]]>
			</body>
		</do-on>
	</object>
	<init target="ShowToolbar" ver="5" value="true"/>
	<init target="ShowLegend" ver="5" value="false"/>
	<init target="MaxLineLegendShow" ver="5" value="4"/>
	<init target="DataUpdatePeriod" ver="5" value="1000"/>
	<init target="ShowMarkerLabels" ver="5" value="true"/>
	<init target="AutoRange" ver="5" value="true"/>
	<object access-modifier="private" name="OperativeStoredInterval" display-name="Хранимый интервал оперативного режима, мин" uuid="f156b2f5-b15e-4a6e-b3c0-2e5db8b89f31" base-type="notifying_uint8" base-type-id="2e6d6c20-2489-49e1-9d5f-fe68a21b43df" ver="5"/>
	<object access-modifier="private" name="OperativeDisplayedInterval" display-name="Отображаемый интервал оперативного режима, мин" uuid="523d6377-a5df-4141-bfba-1011d65280bd" base-type="notifying_uint8" base-type-id="2e6d6c20-2489-49e1-9d5f-fe68a21b43df" ver="5"/>
	<init target="ShowSources" ver="5" value="true"/>
	<init target="ShowDescriptionInTree" ver="5" value="false"/>
	<object access-modifier="private" name="UseRedLine" display-name="Использовать красную линию" uuid="ed2522ba-09a9-40db-ac64-fe3500f65553" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" cardinal="1"/>
	<object access-modifier="private" name="RedLineShift" display-name="Сдвиг красной линии, %" uuid="a6207bc1-bfe4-40a0-a5e3-4a51afaa528b" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="5" description="" cardinal="1"/>
	<object access-modifier="private" name="ShowMilliseconds" display-name="Показывать миллисекунды" uuid="9b282a45-cb6a-4286-a4d0-61f5cf136568" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
	<do access-modifier="private" name="SetGraphicAxis" display-name="SetGraphicAxis" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<param access-modifier="private" name="tag" display-name="" uuid="7d37dad2-0394-49db-aedc-3c2e4b7ce9fe" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="axisTag" display-name="" uuid="fd00baa3-5f78-4b4d-b551-e7231e578804" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<body kind="om">
			<![CDATA[WS.RS.Chart.SetGraphicAxis(tag, axisTag);]]>
		</body>
	</do>
	<init target="GlobalRanges" ver="5" value="true"/>
	<init target="OperativeStoredInterval" ver="5" value="60"/>
	<init target="YAxisPrecision" ver="5" value="4"/>
	<init target="InterpolationLine" ver="5" value="false"/>
	<do access-modifier="private" name="SetIndividualRange" display-name="SetIndividualRange" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[WS.RS.Chart.SetIndividualRange(tag, lowRange, highRange);]]>
		</body>
		<param access-modifier="private" name="tag" display-name="" uuid="fc2e2996-e696-48c8-977d-4b8f21bac555" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="lowRange" display-name="" uuid="b98cdc78-db77-4514-9a11-29c4e7533142" base-type="double" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="5"/>
		<param access-modifier="private" name="highRange" display-name="" uuid="9121dcc5-1c84-4206-87c2-e8f4e22f8f31" base-type="double" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="5"/>
	</do>
	<do access-modifier="private" name="FitToScreen" display-name="FitToScreen" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[WS.RS.Chart.FitToScreen();]]>
		</body>
	</do>
	<do access-modifier="private" name="SetHistoricalInterval" display-name="SetHistoricalInterval" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="om">
			<![CDATA[if (dtTo <= dtFrom)
	return false;

WS.RS.Chart.SetTimeInterval(DateTime.ToUtc(dtFrom), DateTime.ToUtc(dtTo));
WS.RS.Chart.LoadHistoricalData();
return true;]]>
		</body>
		<param access-modifier="private" name="dtFrom" display-name="" uuid="0bd10ad6-91ae-4efb-aba9-918d6b79f94a" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="5"/>
		<param access-modifier="private" name="dtTo" display-name="" uuid="0f8cc67f-925b-4da4-897d-9ff6eb3af383" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="5"/>
	</do>
	<do access-modifier="private" name="ReloadHistoricalData" display-name="ReloadHistoricalData" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[WS.RS.Chart.LoadHistoricalData();]]>
		</body>
	</do>
	<do access-modifier="private" name="SaveSignalsList" display-name="SaveSignalsList" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="om">
			<![CDATA[filePath: string = private.GetAbsolutePath(unit.ProductInfo.GetProgramDataFolder(), fileName);
return WS.RS.Chart.SaveSignalsList(filePath);]]>
		</body>
		<param access-modifier="private" name="fileName" display-name="" uuid="b461587f-1f21-4c46-9454-ba454c2327a5" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
	</do>
	<do access-modifier="private" name="LoadSignalsList" display-name="LoadSignalsList" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="om">
			<![CDATA[filePath: string = private.GetAbsolutePath(unit.ProductInfo.GetProgramDataFolder(), fileName);
return WS.RS.Chart.LoadSignalsList(filePath);]]>
		</body>
		<param access-modifier="private" name="fileName" display-name="" uuid="4d065baf-d06e-4119-b908-e898e1f964f9" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
	</do>
	<init target="UseRedLine" ver="5" value="false"/>
	<init target="ShowMilliseconds" ver="5" value="false"/>
	<init target="OperativeDisplayedInterval" ver="5" value="10"/>
	<object access-modifier="private" name="ControlLineWidth" display-name="Ширина реперных линий" uuid="e22dece1-bd70-4d31-a72e-edf3aac5eaea" base-type="notifying_float" base-type-id="bb7d05ee-cbf0-4c44-8740-1905239c8ead" ver="5"/>
	<object access-modifier="private" name="ControlLineSelectWidth" display-name="Ширина выделенной реперной линии" uuid="5f6fddac-69ea-4baf-8a0c-cd14bca8c40c" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="5"/>
	<object access-modifier="private" name="ControlLineColor" display-name="Цвет реперных линий" uuid="b0feaf6a-7217-4ed5-a3ec-eab081f0fcfb" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="5"/>
	<object access-modifier="private" name="ControlLineSelectColor" display-name="Цвет выделенной реперной линии" uuid="f69d3d32-5eb6-41ca-887f-5b29c3bb7f9d" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="5"/>
	<init target="ControlLineWidth" ver="5" value="1.5"/>
	<init target="ControlLineSelectWidth" ver="5" value="2"/>
	<init target="ControlLineColor" ver="5" value="0xff000000"/>
	<init target="ControlLineSelectColor" ver="5" value="0xffff0000"/>
	<object access-modifier="private" name="ToolBar" display-name="ToolBar" uuid="4a2c8598-56d9-4182-bca5-96d928fd14b6" base-type="Trends_ToolBar" base-type-id="c5a94cf9-44f5-45cc-b455-7d86479be8ca" ver="5">
		<designed target="X" value="0" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<init target="OnClickTreeVisible" ver="5" ref="WS.ItemsTree.SwitchVisible"/>
		<init target="OnClickShowLegend" ver="5" ref="WS.RS.Legend.SwitchVisible"/>
		<do-trace access-modifier="private" target="Visible" ver="5">
			<body>
				<![CDATA[here.ShowToolbar ]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="ShowLegend" ver="5">
			<body>
				<![CDATA[here.ShowLegend]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="ShowSources" ver="5">
			<body>
				<![CDATA[here.ShowSources]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="IsVisible" ver="5">
			<body>
				<![CDATA[ShowToolbar]]>
			</body>
		</do-trace>
		<designed target="Height" value="35" ver="5"/>
		<designed target="Width" value="900" ver="5"/>
		<init target="pChart" ver="5" ref="WS.RS.Chart"/>
		<init target="pChartPrint" ver="5" ref="WS.RS.ChartPrint"/>
		<init target="pEditSettings" ver="5" ref="here.private.EditSettings"/>
		<init target="pSaveScreenshot" ver="5" ref="here.private.SaveScreenshot"/>
		<init target="pShowPrintDialog" ver="5" ref="here.private.ShowPrintDialog"/>
		<init target="init_Theme" ver="5" ref="here.init_Theme"/>
		<init target="init_Permissions" ver="5" ref="here.init_Permissions"/>
		<init target="pOnPrintMenuClock" ver="5" ref="here.private.DoOnPrintMenuClick"/>
	</object>
	<init target="ShowStatus" ver="5" value="true"/>
	<object access-modifier="private" name="ControlLineMultipleAdd" display-name="Множественное добавление реперов" uuid="f60afa6b-a10b-4a51-9dda-d3accf7c6c0e" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
	<object access-modifier="private" name="ShowDescriptionInTree" display-name="Показывать описание в дереве сигналов" uuid="ef9025a2-bdf7-40f2-bc33-1f35b27977fc" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
	<object access-modifier="private" name="UseCustomTree" display-name="Пользовательское дерево сигналов" uuid="65555994-dd06-4df4-848b-f6c68b994c9a" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[// обрабатываем это событие только после инициализации,
// до инициализации дерево загрузится при срабатывании ValueChanged у UseCustomTree
if (private.initialized)
{
	if (value)
	{
		private.LoadCustomTree(FileUserSignalTree);
	}
	else
	{
		if (ApSource_Trends.ConnectionState == unit.Const.stADVISED_OK)
			WS.ItemsTree.Browse();
	}
}]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="FileUserSignalTree" display-name="Файл пользовательского дерева сигналов" uuid="dca0b2bf-51f6-459f-aa11-8c9869a6ee88" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (UseCustomTree)
	private.LoadCustomTree(FileUserSignalTree);]]>
			</body>
		</do-on>
	</object>
	<init target="UseCustomTree" ver="5" value="false"/>
	<object access-modifier="private" name="ModeTimeSourceServer" display-name="Режим времени Источник-Сервер" uuid="616bfebb-ba25-4929-b2a5-14ca44c1bd5e" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="5"/>
	<init target="ModeTimeSourceServer" ver="5" value="0"/>
	<designed target="ZValue" value="0" ver="5"/>
	<object access-modifier="private" name="ConfigurationPath" display-name="Путь к файлам конфигурации" uuid="5def1c99-96df-424e-9953-9400d10843d7" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
	<do access-modifier="private" name="LoadConfiguration" display-name="LoadConfiguration" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="om">
			<![CDATA[private.Initializer();

// Запоминем что начальная загрузка конфигурации состоялась
private.bConfigLoaded = true;

ConfigurationPath = folder;

// предположим, что результат будет успешным
result: bool = true;

// определение пути к папке с конфигурацией
configurationPath: string = private.GetAbsolutePath(unit.ProductInfo.GetProgramDataFolder(), folder);
//Debug.Log("Загрузка конфигурации из папки " + configurationPath);

// загружаем настройки
if (!private.LoadSettings(configurationPath))
	result = false;

// загружаем настройки легенды
if (!WS.RS.Legend.LoadSettings(configurationPath))
	result = false;

return result;]]>
		</body>
		<param access-modifier="private" name="folder" display-name="" uuid="aa3002ad-bf4d-4f17-bd8d-873ffd71bd10" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
	</do>
	<object access-modifier="private" name="ExportImportFolderPath" display-name="Папка для экспорта и импорта" uuid="333af793-686a-478b-9546-b5ba8156fd14" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[if (oldValue != value)
{
	oldValue = value;
	WS.RS.Chart.ExportPath.Update(value, private.pPermissions.FileSystemAccess);
	if (private.initialized)	
		private.DoSaveSettings.Timer.Active = true;
}]]>
			</body>
		</do-on>
		<object access-modifier="private" name="oldValue" display-name="oldValue" uuid="9cb919c5-4a35-4364-a2f3-7714a45e92b9" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
	</object>
	<object access-modifier="private" name="SynchronizeColor" display-name="Синхронизировать цвет графика и оси" uuid="fb15ab60-cad4-4647-904d-34bcfa3ba9b2" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
	<designed target="Opacity" value="1" ver="5"/>
	<object access-modifier="private" name="WS" display-name="WS" uuid="6a1cba2d-acdd-42d8-827a-2dfe0e27452d" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5">
		<designed target="X" value="0" ver="5"/>
		<designed target="Y" value="30" ver="5"/>
		<designed target="ZValue" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Scale" value="1" ver="5"/>
		<designed target="Visible" value="true" ver="5"/>
		<designed target="Opacity" value="1" ver="5"/>
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="Tooltip" value="" ver="5"/>
		<designed target="Width" value="900" ver="5"/>
		<designed target="Height" value="545" ver="5"/>
		<designed target="RoundingRadius" value="0" ver="5"/>
		<designed target="PenColor" value="4278190080" ver="5"/>
		<designed target="PenStyle" value="1" ver="5"/>
		<designed target="PenWidth" value="1" ver="5"/>
		<designed target="BrushColor" value="4278190080" ver="5"/>
		<designed target="BrushStyle" value="0" ver="5"/>
		<object access-modifier="private" name="ItemsTree" display-name="ItemsTree" uuid="76ddf633-46c2-403e-8571-d54ae3d34fe8" base-type="Trends_ItemsTree" base-type-id="2d934a44-5181-41f0-94db-e0e63af54d68" ver="5">
			<designed target="X" value="0" ver="5"/>
			<designed target="Y" value="0" ver="5"/>
			<designed target="Rotation" value="0" ver="5"/>
			<designed target="Width" value="250" ver="5"/>
			<designed target="Height" value="540" ver="5"/>
			<object access-modifier="private" name="DoOnSelectItem" display-name="DoOnSelectItem" uuid="6f2cd50f-804f-44fc-b864-65d93db155ba" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="javascript">
						<![CDATA[//Debug.Log("DoOnSelectItem");
AddItem(-1);]]>
					</body>
				</do-on>
			</object>
			<init target="ApSource" ver="5" ref="ApSource_Trends"/>
			<init target="pOnDoubleClick" ver="5" ref="DoOnSelectItem"/>
			<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="7a3ca1fc-c101-44cd-a462-643cd3945570" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="5">
				<designed target="Weight" value="300" ver="5"/>
			</object>
			<object access-modifier="private" name="SwitchVisible" display-name="SwitchVisible" uuid="d68c37ba-422d-46b7-b2d8-9dfe1c93d212" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[here.ShowSources = !here.ShowSources;
]]>
					</body>
				</do-on>
			</object>
			<do-trace access-modifier="private" target="SearchBarVisible" ver="5">
				<body>
					<![CDATA[here.ShowSources && here.TreeFindEnable]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="DescriptionPreferred" ver="5">
				<body>
					<![CDATA[here.ShowDescriptionInTree]]>
				</body>
			</do-trace>
			<object access-modifier="private" name="SizeLimits" display-name="SizeLimits" uuid="b5a1fb05-d3ce-4609-b52c-c2e04624c6e9" base-type="LayoutSizeLimits" base-type-id="10342c1f-560b-4160-9de5-7e2c08026f47" ver="5" description="" cardinal="1">
				<designed target="MinWidth" value="250" ver="5"/>
				<designed target="MinHeight" value="0" ver="5"/>
				<designed target="MaxWidth" value="250" ver="5"/>
				<designed target="MaxHeight" value="16777215" ver="5"/>
			</object>
			<do access-modifier="private" name="AddItem" display-name="AddItem" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="javascript">
					<![CDATA[if (SelectedItem != "")
{
	// это свойство должно содержать данные в виде массива из одного элемента
	var info = JSON.parse(SelectedItem).data[0];
	var itemIndex = RS.Chart.AddItem(info.tag, info.eunits, info.description, nChart);
	
	// в историческом режиме загружаем данные добавленного графика
	if (itemIndex > 0 && RS.Chart.ActiveMode == unit.Const.amHISTORY)
	{
		RS.Chart.LoadHistoricalData();
	}
}]]>
				</body>
				<param access-modifier="private" name="nChart" display-name="" uuid="478e9b03-fabb-4f2b-bbaf-a246ba06177a" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			</do>
			<object access-modifier="private" name="ShowMenu" display-name="ShowMenu" uuid="691e8141-52e4-407b-9c99-f9d7d379f31f" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-new" form-by-id="false">
					<object access-modifier="private" uuid="48649e4b-6954-4294-ad65-25be105e6bca" base-type="Menu" base-type-id="07bb4545-980a-4140-bbaa-4d1397447864" ver="5">
						<init target="pResult" ver="5" ref="MenuResult"/>
						<init target="pAction" ver="5" ref="OnMenuClick"/>
						<init target="Items" ver="5">
							<expr>
								<![CDATA[GetMenuItems()]]>
							</expr>
						</init>
						<init target="WindowX" ver="5">
							<expr>
								<![CDATA[MouseRightClickX]]>
							</expr>
						</init>
						<init target="WindowY" ver="5">
							<expr>
								<![CDATA[MouseRightClickY]]>
							</expr>
						</init>
						<init target="pTheme" ver="5" ref="here.private.pTheme"/>
					</object>
				</do-on>
				<object access-modifier="private" name="MenuResult" display-name="MenuResult" uuid="c50b4edd-c773-4c23-bae1-ef9cc0b98c1a" base-type="MenuResult" base-type-id="0fe7658c-92f4-4af7-b038-3594414ac651" ver="5"/>
				<object access-modifier="private" name="OnMenuClick" display-name="OnMenuClick" uuid="e1b1d0d1-0cee-4224-9578-3e1ab64997de" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="javascript">
							<![CDATA[var cmd = MenuResult.Id;
var info = JSON.parse(SelectedItem).data[0];

if (cmd == "add")
{
	if (RS.Chart.Params.TagIsUse(info.tag))
	{
		var itemIndex = RS.Chart.Params.GetIndexByPath(info.tag);
		RS.Chart.Lines.SetVisible(itemIndex, true);
		RS.Chart.Lines.SetSelect(itemIndex);
		RS.Legend.Update();
	}
	else
	{
		AddItem(-1);
	}
}
else if (cmd.substr(0, 6) == "chart_")
{
	var newChart = cmd.substr(6);
	var nChart = (newChart == "new") ? RS.Chart.Params.Charts.GetFree() : newChart;
	if (RS.Chart.Params.TagIsUse(info.tag))
	{
		var itemIndex = RS.Chart.Params.GetIndexByPath(info.tag);
		RS.Chart.Lines.SetChart(itemIndex, nChart);
	}
	else
	{
		AddItem(nChart);
	}
	RS.Chart.Axis.LinkUpdate(RS.Chart.GlobalRanges);
	RS.Chart.UpdateYRanges(RS.Chart.AutoRange);
} ]]>
						</body>
					</do-on>
				</object>
				<do access-modifier="private" name="GetMenuItems" display-name="GetMenuItems" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[// Определяем тэг выделенного элемента
// это свойство должно содержать данные в виде массива из одного элемента
var info = JSON.parse(SelectedItem).data[0];
var selItem = RS.Chart.Params.GetIndexByPath(info.tag);
// Определяем поле графика, если график уже добавлен
var ownChart = selItem>0 ? RS.Chart.Params.Lines[selItem].nChart : -1;

var items = [];

items.push({'id':"add", 'title':"Показать график сигнала", 'icon': "Trends_Icons/Add16.png"});

var chartsItem = { 'id': 9, 'title': "Разместить график на поле" };
chartsItem.items = [];
chartsItem.items.push({ 'id': "chart_new", 'title': "Новое поле" });
chartsItem.items.push({ 'title': "-" });
var i = 0;
var n = 0;
while (i < WS.RS.Chart.Params.Charts.Length)
{
	if (WS.RS.Chart.Params.Charts[i].bVisible)
	{
		n += 1;
		chartsItem.items.push({ 'id': "chart_"+i, 'title': n, 'active': i!=ownChart});
	}
	i += 1;
}
items.push(chartsItem);

return JSON.stringify(items);]]>
					</body>
				</do>
			</object>
			<init target="pOnRightClick" ver="5" ref="ShowMenu"/>
			<init target="pTheme" ver="5" ref="here.init_Theme"/>
		</object>
		<object access-modifier="private" name="Splitter" display-name="Splitter" uuid="1c62ff0a-86ba-4516-b4ca-06dd76f5893a" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5">
			<designed target="X" value="250" ver="5"/>
			<designed target="Y" value="0" ver="5"/>
			<designed target="ZValue" value="0" ver="5"/>
			<designed target="Rotation" value="0" ver="5"/>
			<designed target="Scale" value="1" ver="5"/>
			<designed target="Visible" value="true" ver="5"/>
			<designed target="Opacity" value="1" ver="5"/>
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="Tooltip" value="" ver="5"/>
			<designed target="Width" value="4" ver="5"/>
			<designed target="Height" value="540" ver="5"/>
			<designed target="RoundingRadius" value="0" ver="5"/>
			<designed target="PenColor" value="0xff808080" ver="5"/>
			<designed target="PenStyle" value="1" ver="5"/>
			<designed target="PenWidth" value="1" ver="5"/>
			<designed target="BrushColor" value="0xfff0f0f0" ver="5"/>
			<designed target="BrushStyle" value="1" ver="5"/>
			<object access-modifier="private" name="bPressed" display-name="bPressed" uuid="1c7aa8bd-b545-4ffe-a60e-be945898b655" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="MouseMove">
				<body kind="om">
					<![CDATA[if (bPressed)
{
	distance: double = Distance + event.X;
	
	min: double = 30;
	if (distance < min)
		distance = min;
		
	max: double = parent.Width - 30;
	if (distance > max)
		distance = max;
	
	if (Distance != distance)
	{
		Distance = distance;
		ItemsTree.SizeLimits.MinWidth = Distance;
		ItemsTree.SizeLimits.MaxWidth = Distance;
	}
}]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="MousePress">
				<body kind="om">
					<![CDATA[bPressed = true;
]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="MouseRelease">
				<body kind="om">
					<![CDATA[if (bPressed)
{
	bPressed = false;
	private.SaveConfiguration();
}]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="5" event="MouseEnter">
				<body kind="om">
					<![CDATA[MouseIsOver = true;]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="5" event="MouseLeave">
				<body kind="om">
					<![CDATA[MouseIsOver = false;
bPressed = false;]]>
				</body>
			</do-on>
			<do-trace access-modifier="private" target="BrushColor" ver="5">
				<body>
					<![CDATA[MouseIsOver ? private.pTheme.SelectionColor : private.pTheme.BackgroundColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="PenColor" ver="5">
				<body>
					<![CDATA[private.pTheme.BorderColor]]>
				</body>
			</do-trace>
			<object access-modifier="private" name="SizeLimits" display-name="SizeLimits" uuid="6c8d3cb9-4f4d-4b4e-afca-fa093e9e8c19" base-type="LayoutSizeLimits" base-type-id="10342c1f-560b-4160-9de5-7e2c08026f47" ver="5" description="" cardinal="1">
				<designed target="MinWidth" value="4" ver="5"/>
				<designed target="MinHeight" value="0" ver="5"/>
				<designed target="MaxWidth" value="4" ver="5"/>
				<designed target="MaxHeight" value="16777215" ver="5"/>
			</object>
			<object access-modifier="private" name="MouseIsOver" display-name="MouseIsOver" uuid="af143177-5f7b-4bc2-b966-7f4132263d31" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="Distance" display-name="Distance" uuid="d55fbeff-1c80-403b-a521-208332450bbd" base-type="double" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="5" description="" cardinal="1"/>
			<designed target="Flip" value="0" ver="5"/>
			<init target="Distance" ver="5" value="250"/>
		</object>
		<object access-modifier="private" name="RS" display-name="RS" uuid="cd0d8c63-fbcd-47e2-8d74-63688e07271c" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5">
			<designed target="X" value="254" ver="5"/>
			<designed target="Y" value="0" ver="5"/>
			<designed target="ZValue" value="0" ver="5"/>
			<designed target="Rotation" value="0" ver="5"/>
			<designed target="Scale" value="1" ver="5"/>
			<designed target="Visible" value="true" ver="5"/>
			<designed target="Opacity" value="1" ver="5"/>
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="Tooltip" value="" ver="5"/>
			<designed target="Width" value="646" ver="5"/>
			<designed target="Height" value="545" ver="5"/>
			<designed target="RoundingRadius" value="0" ver="5"/>
			<designed target="PenColor" value="4278190080" ver="5"/>
			<designed target="PenStyle" value="0" ver="5"/>
			<designed target="PenWidth" value="1" ver="5"/>
			<designed target="BrushColor" value="4278190080" ver="5"/>
			<designed target="BrushStyle" value="0" ver="5"/>
			<object access-modifier="private" name="LayoutWeight" display-name="LayoutWeight" uuid="dae4ffa3-d533-4101-b406-a8084455fa68" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="5">
				<designed target="Weight" value="800" ver="5"/>
			</object>
			<object access-modifier="private" name="Layout" display-name="Layout" uuid="e2d2f0ff-a443-40de-ba75-38c88b5238b1" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="5">
				<designed target="Orientation" value="2" ver="5"/>
				<designed target="Gap" value="0" ver="5"/>
			</object>
			<object access-modifier="private" name="Chart" display-name="Chart" uuid="9f316d5e-1940-40f2-9cdf-7daeafe31d10" base-type="Trends_Chart" base-type-id="659f73ba-7fa5-4aa4-ac4d-623541275829" ver="5">
				<designed target="X" value="0" ver="5"/>
				<designed target="Y" value="0" ver="5"/>
				<designed target="Rotation" value="0" ver="5"/>
				<designed target="Width" value="646" ver="5"/>
				<designed target="Height" value="400.18918918918916" ver="5"/>
				<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="01aea010-152e-447b-8253-7640be2d16cf" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="5">
					<designed target="Weight" value="442" ver="5"/>
				</object>
				<do-trace access-modifier="private" target="ControlLineWidth" ver="5">
					<body>
						<![CDATA[here.ControlLineWidth]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="ControlLineSelectWidth" ver="5">
					<body>
						<![CDATA[here.ControlLineSelectWidth]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="ControlLineColor" ver="5">
					<body>
						<![CDATA[here.ControlLineColor]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="ControlLineSelectColor" ver="5">
					<body>
						<![CDATA[here.ControlLineSelectColor]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="DeltaLineWidth" ver="5">
					<body>
						<![CDATA[here.DeltaLineWidth]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="ShowMilliseconds" ver="5">
					<body>
						<![CDATA[here.ShowMilliseconds]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="SynchroColorMarker" ver="5">
					<body>
						<![CDATA[here.SynchroColorMarker]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="TicksCountAxisX" ver="5">
					<body>
						<![CDATA[here.TicksCountAxisX]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="TicksCountAxisY" ver="5">
					<body>
						<![CDATA[here.TicksCountAxisY]]>
					</body>
				</do-trace>
				<init target="ActiveMode" ver="5" value="0"/>
				<do-trace access-modifier="private" target="ControlLineMultipleAdd" ver="5">
					<body>
						<![CDATA[here.ControlLineMultipleAdd]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="OperativeStoredInterval" ver="5">
					<body>
						<![CDATA[here.OperativeStoredInterval]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="ShowRedLine" ver="5">
					<body>
						<![CDATA[here.UseRedLine && 
this.ActiveMode==unit.Const.amOPERATIVE]]>
					</body>
				</do-trace>
				<init target="pOnDrop" ver="5" ref="DoOnChartDrop"/>
				<do-trace access-modifier="private" target="RedLineShift" ver="5">
					<body>
						<![CDATA[here.RedLineShift]]>
					</body>
				</do-trace>
				<init target="DataUpdatePeriod" ver="5">
					<expr>
						<![CDATA[here.DataUpdatePeriod]]>
					</expr>
				</init>
				<do-trace access-modifier="private" target="YAxisPrecision" ver="5">
					<body kind="om">
						<![CDATA[here.YAxisPrecision]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="ViewInterval" ver="5">
					<body>
						<![CDATA[here.OperativeDisplayedInterval]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="LowRange" ver="5">
					<body>
						<![CDATA[here.LowRange]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="HighRange" ver="5">
					<body>
						<![CDATA[here.HighRange]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="GraphicThickness" ver="5">
					<body>
						<![CDATA[here.GraphicThickness]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="InterpolationLine" ver="5">
					<body>
						<![CDATA[here.InterpolationLine]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="SynchronizeColor" ver="5">
					<body>
						<![CDATA[here.SynchronizeColor]]>
					</body>
				</do-trace>
				<object access-modifier="private" name="ShowContextMenu" display-name="ShowContextMenu" uuid="e0a1e1c6-7a5a-438c-bc7e-b45ac8160796" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-new" form-by-id="false">
						<object access-modifier="private" uuid="95a20cb1-1932-48a0-86a8-c4d1a20997b3" base-type="Menu" base-type-id="07bb4545-980a-4140-bbaa-4d1397447864" ver="5">
							<init target="pResult" ver="5" ref="MenuResult"/>
							<init target="pAction" ver="5" ref="OnMenuClick"/>
							<init target="WindowX" ver="5">
								<expr>
									<![CDATA[String.ToInt4(GetEventParam(0), 0)]]>
								</expr>
							</init>
							<init target="WindowY" ver="5">
								<expr>
									<![CDATA[String.ToInt4(GetEventParam(1), 0)]]>
								</expr>
							</init>
							<init target="Items" ver="5">
								<expr>
									<![CDATA[GetMenuItems()]]>
								</expr>
							</init>
							<init target="pTheme" ver="5" ref="here.private.pTheme"/>
						</object>
					</do-on>
					<object access-modifier="private" name="OnMenuClick" display-name="OnMenuClick" uuid="60902d2a-6539-4fed-b39f-75a875fe89ea" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
						<designed target="Enabled" value="true" ver="5"/>
						<designed target="InvokeTrigger" value="false" ver="5"/>
						<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
							<body kind="om">
								<![CDATA[cmd: string = MenuResult.Id;

if (cmd == "PAUSE")
{
	SetPause(true);
}
else if (cmd == "PLAY")
{
	SetPause(false);
}
else if (cmd == "TREE")
{
	ShowSources = !ShowSources;
}
else if (cmd == "TOOLBAR")
{
	ShowToolbar = !ShowToolbar;
}
else if (cmd == "LEGEND")
{
	ShowLegend = !ShowLegend;
}
else if (cmd == "ONLY")
{
	shownOnlyChart: bool = !ShowToolbar && !ShowLegend && !ShowSources;
	// если отображаются только графики, то показываем все панели, иначе скрываем их
	ShowToolbar = shownOnlyChart;
	ShowLegend = shownOnlyChart;
	ShowSources = shownOnlyChart;
}
else if (cmd == "REMOVE")
{
	selectChart: int4 = SelectedChart;
	Chart[selectChart].SetVisible(false);
	i:int4 = 1;
	while (i <= unit.Const.MAX_LINES)
	{
		if (Params.Lines[i].Used && Params.Lines[i].nChart==selectChart)
		{
			Lines.SetChart(i, Chart.GetFirst());
			Lines.SetVisible(i, false);
		}
		i += 1;
	}
}
else if (cmd == "SCREENSHOT")
{
	here.private.SaveScreenshot.Invoke();
}
else if (cmd == "OPTIONS")
{
	here.private.EditSettings.Invoke();
}]]>
							</body>
						</do-on>
					</object>
					<do access-modifier="private" name="GetMenuItems" display-name="GetMenuItems" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
						<body kind="javascript">
							<![CDATA[var items = [];

if (ActiveMode == unit.Const.amOPERATIVE)
{
	if (private.bPlayStatus.Value)
		items.push({'id':"PAUSE", 'title':"Приостановить", 'icon': "Trends_Icons/Pause16.png"});
	else	items.push({'id':"PLAY", 'title':"Продолжить", 'icon': "Trends_Icons/Play16.png"});
	items.push({'title':"-"});
}

var viewItem = {'id':"VIEW", 'title':"Вид"};
viewItem.items = [];
viewItem.items.push({'id':"TREE", 		'title':"Дерево сигналов", 			'checked':ShowSources.Value});
viewItem.items.push({'id':"TOOLBAR",	'title':"Панель инструментов",	'checked':ShowToolbar.Value});
viewItem.items.push({'id':"LEGEND",		'title':"Легенда", 							'checked':ShowLegend.Value});
items.push(viewItem);

var shownOnlyChart = !ShowToolbar.Value && !ShowLegend.Value && !ShowSources.Value;
items.push({'id':"ONLY", 'title':"Отобразить только графики", 'checked':shownOnlyChart});

var i = 0;
var countCharts = 0
while (i < Params.Charts.Length)
{
	if (Params.Charts[i].bVisible) countCharts += 1;
	i += 1;
}
items.push({'id':"REMOVE", 'title':"Удалить трендовое поле", 'active':countCharts>1 });

if (ToolBar.Runtime.WorkMode==unit.Const.rwmDESIGNER)
{
	items.push({'title':"-"});
	items.push({'id':"SCREENSHOT", 'title':"Сохранить текущее изображение в файл...", 'icon': "Trends_Icons/Camera16.png" });
}

if (here.private.pPermissions.EditSettings.Value)
{
	items.push({'title':"-"});
	items.push({'id':"OPTIONS", 'title':"Параметры...", 'icon': "Trends_Icons/Options16.png" });
}

return JSON.stringify(items);]]>
						</body>
					</do>
					<object access-modifier="private" name="MenuResult" display-name="MenuResult" uuid="9226e583-abd6-444f-b823-8e978682c2b7" base-type="MenuResult" base-type-id="0fe7658c-92f4-4af7-b038-3594414ac651" ver="5"/>
				</object>
				<init target="pOnMouseRightRelease" ver="5" ref="ShowContextMenu"/>
				<do-trace access-modifier="private" target="UseServerTime" ver="5">
					<body>
						<![CDATA[here.UseServerTime]]>
					</body>
				</do-trace>
				<object access-modifier="private" name="DataSaved" display-name="DataSaved" uuid="76bdfb54-1b17-47bb-8597-a027592d353c" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[filePath: string = GetEventParam(0);

if (filePath != "")
{
	// уведомляем об экспорте графиков в файл
	here.private.EventParams[0] = filePath;
	here.OnDataSave.Invoke();
	
	if (filePath != "")
	{		
		here.private.ShowComplete.message = "Данные сохранены в файл \n" + filePath;
		here.private.ShowComplete.Invoke();
		
		here.private.OnExportImportFinished(filePath);
	}
}]]>
						</body>
					</do-on>
				</object>
				<object access-modifier="private" name="DataLoaded" display-name="DataLoaded" uuid="b9b1b747-ec40-4c62-90a9-e46d7e0cbabf" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[filePath: string = GetEventParam(0);
//Debug.Log("Загружены графики из файла " + filePath);

if (filePath != "")
	here.private.OnExportImportFinished(filePath);]]>
						</body>
					</do-on>
				</object>
				<init target="pOnTableExport" ver="5" ref="TableExported"/>
				<init target="pOnDataSave" ver="5" ref="DataSaved"/>
				<object access-modifier="private" name="SignalListSaved" display-name="SignalListSaved" uuid="ad8c2f3e-5306-48a1-8b4a-b15ca39e19be" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[filePath: string = GetEventParam(0);

// уведомляем сохранении списка сигналов в файл
here.private.EventParams[0] = filePath;
here.OnSaveSignalList.Invoke();

here.private.ShowComplete.message = "Список сигналов сохранен в файл \n" + filePath;
here.private.ShowComplete.Invoke();

here.private.OnExportImportFinished(filePath);]]>
						</body>
					</do-on>
				</object>
				<init target="pOnSaveSignalsList" ver="5" ref="SignalListSaved"/>
				<object access-modifier="private" name="SignalListLoaded" display-name="SignalListLoaded" uuid="71306913-3e2a-491c-93e7-5c65203376a1" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[filePath: string = GetEventParam(0);
//Debug.Log("Загружен список сигналов " + filePath);

here.private.OnExportImportFinished(filePath);]]>
						</body>
					</do-on>
				</object>
				<object access-modifier="private" name="TableExported" display-name="TableExported" uuid="b16c90bb-1506-4555-b1b8-3c16737933f8" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[filePath: string = GetEventParam(0);

// уведомляем об экспорте таблицы с данными в файл
here.private.EventParams[0] = filePath;
here.OnTableExport.Invoke();

here.private.OnExportImportFinished(filePath);]]>
						</body>
					</do-on>
				</object>
				<init target="pOnLoadSignalsList" ver="5" ref="SignalListLoaded"/>
				<object access-modifier="private" name="ErrorOccurred" display-name="ErrorOccurred" uuid="34fba958-d71a-4f85-b969-a00cefccd824" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[here.private.ShowError.message = parent.GetEventParam(0);
here.private.ShowError.Invoke();
]]>
						</body>
					</do-on>
				</object>
				<init target="initApSource" ver="5" ref="here.int_AP"/>
				<do-trace access-modifier="private" target="ModeTimeSourceServer" ver="5">
					<body>
						<![CDATA[here.ModeTimeSourceServer]]>
					</body>
				</do-trace>
				<init target="pLegend" ver="5" ref="Legend"/>
				<init target="pOnDataLoad" ver="5" ref="DataLoaded"/>
				<init target="init_Theme" ver="5" ref="here.init_Theme"/>
				<init target="pOnError" ver="5" ref="ErrorOccurred"/>
				<init target="init_ScreenKeyboard" ver="5" ref="here.init_ScreenKeyboard"/>
			</object>
			<object access-modifier="private" name="Splitter" display-name="Splitter" uuid="c8b275d3-c8ae-4310-9505-080a930ea34f" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5">
				<designed target="X" value="0" ver="5"/>
				<designed target="Y" value="403.92229729729729" ver="5"/>
				<designed target="ZValue" value="0" ver="5"/>
				<designed target="Rotation" value="0" ver="5"/>
				<designed target="Scale" value="1" ver="5"/>
				<designed target="Visible" value="true" ver="5"/>
				<designed target="Opacity" value="1" ver="5"/>
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="Tooltip" value="" ver="5"/>
				<designed target="Width" value="646" ver="5"/>
				<designed target="Height" value="4" ver="5"/>
				<designed target="RoundingRadius" value="0" ver="5"/>
				<designed target="PenColor" value="0xff808080" ver="5"/>
				<designed target="PenStyle" value="1" ver="5"/>
				<designed target="PenWidth" value="1" ver="5"/>
				<designed target="BrushColor" value="0xfff0f0f0" ver="5"/>
				<designed target="BrushStyle" value="1" ver="5"/>
				<object access-modifier="private" name="bPressed" display-name="bPressed" uuid="65567a63-8234-4391-bb5a-c0c16b1802ea" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="MouseMove">
					<body kind="om">
						<![CDATA[if (bPressed)
{
	Legend.legendHeight -= MouseY;
	if (Legend.legendHeight < 20)
		Legend.legendHeight = 20;		
	Legend.bAutosize = false;
	RS.LayoutUpdate();
}]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="MousePress">
					<body kind="om">
						<![CDATA[bPressed = true;
]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="MouseRelease">
					<body kind="om">
						<![CDATA[if (bPressed)
{
	bPressed = false;
}]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="5" event="MouseEnter">
					<body kind="om">
						<![CDATA[MouseIsOver = true;]]>
					</body>
				</do-on>
				<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="5" event="MouseLeave">
					<body kind="om">
						<![CDATA[MouseIsOver = false;
bPressed = false;]]>
					</body>
				</do-on>
				<do-trace access-modifier="private" target="BrushColor" ver="5">
					<body>
						<![CDATA[MouseIsOver ? private.pTheme.SelectionColor : private.pTheme.BackgroundColor]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="PenColor" ver="5">
					<body>
						<![CDATA[private.pTheme.BorderColor]]>
					</body>
				</do-trace>
				<object access-modifier="private" name="SizeLimits" display-name="SizeLimits" uuid="f0b83223-8332-4efa-81ae-a84a5748b784" base-type="LayoutSizeLimits" base-type-id="10342c1f-560b-4160-9de5-7e2c08026f47" ver="5" description="" cardinal="1">
					<designed target="MinWidth" value="0" ver="5"/>
					<designed target="MinHeight" value="4" ver="5"/>
					<designed target="MaxWidth" value="16777215" ver="5"/>
					<designed target="MaxHeight" value="4" ver="5"/>
				</object>
				<object access-modifier="private" name="MouseIsOver" display-name="MouseIsOver" uuid="952dd3f2-6728-475c-9c15-5c0c2caaccea" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1"/>
				<designed target="Flip" value="0" ver="5"/>
			</object>
			<object access-modifier="private" name="Legend" display-name="Legend" uuid="2d29630b-be84-46ea-b981-4ec3e9306d29" base-type="Trends_Legend" base-type-id="12a9628e-5f57-42ef-afe7-6a7cf5b34b8d" ver="5">
				<designed target="X" value="0" ver="5"/>
				<designed target="Y" value="404.18918918918916" ver="5"/>
				<designed target="Rotation" value="0" ver="5"/>
				<designed target="Width" value="646" ver="5"/>
				<designed target="Height" value="135.81081081081081" ver="5"/>
				<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="561add59-328c-4efd-913e-7d447f3d8977" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="5">
					<designed target="Weight" value="150" ver="5"/>
				</object>
				<object access-modifier="private" name="SwitchVisible" display-name="SwitchVisible" uuid="ad5b4330-56a7-4029-8ba8-1e7f653493c8" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[here.ShowLegend = !here.ShowLegend;]]>
						</body>
					</do-on>
				</object>
				<do-trace access-modifier="private" target="ShowFullDescription" ver="5">
					<body>
						<![CDATA[here.ShowFullDescription]]>
					</body>
				</do-trace>
				<object access-modifier="private" name="DragNDrop_1" display-name="DragNDrop_1" uuid="97d9f799-4301-452a-879f-1b5699af578e" base-type="DragNDrop" base-type-id="c4ddb32f-3653-44c8-be57-3a595e10c2fb" ver="5">
					<designed target="DragEnabled" value="true" ver="5"/>
					<designed target="DropEnabled" value="true" ver="5"/>
					<designed target="Image" value="" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="OnDrop">
						<body kind="om">
							<![CDATA[json: string = data.GetText();
DoOnDrop(json, -1);]]>
						</body>
					</do-on>
					<object access-modifier="private" name="LayoutWeight_2" display-name="LayoutWeight_2" uuid="79eae102-ca23-45ba-b6e8-5b993aff0dad" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="5">
						<designed target="Weight" value="0" ver="5"/>
					</object>
				</object>
				<object access-modifier="private" name="RowsChanged" display-name="RowsChanged" uuid="03da6a79-a9ad-4950-9e60-c879e2e01e5f" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[RS.LayoutUpdate();]]>
						</body>
					</do-on>
				</object>
				<init target="pOnRowsChanged" ver="5" ref="RowsChanged"/>
				<do-trace access-modifier="private" target="ShowMilliseconds" ver="5">
					<body>
						<![CDATA[here.ShowMilliseconds]]>
					</body>
				</do-trace>
				<object access-modifier="private" name="legendHeight" display-name="legendHeight" uuid="1dd40e5b-a2d6-4bdb-bb68-d1989e51afdd" base-type="double" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="5"/>
				<init target="legendHeight" ver="5" value="250"/>
				<object access-modifier="private" name="bAutosize" display-name="bAutosize" uuid="685ec39f-7614-4e90-a910-8d6d5ae3cce1" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
				<init target="bAutosize" ver="5" value="true"/>
				<init target="pChart" ver="5" ref="Chart"/>
				<do-trace access-modifier="private" target="ShowRelativeTag" ver="5">
					<body>
						<![CDATA[here.ShowRelativeTag]]>
					</body>
				</do-trace>
				<object access-modifier="private" name="ShowContextMenu" display-name="ShowContextMenu" uuid="76e6c66d-280a-4de2-9de5-bf998425b464" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-new" form-by-id="false">
						<object access-modifier="private" uuid="6d51af3d-789c-4a88-a7f7-b9846b247399" base-type="Menu" base-type-id="07bb4545-980a-4140-bbaa-4d1397447864" ver="5">
							<init target="pResult" ver="5" ref="MenuResult"/>
							<init target="pAction" ver="5" ref="OnMenuClick"/>
							<init target="WindowX" ver="5">
								<expr>
									<![CDATA[String.ToInt4(GetEventParam(0), 0)]]>
								</expr>
							</init>
							<init target="WindowY" ver="5">
								<expr>
									<![CDATA[String.ToInt4(GetEventParam(1), 0)]]>
								</expr>
							</init>
							<init target="Items" ver="5">
								<expr>
									<![CDATA[GetMenuItems()]]>
								</expr>
							</init>
							<init target="pTheme" ver="5" ref="here.private.pTheme"/>
						</object>
					</do-on>
					<object access-modifier="private" name="MenuResult" display-name="MenuResult" uuid="47bc3df7-ae7a-4581-99e5-04d6870024ca" base-type="MenuResult" base-type-id="0fe7658c-92f4-4af7-b038-3594414ac651" ver="5"/>
					<object access-modifier="private" name="OnMenuClick" display-name="OnMenuClick" uuid="f21b877e-6129-4652-aafa-21fdebc1c030" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
						<designed target="Enabled" value="true" ver="5"/>
						<designed target="InvokeTrigger" value="false" ver="5"/>
						<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
							<body kind="javascript">
								<![CDATA[var cmd = MenuResult.Id;

// Получаем массив индексов графиков из массива выделенных строк
var i = 0;
var selItems = [];
var sel = JSON.parse(View.GetSelectedRows());
while (i < sel.length)
{
	selItems[i] = iItemInLegend[sel[i]];
	i += 1;
}

i = 0;
if (cmd == "1")
{
	// Значение видимости применяется для всех графиков одинаково по последнему выделенному графику
	var showMarkers = Chart.Params.Lines[selItems[0]].bShowMarkerLabels;
	while (i < sel.length)
	{
		Chart.private.SetMarkerLabelVisible(selItems[i], !showMarkers);
		i += 1;
	}
}
else if (cmd == "2")
{
	// Значение видимости применяется для всех графиков одинаково по последнему выделенному графику
	var lineVisible = Chart.Params.Lines[selItems[0]].bVisible;
	while (i < sel.length)
	{
		Chart.Lines.SetVisible(selItems[i], !lineVisible);
		i += 1;
	}
	Chart.Axis.LinkUpdate(Chart.GlobalRanges);
	Chart.UpdateYRanges(Chart.AutoRange);
	Chart.Axis.WidthUpdate();
}
else if (cmd.substr(0, 6) == "chart_")
{
	var newChart = cmd.substr(6);
	var nChart = (newChart == "new") ? Chart.Params.Charts.GetFree() : newChart;
	while (i < sel.length)
	{
		Chart.Lines.SetChart(selItems[i], nChart);
		i += 1;
	}
	Chart.Axis.LinkUpdate(Chart.GlobalRanges);
	Chart.UpdateYRanges(Chart.AutoRange);
} 
else if (cmd.substr(0, 4) == "tag_")
{
	var tag = cmd.substr(4);
	while (i < sel.length)
	{
		SetGraphicAxis(selItems[i], tag);
		i += 1;
	}
} 
else if (cmd == "5" || cmd == "6")
{
	while (i < sel.length)
	{
		var itemIndex = selItems[i];
		var path = Chart.Params.Lines[itemIndex].Tag;
		var EU = Chart.Params.Lines[itemIndex].Unit;
		var description = Chart.Params.Lines[itemIndex].Description;
		var nChart = Chart.Params.Lines[itemIndex].nChart;
		var nXColumn = Chart.Params.Lines[itemIndex].nXColumn;
		// Добавляем график с нужным временем, если оно не такое как требуется
		if (cmd == "5" && nXColumn != unit.Const.tmSOURCE)
			Chart.private.ItemsAdd(path, EU, description, unit.Const.tmSOURCE, unit.Const.tgMAIN_GRAPH, nChart);
		else if (cmd == "6" && nXColumn != unit.Const.tmSERVER)
			Chart.private.ItemsAdd(path, EU, description, unit.Const.tmSERVER, unit.Const.tgMAIN_GRAPH, nChart);
		i += 1;
	}
	Legend.Update();
}
else if (cmd == "7")
{
	while (i < sel.length)
	{
		Chart.RemoveItemByIndex(selItems[i]);
		i += 1;
	}
}
else if (cmd == "8")
{
	Chart.Clear();
}
else if (cmd.substr(0, 7) == "column_")
{
	var columnId = cmd.substr(7);
	Legend.View.Columns.ChangeColumnVisibility(columnId);
}
else if (cmd.substr(0, 8) == "convert_")
{
	let altUnit = cmd.substr(8);
	Chart.ConvertUnits(altUnit, JSON.stringify(selItems));
}]]>
							</body>
						</do-on>
					</object>
					<do access-modifier="private" name="GetMenuItems" display-name="GetMenuItems" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
						<body kind="javascript">
							<![CDATA[// Получаем массив индексов графиков из массива выделенных строк
var i = 0;
var selItems = [];
var sel = JSON.parse(View.GetSelectedRows());
while (i < sel.length)
{
	selItems[i] = iItemInLegend[sel[i]];
	i += 1;
}

var items = [];

items.push({ 'id': 1, 'title': "Выноски реперов", 'active': selItems.length > 0, 'checked': selItems.length > 0 && Chart.Params.Lines[selItems[0]].bShowMarkerLabels });
items.push({ 'id': 2, 'title': "Видимость графика", 'active': selItems.length > 0, 'checked': selItems.length > 0 && Chart.Params.Lines[selItems[0]].bVisible });

items.push({ 'title': "-" });
var chartsItem = { 'id': 9, 'title': "Разместить график на поле", 'active': selItems.length > 0 };
chartsItem.items = [];
chartsItem.items.push({ 'id': "chart_new", 'title': "Новое поле" });
chartsItem.items.push({ 'title': "-" });
var i = 0;
var n = 0;
while (i < Chart.Params.Charts.Length)
{
	if (Chart.Params.Charts[i].bVisible)
	{
		n += 1;
		chartsItem.items.push({ 'id': "chart_"+i, 'title': n, 'active': selItems.some((ii) => i != Chart.Params.Lines[ii].nChart) });
	}
	i += 1;
}
items.push(chartsItem);

if (!Chart.GlobalRanges.Value && selItems.length > 0)
{
	var tagList = GetListTags(selItems[0]);
	if (tagList != "")
	{
		var axesItem = { 'id': 4, 'title': "Разместить график на шкале" };
		axesItem.items = [];
		var i = 0;
		var tags = tagList.split(",");
		while (i < tags.length)
		{
			axesItem.items.push({ 'id': "tag_" + tags[i], 'title': tags[i] });
			i += 1;
		}
		items.push(axesItem);		
	}
}

items.push({ 'title': "-" });
if (pChart.ActiveMode.Value == unit.Const.amHISTORY && pChart.UseServerTime)
{
	var someNotSource = false; // среди выделенных нет какого-либо сигнала с временем источника
	var someNotServer = false; // среди выделенных нет какого-либо сигнала с временем сервера
	for (var ii in selItems)
	{
		var itemIndex = selItems[ii];
		var selItemTag = Chart.Params.Lines[itemIndex].Tag;
		var selXColumn = Chart.Params.Lines[itemIndex].nXColumn;
		
		var bPara = false;  // признак существования пары графиков
		var i = 1;
		while (i <= unit.Const.MAX_LINES)
		{
			if (i != itemIndex && Chart.Params.Lines[i].Used && 
				Chart.Params.Lines[i].Tag == selItemTag && 
				Chart.Params.Lines[i].nXColumn != selXColumn)
			{
				bPara = true;
				break;
			}
			i += 1;
		}
		
		if (!bPara)
		{
			// если у нет пары, то отмечаем какого времени не хватает
			if (selXColumn == unit.Const.tmSERVER)
				someNotSource = true;
			else if (selXColumn == unit.Const.tmSOURCE)
				someNotServer = true;
		}
		
		// при отсутствии обоих вариантов ремени нет смысла проверть другие графики
		if (someNotSource && someNotServer)
			break;
	}

	items.push({ 'id': 5, 'title': "Добавить график по времени источника", 'icon': "Trends_Icons/Add16.png", 'active': someNotSource });
	items.push({ 'id': 6, 'title': "Добавить график по времени сервера", 'icon': "Trends_Icons/Add16.png", 'active': someNotServer });
}

items.push({ 'id': 7, 'title': "Удалить", 'icon': "Trends_Icons/Remove16.png", 'active': selItems.length > 0 });
items.push({ 'id': 8, 'title': "Удалить все", 'active': Chart.Params.LinesCount > 0 });

items.push({ 'title': "-" });
items.push({ 'id': "columns", 'title': "Столбцы", 'items': JSON.parse(View.Columns.GetMenuItems()) });

let convertItem = { 'id': "convert", 'title': "Изменить единицы измерения"};
convertItem.items = JSON.parse(Chart.ConvertUnitsMenu.Get(JSON.stringify(selItems)));

if (convertItem.items.length > 0)
{
	items.push({ 'title': "-" });
	items.push(convertItem);
}

return JSON.stringify(items);]]>
						</body>
					</do>
					<do access-modifier="private" name="GetListTags" display-name="GetListTags" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
						<body kind="om">
							<![CDATA[// Формирование списка элементов из тэгов сигналов доступных для переключения осей в режиме индивидуальных осей
sItems:string = "";

i:int4 = 0;
j:int4 = 1;
if (WS.RS.Chart.Params.Lines[index].numAxis != index)	// Если выбранный график находится не на своей шкале
{
	sItems = "Отдельная шкала,";		// добавляем пункт для возвращения на свою шкалу
	i += 1;
}
else
{
	while (j <= unit.Const.MAX_LINES && String.Length(sItems)==0)			// Перебираем графики 
	{
		if (WS.RS.Chart.Params.Lines[j].Used && j!=index)
		{
			// Если есть сигналы подключенные к шкале выбранного сигнала
			if (WS.RS.Chart.Params.Lines[j].numAxis == index )
				sItems = "Отдельная шкала,";		// добавляем пункт для освобождения своей шкалы
		}
		j += 1;
	}
}

j = 1;
while (j <= unit.Const.MAX_LINES)			// Перебираем графики
{
	if (WS.RS.Chart.Params.Lines[j].Used && j!=index && WS.RS.Chart.Params.Lines[j].nChart==WS.RS.Chart.Params.Lines[index].nChart)
	{																				// Если найден сигнал отличный от текущего добавляем его в список
		// Добавляем графики которые привязаны к своим осям и к которым не привязан выбранный график
		if (WS.RS.Chart.Params.Lines[j].numAxis == j && WS.RS.Chart.Params.Lines[index].numAxis !=j )
		{
			sItems += WS.RS.Chart.Params.Lines[j].Tag + ",";
			i += 1;
		}
	}
	j += 1;
}

if (String.EndsWith(sItems, ",")) 
	sItems = String.SubString(sItems, 0, String.Length(sItems)-1);

return sItems;]]>
						</body>
						<param access-modifier="private" name="index" display-name="" uuid="42f71002-517f-4c1e-b135-2d831509f427" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
					</do>
					<do access-modifier="private" name="SetGraphicAxis" display-name="SetGraphicAxis" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
						<body kind="om">
							<![CDATA[if (newScaleTag != "")
{																// Замена шкалы выбранного графика
	tag:string = WS.RS.Chart.Params.Lines[index].Tag;

	if (newScaleTag == "Отдельная шкала")
	{
		if (WS.RS.Chart.Params.Lines[index].numAxis == index)			//	Освобождение от других графиков
		{
			j:int4 = 1;
			n1:int4 = 0;
			while (j <= unit.Const.MAX_LINES && n1==0)			// Перебираем cписok подключенных сигналов
			{
				if (WS.RS.Chart.Params.Lines[j].Used && j!=index)
				{																				// Ищем первый сигнал подключенный к шкале выбранного сигнала
					if (WS.RS.Chart.Params.Lines[j].numAxis == index)
						n1 = j;		// Запоминаем индекс первого сигнала подключенного к выбранной шкале
				}
				j += 1;
			}																								
			WS.RS.Chart.Axis.CopysParams(index, n1, WS.RS.Chart.Params.Lines[index].nChart);		// Настройки шкалы копируем на новую шкалу
			tag = WS.RS.Chart.Params.Lines[n1].Tag;
			newScaleTag = tag;
			j = 1;
			while (j <= unit.Const.MAX_LINES)			// Перебираем cписok подключенных сигналов
			{
				if (WS.RS.Chart.Params.Lines[j].Used && j!=index)
				{																				// Все сигналы подключенные к выбранной шкале переключаем на шкалу первого подключенного сигнала
					if (WS.RS.Chart.Params.Lines[j].numAxis == index)
						WS.RS.Chart.SetGraphicAxis(WS.RS.Chart.Params.Lines[j].Tag, tag);
				}
				j += 1;
			}
		}
		else
		{
			newScaleTag = tag;	// Возвращение на свою ось
		}
	}
	WS.RS.Chart.SetGraphicAxis(tag, newScaleTag);  // устанавливаем новую шкалу для выбранного графика
}]]>
						</body>
						<param access-modifier="private" name="index" display-name="" uuid="5ad62513-9737-4fe8-8fe3-3d37a4ce4486" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
						<param access-modifier="private" name="newScaleTag" display-name="" uuid="086a265d-f8f2-431e-9223-67c1e0794b03" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
					</do>
				</object>
				<init target="pOnMouseRightRelease" ver="5" ref="ShowContextMenu"/>
				<init target="pSaveConfig" ver="5" ref="here.private.DoSaveConfig"/>
				<init target="pColorDialogResult" ver="5" ref="here.private.ColorDialogResult"/>
				<init target="init_Theme" ver="5" ref="here.init_Theme"/>
				<init target="init_ScreenKeyboard" ver="5" ref="here.init_ScreenKeyboard"/>
			</object>
			<do access-modifier="private" name="LayoutUpdate" display-name="LayoutUpdate" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="om">
					<![CDATA[//Debug.Log("WS.RS.LayoutUpdate");

splitterWidth: double = ShowLegend ? 4 : 0;
Splitter.SizeLimits.MinHeight = splitterWidth;
Splitter.SizeLimits.MinHeight = splitterWidth;

legendHeight: double = 0;
if (ShowLegend)
{
	if (Legend.bAutosize)
	{
		lines: int4 = Legend.View.GetRowCount();
		if (lines < 1)
			lines = 1;	
		else if (MaxLineLegendShow > 0 && lines > MaxLineLegendShow)
			lines = MaxLineLegendShow;
		legendHeight = (Legend.View.HeaderHeight + 2) + lines * (Legend.View.RowHeight + 2) + 18;
		Legend.legendHeight = legendHeight;
	}
	else
	{
		legendHeight = Legend.legendHeight;
	}
}
//Debug.Log("LegendTitle = " + String.ToString(Legend.View.HeaderHeight));
if (Legend.Visible != ShowLegend)	Legend.Visible = ShowLegend;
if (Legend.LayoutWeight_1 != legendHeight) Legend.LayoutWeight_1 = legendHeight;

vf: double = WS.Height - Legend.LayoutWeight_1 - splitterWidth;
if (vf < 0) vf = 0;
if (Chart.LayoutWeight_1 != vf) Chart.LayoutWeight_1 = vf;]]>
				</body>
			</do>
			<object access-modifier="private" name="DoLayoutUpdate" display-name="DoLayoutUpdate" uuid="b64b598e-658a-4741-84ad-f94174b1ebba" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[LayoutUpdate();]]>
					</body>
				</do-on>
			</object>
			<do access-modifier="private" name="DoOnDrop" display-name="DoOnDrop" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<param access-modifier="private" name="json" display-name="" uuid="ee9de0f8-9965-4838-86cc-8521be8dc27c" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				<body kind="javascript">
					<![CDATA[//log("DoOnDrop:"+json);
var itemsData = JSON.parse(json).data;

var i = 0;
var addedItems = [];
while (i < itemsData.length)
{
	var tag = itemsData[i].tag;
	if (tag != null)		// поле tag должно быть обязательно
	{
		var itemIndex = Chart.AddItem(tag, itemsData[i].eunits, itemsData[i].description, nChart);
		if (itemIndex > 0)
		{
			addedItems.push(itemIndex);
			
			if (itemsData[i].Color != null)
				SetGraphicColorU4(tag, itemsData[i].Color);
			
			var axisName;
			if (itemsData[i].Axis != null)
				axisName = itemsData[i].Axis;
			else axisName = tag;
			SetGraphicAxis(tag, axisName);
	
			if (itemsData[i].AxisColor != null)
				SetAxisColorU4(axisName, itemsData[i].Color);
	
			if (itemsData[i].LowRange != null && itemsData[i].HighRange != null)
				SetIndividualRange(tag, itemsData[i].LowRange, itemsData[i].HighRange);
		}
	}
	i += 1;
}

// в историческом режиме загружаем данные добавленных графиков
if (WS.RS.Chart.ActiveMode == unit.Const.amHISTORY)
	WS.RS.Chart.LoadHistoricalData();
]]>
				</body>
				<param access-modifier="private" name="nChart" display-name="" uuid="b538c129-6606-46e3-bf68-0533cbbc71b5" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			</do>
			<object access-modifier="private" name="DoOnChartDrop" display-name="DoOnChartDrop" uuid="3416fbfb-b716-4abc-b489-cfb3f6eb1ccb" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[DoOnDrop(Chart.DropText, Chart.SelectedChart);
]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="ChartPrint" display-name="ChartPrint" uuid="db7bb9bf-4896-483b-aac1-2ece69a2ee93" base-type="Print" base-type-id="da4ac71d-92b8-427c-9ef0-5c6cb681ae96" ver="5" description="" cardinal="1">
				<designed target="Area" value="0" ver="5"/>
			</object>
			<designed target="Flip" value="0" ver="5"/>
		</object>
		<object access-modifier="private" name="Layout" display-name="Layout" uuid="7ae1c65c-4757-4a8c-9c68-13add5cc8797" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="5">
			<designed target="Orientation" value="1" ver="5"/>
			<designed target="Gap" value="0" ver="5"/>
		</object>
		<do access-modifier="private" name="LayoutUpdate" display-name="LayoutUpdate" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[Splitter.Visible = ShowSources;
Splitter.SizeLimits.MinWidth = ShowSources ? 4 : 0;
Splitter.SizeLimits.MaxWidth = Splitter.SizeLimits.MinWidth;

ItemsTree.Visible = ShowSources;
ItemsTree.SizeLimits.MinWidth = ShowSources ? Splitter.Distance : 0;
ItemsTree.SizeLimits.MaxWidth = ItemsTree.SizeLimits.MinWidth;]]>
			</body>
		</do>
		<object access-modifier="private" name="LayoutWeight" display-name="LayoutWeight" uuid="fa7eeffd-8240-4bd0-a8d5-45a21e497f00" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="5" description="" cardinal="1">
			<designed target="Weight" value="1000" ver="5"/>
		</object>
	</object>
	<object access-modifier="private" name="Status" display-name="Status" uuid="f67a192e-1ba0-4ef2-a953-71bf69d251d3" base-type="Trends_Statusbar" base-type-id="60ec2e95-2b2d-4f82-9cbe-d981c7cd7032" ver="5">
		<designed target="X" value="0" ver="5"/>
		<designed target="Y" value="575" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<do-trace access-modifier="private" target="Visible" ver="5">
			<body>
				<![CDATA[ShowStatus]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="IsVisible" ver="5">
			<body>
				<![CDATA[ShowStatus]]>
			</body>
		</do-trace>
		<designed target="Width" value="900" ver="5"/>
		<designed target="Height" value="25" ver="5"/>
		<init target="init_ApSource" ver="5" ref="here.int_AP"/>
		<do-trace access-modifier="private" target="Warnings" ver="5">
			<body>
				<![CDATA[WS.RS.Chart.AdviseWarnings]]>
			</body>
		</do-trace>
		<init target="init_Theme" ver="5" ref="here.init_Theme"/>
		<do-trace access-modifier="private" target="UseSecurity" ver="5">
			<body>
				<![CDATA[here.private.pPermissions.UseSecurity]]>
			</body>
		</do-trace>
		<init target="init_ScreenKeyboard" ver="5" ref="here.init_ScreenKeyboard"/>
	</object>
	<init target="HighRange" ver="5" value="100"/>
	<init target="LowRange" ver="5" value="0"/>
	<init target="ActiveMode" ver="5" value="0"/>
	<object access-modifier="private" name="TreeFindEnable" display-name="Разрешить поиск в дереве сигналов" uuid="91431337-956d-41a1-9384-c8ef4fc362a2" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
	<object access-modifier="private" name="SynchroColorMarker" display-name="Синхронизировать цвет графика и выноски" uuid="ce08c89a-ae7b-469a-a25d-97d71764b479" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
	<object access-modifier="private" name="ShowRelativeTag" display-name="Показывать относительный тег" uuid="87370a93-6495-488e-9614-724e6107b618" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
	<init target="ShowRelativeTag" ver="5" value="false"/>
	<object access-modifier="private" name="ShowFullDescription" display-name="Показывать полное описание" uuid="ef81f7ce-6ecd-4a91-9443-fb930aaa94e2" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
	<object access-modifier="private" name="UseServerTime" display-name="Загружать метку времени сервера" uuid="7646af19-1d5c-4e59-a696-aadd87e096dd" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5"/>
	<init target="UseServerTime" ver="5" value="false"/>
	<do access-modifier="private" name="OpenPrint" display-name="OpenPrint" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[private.ShowPrintDialog.Invoke();]]>
		</body>
	</do>
	<object access-modifier="private" name="OnTableExport" display-name="OnTableExport" uuid="a8860de5-9aa7-412b-8acd-35e090f09451" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5"/>
	<object access-modifier="private" name="OnDoPrintSettings" display-name="OnDoPrintSettings" uuid="4ded39fc-4ac2-4133-9993-a8cd46883e5d" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5"/>
	<object access-modifier="private" name="OnPrint" display-name="OnPrint" uuid="39edf662-70f0-405f-a9a5-fb70393e12b1" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5"/>
	<object access-modifier="private" name="OnDataSave" display-name="OnDataSave" uuid="f9fdf2e5-34cd-423a-82b4-ff4161e897ce" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5"/>
	<object access-modifier="private" name="OnSaveSignalList" display-name="OnSaveSignalList" uuid="364bc60f-d55d-4067-a70e-b79f1f192073" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5"/>
	<do access-modifier="private" name="GetEventParam" display-name="GetEventParam" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
		<body kind="om">
			<![CDATA[if (numParam >= 0 && numParam < private.EventParams.Length)
	return private.EventParams[numParam];
else return "";]]>
		</body>
		<param access-modifier="private" name="numParam" display-name="" uuid="cd2174dd-debf-4173-bb58-2f32a4bdb470" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
	</do>
	<init target="TicksCountAxisX" ver="5" value="7"/>
	<init target="TicksCountAxisY" ver="5" value="11"/>
	<do access-modifier="private" name="ConfigureGraphic" display-name="ConfigureGraphic" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<param access-modifier="private" name="tag" display-name="" uuid="f48640d4-3adc-4a86-91b9-ba7749ebc233" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<param access-modifier="private" name="sJsonConfiguration" display-name="" uuid="8c6fd3b9-55a5-44b2-bd01-c1e2ba2c5668" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<body kind="om">
			<![CDATA[return WS.RS.Chart.ConfigureGraphic(tag, sJsonConfiguration);]]>
		</body>
	</do>
	<init target="ControlLineMultipleAdd" ver="5" value="true"/>
	<init target="SynchronizeColor" ver="5" value="true"/>
	<init target="SynchroColorMarker" ver="5" value="false"/>
	<init target="RedLineShift" ver="5" value="1"/>
	<init target="ShowFullDescription" ver="5" value="false"/>
	<do access-modifier="private" name="AddControlLine" display-name="Добавить реперную линию" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[lb: uint8 = WS.RS.Chart.ViewInterval.Begin;
rb: uint8 = WS.RS.Chart.ViewInterval.End;
time: uint8 = TypeConvert.ToUint8(lb + (rb - lb) / 2);
WS.RS.Chart.AddControlLineAtTime(time);]]>
		</body>
	</do>
	<designed target="Flip" value="0" ver="5"/>
	<init target="ShowDataPoints" ver="5" value="false"/>
	<init target="ShowMiniTrends" ver="5" value="true"/>
	<init target="ShowEU" ver="5" value="true"/>
	<init target="init_Theme" ver="5">
		<object access-modifier="private" uuid="ce025e21-f091-4340-bb88-abd670e9ec21" base-type="Trends_Theme" base-type-id="3fbfa4c2-c742-4bec-94dc-d1bcb7ef25b6" ver="5"/>
	</init>
	<init target="init_Permissions" ver="5">
		<object access-modifier="private" uuid="79d64865-efb7-4942-91c9-203ac089ca37" base-type="Trends_Permissions" base-type-id="083b63d1-3678-4da0-80a0-9c09d0076a3c" ver="5"/>
	</init>
	<init target="GraphicThickness" ver="5" value="1"/>
	<init target="DeltaLineWidth" ver="5" value="1"/>
	<do access-modifier="private" name="ConvertUnits" display-name="ConvertUnits" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[WS.RS.Chart.ConvertUnits(altUnit, "");]]>
		</body>
		<param access-modifier="private" name="altUnit" display-name="" uuid="084330be-7453-45f6-ac1e-e71158a7e193" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
	</do>
	<init target="init_ScreenKeyboard" ver="5">
		<object access-modifier="private" uuid="37f1a349-f44f-48be-af59-67dd0d87ff54" base-type="ScreenKeyboardOptions" base-type-id="0589bc8e-fbb2-4f0e-b5d2-f0d825538ef1" ver="5">
			<init target="Enabled" ver="5" value="false"/>
		</object>
	</init>
</type>

