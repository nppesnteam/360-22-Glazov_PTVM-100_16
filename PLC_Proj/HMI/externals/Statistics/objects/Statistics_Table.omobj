<type access-modifier="private" name="Statistics_Table" display-name="Statistics_Table" uuid="00427635-2700-4afe-9da5-7b8483bb3c64" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5" description="">
	<designed target="X" value="0" ver="5"/>
	<designed target="Y" value="0" ver="5"/>
	<designed target="ZValue" value="0" ver="5"/>
	<designed target="Rotation" value="0" ver="5"/>
	<designed target="Scale" value="1" ver="5"/>
	<designed target="Visible" value="true" ver="5"/>
	<designed target="Opacity" value="1" ver="5"/>
	<designed target="Enabled" value="true" ver="5"/>
	<designed target="Tooltip" value="" ver="5"/>
	<designed target="Width" value="550" ver="5"/>
	<designed target="Height" value="400" ver="5"/>
	<designed target="RoundingRadius" value="0" ver="5"/>
	<designed target="PenColor" value="0xff808080" ver="5"/>
	<designed target="PenStyle" value="0" ver="5"/>
	<designed target="PenWidth" value="1" ver="5"/>
	<designed target="BrushColor" value="4278190080" ver="5"/>
	<designed target="BrushStyle" value="0" ver="5"/>
	<object access-modifier="private" name="private" display-name="private" uuid="db010ec5-937a-45a7-b1b9-3fa55ae2ce45" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5">
		<object access-modifier="private" name="pTheme" display-name="pTheme" uuid="bb44922f-7be3-452f-be36-cf8e3190e3e7" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" ver="5" base-ref="true"/>
		<object access-modifier="private" name="ShowInfo" display-name="ShowInfo" uuid="7418a65f-3f22-4852-b53e-524555438e1d" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="80d0c3d3-b170-47ac-ba21-7415758dfd0e" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="5">
					<init target="WindowCaption" ver="5" ref="title"/>
					<init target="Icon" ver="5" value="0"/>
					<init target="Buttons" ver="5" value="0"/>
					<init target="Message" ver="5" ref="message"/>
					<init target="CharactersPerLine" ver="5" value="60"/>
					<init target="pTheme" ver="5" ref="here.private.pTheme"/>
				</object>
			</do-on>
			<object access-modifier="private" name="title" display-name="title" uuid="c511c936-8025-40ef-848f-ef75da875d76" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="message" display-name="message" uuid="e4ca442b-e10c-4bfe-ad1c-dd354fed8ffd" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
		</object>
		<object access-modifier="private" name="ShowWarning" display-name="ShowWarning" uuid="1874c4fa-57f2-45c1-b40f-9603f01b4e66" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="b286eba7-db0f-4620-b35d-50d4299e0372" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="5">
					<init target="Icon" ver="5" value="2"/>
					<init target="Buttons" ver="5" value="0"/>
					<init target="Message" ver="5" ref="message"/>
					<init target="CharactersPerLine" ver="5" value="60"/>
					<designed target="WindowCaption" value="Предупреждение" ver="5"/>
					<init target="pTheme" ver="5" ref="here.private.pTheme"/>
				</object>
			</do-on>
			<object access-modifier="private" name="message" display-name="message" uuid="26cbf412-1310-42a3-94b8-064c8be645e1" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
		</object>
		<object access-modifier="private" name="HasActiveSources" display-name="HasActiveSources" uuid="2e86a362-97d2-4dd0-bf07-905c376ad7ff" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
			<do access-modifier="private" name="Update" display-name="Update" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="om">
					<![CDATA[hasActiveSources: bool = false;
for (i: int4 = 0; i < Browser.Length; i += 1)
{
	if (Browser[i].IsActive)
	{
		hasActiveSources = true;
		break;
	}
}
if (HasActiveSources != hasActiveSources)
	HasActiveSources = hasActiveSources;]]>
				</body>
			</do>
		</object>
		<do access-modifier="private" name="UpdateViewActions" display-name="UpdateViewActions" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var selectedRows = JSON.parse(View.GetSelectedRows());

var modelRows = [];
selectedRows.forEach(r => modelRows.push(View.MapRowToModel(r)));

var rowCount = View.GetRowCount();

SelectAllRows.Enabled = rowCount > 0 && selectedRows.length < rowCount;
DeleteSelectedRows.Enabled = selectedRows.length > 0;
DeleteUnselectedRows.Enabled = selectedRows.length > 0 && selectedRows.length < rowCount;

var sortingEnabled = false;
for (let c = 0; c < View.Column.Length; c++)
	sortingEnabled |= View.Column[c].SortingEnabled;
	
if (!sortingEnabled && selectedRows.length > 0)
{
	var min = Math.min.apply(Math, modelRows);
	var max = Math.max.apply(Math, modelRows);
	//log(min + ".." + max);

	UpSelectedRow.Enabled = (min - 1 >= 0) && (max - 1 < rowCount);
	DownSelectedRow.Enabled = (min + 1 >= 0) && (max + 1 < rowCount);
}
else
{
	UpSelectedRow.Enabled = false;
	DownSelectedRow.Enabled = false;
}]]>
			</body>
		</do>
		<init target="pTheme" ver="5" ref="init_Theme"/>
		<object access-modifier="private" name="pScreenKeyboard" display-name="pScreenKeyboard" uuid="c86cbf6e-cbd8-4f72-8e9e-94ab72b71476" base-type="ScreenKeyboardOptions" base-type-id="0589bc8e-fbb2-4f0e-b5d2-f0d825538ef1" base-const="true" base-ref="true" ver="5" description=""/>
		<init target="pScreenKeyboard" ver="5" ref="init_ScreenKeyboard"/>
		<object access-modifier="private" name="pPermissions" display-name="pPermissions" uuid="c6c7ad33-0ad9-4cc3-a391-5635f4ebee4c" base-type="Statistics_Permissions" base-type-id="cb7a3e0d-75a2-404f-bf4c-763ec4f725c7" base-const="true" base-ref="true" ver="5" description=""/>
		<object access-modifier="private" name="pSettings" display-name="pSettings" uuid="ef4c1188-86e1-41ac-b229-09b731cd80db" base-type="Statistics_Settings" base-type-id="a8c582fd-25fb-4cc3-8522-3166d1a63de6" base-const="true" base-ref="true" ver="5" description=""/>
		<init target="pSettings" ver="5" ref="init_Settings"/>
		<do access-modifier="private" name="GetExportFolderPath" display-name="GetExportFolderPath" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="om">
				<![CDATA[folder: string = private.pSettings.ExportFolder;

// Если путь не указан, то используем специальную папку в папке с данными программы
if (folder == "")
	folder = Files.CombinePath(unit.ProductInfo.GetProgramDataFolder(), "Export");

return folder;]]>
			</body>
		</do>
		<init target="pPermissions" ver="5" ref="init_Permissions"/>
	</object>
	<object access-modifier="private" name="Const" display-name="Const" uuid="99572f91-59b3-4b99-a697-7edf873f18a9" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5">
		<object access-modifier="private" name="ResolveState" display-name="ResolveState" uuid="a01c212a-652c-4103-95bd-bdb45bed92dd" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5">
			<object access-modifier="private" name="ResolvePath" display-name="ResolvePath" uuid="0247dc37-ab30-4654-a716-5e406dc97f32" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<init target="ResolvePath" ver="5" value="1"/>
			<object access-modifier="private" name="GetChildren" display-name="GetChildren" uuid="35898544-0e71-42d3-8d6b-0204d1256179" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<init target="GetChildren" ver="5" value="2"/>
			<object access-modifier="private" name="Resolved" display-name="Resolved" uuid="e712a21f-559a-4bc2-bec8-579df3b9760b" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<init target="Resolved" ver="5" value="3"/>
			<object access-modifier="private" name="Error" display-name="Error" uuid="bc5b1122-ea7d-40f0-b094-a877cb37a166" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<init target="Error" ver="5" value="4"/>
		</object>
	</object>
	<object access-modifier="private" name="ShowAddDialog" display-name="ShowAddDialog" uuid="91d60221-f025-491a-9694-403222f72e00" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="InvokeTrigger" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-by-id="false" form-action="open-dialog">
			<object access-modifier="private" uuid="c1451226-ab43-42d1-aebe-8065def8c16d" base-type="Statistics_AddDialog" base-type-id="dd437b95-516b-4ea2-891c-b53350f1f1ba" ver="5">
				<init target="OkAction" ver="5" ref="OnComplete"/>
				<init target="pResult" ver="5" ref="DialogResult"/>
				<init target="pSources" ver="5" ref="here.pSources"/>
				<init target="init_ScreenKeyboard" ver="5" ref="here.private.pScreenKeyboard"/>
				<init target="init_Theme" ver="5" ref="here.private.pTheme"/>
			</object>
		</do-on>
		<object access-modifier="private" name="DialogResult" display-name="DialogResult" uuid="cf3a6659-16a6-406c-ae49-f9cce61233a0" base-type="Statistics_AddDialogResult" base-type-id="97768091-6418-4d50-8507-893907ef0038" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="OnComplete" display-name="OnComplete" uuid="84470bdf-1038-4fe4-9ce9-83ce208d93e0" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="om">
					<![CDATA[//Debug.Log("DialogResultPath: " + NewStat.Path);
if (DialogResult.Path != "")
{
	Add(DialogResult.SourceIndex, DialogResult.Path);
}]]>
				</body>
			</do-on>
		</object>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="Invoked">
			<body kind="om">
				<![CDATA[if (View.SelectedRow > -1)
{
	row: int4 = View.MapRowToModel(View.SelectedRow);
	DialogResult.SourceIndex = Variant.ToInt4(Model.GetCellData(row, Model.SourceIndexColumn), -1);
	if (DialogResult.SourceIndex > -1)
	{
		statPath: string = Variant.ToString(Model.GetCellData(row, Model.PathColumn), "");
		DialogResult.Path = statPath;
	}
}]]>
			</body>
		</do-on>
		<do-trace access-modifier="private" target="Enabled" ver="5">
			<body>
				<![CDATA[private.HasActiveSources]]>
			</body>
		</do-trace>
	</object>
	<object access-modifier="private" name="SelectAllRows" display-name="SelectAllRows" uuid="d1466f94-b72e-4a95-99b4-4e94242b1804" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
		<designed target="Enabled" value="false" ver="5"/>
		<designed target="InvokeTrigger" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
			<body kind="javascript">
				<![CDATA[var rowsIndex = [];
for (let row = 0; row < View.GetRowCount(); row++)
	rowsIndex.push(row);

View.SetSelectedRows(JSON.stringify(rowsIndex));]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="DeleteSelectedRows" display-name="DeleteSelectedRows" uuid="a19679d8-7538-49e7-9673-bc9fe5b6168d" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
		<designed target="Enabled" value="false" ver="5"/>
		<designed target="InvokeTrigger" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
			<body kind="javascript">
				<![CDATA[var viewRows = JSON.parse(View.GetSelectedRows());

var modelRows = [];
viewRows.forEach(r => modelRows.push(View.MapRowToModel(r)));

Model.RemoveParameters(JSON.stringify(modelRows));

var row = viewRows[0]; // первая выделенная строка
var rowCount = View.GetRowCount();
if (row >= rowCount)
	row = rowCount - 1;

View.SelectRow(row);]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="DeleteUnselectedRows" display-name="DeleteUnselectedRows" uuid="de26047e-0fb4-487a-b739-c0d3a58afd1d" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
		<designed target="Enabled" value="false" ver="5"/>
		<designed target="InvokeTrigger" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
			<body kind="javascript">
				<![CDATA[// чтобы удалить невыделенные строки с учетом фильтра нужно пройтись по всем модельным строкам
var modelRows = [];
for (let row = 0; row < Model.GetRowCount(); row++)
{
	if (!View.IsRowSelected(View.MapRowFromModel(row)))
		modelRows.push(row);
}
Model.RemoveParameters(JSON.stringify(modelRows));]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="UpSelectedRow" display-name="UpSelectedRow" uuid="b6e94009-9ff4-465a-963e-b6003cdc7527" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
		<designed target="Enabled" value="false" ver="5"/>
		<designed target="InvokeTrigger" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
			<body kind="om">
				<![CDATA[View.ShiftSelected(-1);]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="DownSelectedRow" display-name="DownSelectedRow" uuid="03f47c3b-685d-4cf5-b0be-1661a08f7873" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
		<designed target="Enabled" value="false" ver="5"/>
		<designed target="InvokeTrigger" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
			<body kind="javascript">
				<![CDATA[View.ShiftSelected(1);]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="InsertSeparator" display-name="InsertSeparator" uuid="10e631a5-78e9-45c5-a434-2851c048c9fb" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="InvokeTrigger" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
			<body kind="om">
				<![CDATA[modelRow: int4;
if (View.SelectedRow > -1)
{
	//Debug.Log("Insert separator after " + String.ToString(View.SelectedRow) + " row");
	modelRow = View.MapRowToModel(View.SelectedRow) + 1;
	Model.InsertRow(modelRow);
	Model.UpdateItemsRowIndex();
	
}
else
{
	//Debug.Log("Add separator");
	modelRow = Model.GetRowCount();
	Model.AddRow();
}

View.SelectRow(modelRow);]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ExportToFile" display-name="ExportToFile" uuid="4ebe8c10-2e76-4f8b-9fa8-d00859a9e1b6" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="InvokeTrigger" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
			<object access-modifier="private" uuid="602a54ef-433c-44f5-97d8-4a500cf58d8a" base-type="SaveFileDialog" base-type-id="d69a91c3-89e9-4e7b-994e-9242dbc5e095" ver="5">
				<init target="OnComplete" ver="5" ref="Export"/>
				<designed target="WindowCaption" value="Экспорт в файл" ver="5"/>
				<init target="Result" ver="5" ref="DialogResult"/>
				<init target="DefaultFileType" ver="5" ref="FileType"/>
				<init target="FileTypeFilter" ver="5" value="Текстовый файл (*.csv)|*.csv|Книга Excel (*.xlsx)|*.xlsx"/>
				<init target="RootPath" ver="5">
					<expr>
						<![CDATA[here.private.pPermissions.FileSystemAccess ? "" : here.private.GetExportFolderPath()]]>
					</expr>
				</init>
				<init target="DefaultPath" ver="5">
					<expr>
						<![CDATA[here.private.GetExportFolderPath()]]>
					</expr>
				</init>
				<init target="ChangeFolderAllowed" ver="5">
					<expr>
						<![CDATA[here.private.pPermissions.FileSystemAccess]]>
					</expr>
				</init>
				<init target="CreateFolderAllowed" ver="5">
					<expr>
						<![CDATA[here.private.pPermissions.FileSystemAccess]]>
					</expr>
				</init>
			</object>
		</do-on>
		<object access-modifier="private" name="FileType" display-name="FileType" uuid="af7c8922-85cf-4b6c-bcb7-617011c4e365" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="DialogResult" display-name="DialogResult" uuid="81678d84-7bbf-495c-9d18-c82438f3e244" base-type="FileDialogResult" base-type-id="602926f1-7d01-4d50-a5c0-d8fd35eadc74" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="Export" display-name="Export" uuid="7f09fe33-19fa-4801-b298-fbb584353d21" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="om">
					<![CDATA[// определяем тип файла
fileType: string;
if (DialogResult.FileType == 0) fileType = "csv";
else if (DialogResult.FileType == 1) fileType = "xlsx";
else if (DialogResult.FileType == 2) fileType = "pdf";

// сохраняем
View.SetSelectedRows("[]");
View.Save(DialogResult.FilePath, fileType);

// запоминаем выбор как значение по умолчанию
private.pSettings.ExportFolder = DialogResult.FolderPath;
FileType = DialogResult.FileType;
pUserSettingsChanged.Invoke();

if (Files.Exists(DialogResult.FilePath))
{
	private.ShowInfo.title = "Экспорт в файл";
	private.ShowInfo.message = "Таблица со значениями экспортирована в файл:\n" + DialogResult.FilePath;
	private.ShowInfo.Invoke();
}]]>
				</body>
			</do-on>
		</object>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="Invoked">
			<body kind="om">
				<![CDATA[Files.CreateRecursiveFolder(private.GetExportFolderPath());]]>
			</body>
		</do-on>
		<do-trace access-modifier="private" target="Enabled" ver="5">
			<body>
				<![CDATA[Model.RowCount > 0]]>
			</body>
		</do-trace>
	</object>
	<object access-modifier="private" name="Debug" display-name="Debug" uuid="ee20489c-e486-4018-8c7f-773981ca27c5" base-type="DebugTool" base-type-id="43946044-139a-43f4-a7b8-19a6074ffc56" ver="5"/>
	<object access-modifier="private" name="View" display-name="View" uuid="7ec7c4b7-5a16-42a8-a633-763296023b0e" base-type="Table" base-type-id="c65ff4dc-f22b-47d3-9333-72c4e4e5f662" ver="5" description="" cardinal="1">
		<designed target="X" value="0" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Scale" value="1" ver="5"/>
		<designed target="Visible" value="true" ver="5"/>
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="Width" value="550" ver="5"/>
		<designed target="Height" value="400" ver="5"/>
		<designed target="BackgroundColor" value="0xffffffff" ver="5"/>
		<designed target="FrameColor" value="0xff808080" ver="5"/>
		<designed target="GridColor" value="0xffd8d8d8" ver="5"/>
		<designed target="HeaderHeight" value="25" ver="5"/>
		<designed target="HeaderVisible" value="true" ver="5"/>
		<designed target="RowHeight" value="25" ver="5"/>
		<designed target="RowOrder" value="0" ver="5"/>
		<designed target="SelectionBehavior" value="1" ver="5"/>
		<designed target="SelectionMode" value="3" ver="5"/>
		<designed target="SelectionOverlayEnabled" value="false" ver="5"/>
		<designed target="LatestRowTracking" value="false" ver="5"/>
		<designed target="DelayedSortingEnabled" value="false" ver="5"/>
		<designed target="HorizontalScrollMode" value="1" ver="5"/>
		<designed target="VerticalScrollMode" value="0" ver="5"/>
		<designed target="HorizontalScrollBarPolicy" value="0" ver="5"/>
		<designed target="VerticalScrollBarPolicy" value="0" ver="5"/>
		<do-trace access-modifier="private" target="FrameColor" ver="5">
			<body>
				<![CDATA[private.pTheme.BorderColor]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="GridColor" ver="5">
			<body>
				<![CDATA[private.pTheme.DisabledBorderColor]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="BackgroundColor" ver="5">
			<body>
				<![CDATA[private.pTheme.EditorBrushColor]]>
			</body>
		</do-trace>
		<init target="TableModel" ver="5" ref="Model"/>
		<object access-modifier="private" name="initialized" display-name="initialized" uuid="bb87bad2-6613-466b-9a9c-46535510f28a" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="Column" display-name="Column" uuid="cd614c2d-106b-4552-839a-88bb5428770b" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="5" description="" cardinal="9">
			<designed target="Title" value="" ver="5"/>
			<designed target="Description" value="" ver="5"/>
			<designed target="Id" value="" ver="5"/>
			<designed target="ColumnOwnId" value="" ver="5"/>
			<designed target="BackgroundColor" value="4293980400" ver="5"/>
			<designed target="ForegroundColor" value="4278190080" ver="5"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="5"/>
			<designed target="TextAlignment" value="129" ver="5"/>
			<designed target="TitleBackgroundColor" value="4293980400" ver="5"/>
			<designed target="TitleForegroundColor" value="4278190080" ver="5"/>
			<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="5"/>
			<designed target="TitleTextAlignment" value="36" ver="5"/>
			<designed target="Width" value="100" ver="5"/>
			<designed target="WidthResizeMode" value="0" ver="5"/>
			<designed target="Emptiable" value="true" ver="5"/>
			<designed target="Hidden" value="false" ver="5"/>
			<designed target="NumberFormat" value="%d" ver="5"/>
			<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss" ver="5"/>
			<designed target="JsonFilter" value="" ver="5"/>
			<designed target="SortingEnabled" value="false" ver="5"/>
			<designed target="SortOrder" value="0" ver="5"/>
			<designed target="SortPriority" value="0" ver="5"/>
			<designed target="SortMode" value="0" ver="5"/>
			<designed target="WordWrap" value="false" ver="5"/>
			<do-trace access-modifier="private" target="BackgroundColor" ver="5">
				<body>
					<![CDATA[private.pTheme.EditorBrushColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="ForegroundColor" ver="5">
				<body>
					<![CDATA[private.pTheme.EditorFontColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="TitleBackgroundColor" ver="5">
				<body>
					<![CDATA[private.pTheme.BackgroundColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="TitleForegroundColor" ver="5">
				<body>
					<![CDATA[private.pTheme.ForegroundColor]]>
				</body>
			</do-trace>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="MouseTitleClick">
				<body kind="om">
					<![CDATA[// меняем направление сортировки: прямая -> обратная -> отключена и т.д.
if (SortingEnabled)
{
	if (SortOrder == 0)
		SortOrder = 1; // меняем направление сортировки
	else SortingEnabled = false; // отключаем сортировку
}
else
{
	// включаем сортировку
	SortOrder = 0;
	SortingEnabled = true;
}

// eсли сортировка по новому столбцу, то увеличиваем приоритет
if (SortingEnabled && SortPriority != SortPriorityCount)
{
	SortPriorityCount = SortPriorityCount + 1;
	SortPriority = SortPriorityCount;
}

// сортируем таблицу
ApplySort();

// уведомляем об изменении вида для сохранения настроек
pUserSettingsChanged.Invoke();]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="WidthChanged">
				<body kind="om">
					<![CDATA[Filter.UpdateLayout();
pUserSettingsChanged.Invoke();]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="5" event="MouseClick">
				<body kind="om">
					<![CDATA[/*Debug.Log("hiddenColumnsData - "
+ "row: " + String.ToString(row)
+ ", ItemIndex: " + String.ToString(Variant.ToInt4(Model.GetCellData(row, Model.ItemIndexColumn), 0))
+ ", ServerIndex: " + String.ToString(Variant.ToInt4(Model.GetCellData(row, Model.SourceIndexColumn), 0))
+ ", Path: " + Variant.ToString(Model.GetCellData(row, Model.PathColumn), "")
+ ", ConnectionState: " + String.ToString(Variant.ToUint1(Model.GetCellData(row, Model.ConnectionStateColumn), 0))
+ ", Status: " + String.ToString(Variant.ToUint1(Model.GetCellData(row, Model.StatusColumn), 0))
+ ", Source: " + Variant.ToString(Model.GetCellData(row, Model.SourceColumn), "")
//+ ", SourceConfig: " + Variant.ToString(Model.GetCellData(row, Model.SourceConfigColumn), "")
);*/]]>
				</body>
			</do-on>
		</object>
		<do access-modifier="private" name="Initialize" display-name="Initialize" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (initialized)
	return;
initialized = true;

View.Column[0].Title = "Тип";
View.Column[0].Id = "type";
View.Column[0].Hidden = true;

View.Column[1].Title = "Папка";
View.Column[1].Id = "folder";

View.Column[2].Title = "Секция";
View.Column[2].Id = "section";

View.Column[3].Title = "Параметр";
View.Column[3].Id = "parameter";

View.Column[4].Title = "Значение";
View.Column[4].Id = "value";

View.Column[5].Title = "Источник";
View.Column[5].Id = "source";

View.Column[6].Title = "Путь";
View.Column[6].Id = "path";
View.Column[6].Hidden = true;

View.Column[7].Title = "Подключение";
View.Column[7].Id = "connectionState";
View.Column[7].Hidden = true;

View.Column[8].Title = "Статус";
View.Column[8].Id = "status";
View.Column[8].Hidden = true;]]>
			</body>
		</do>
		<object access-modifier="private" name="Decorator" display-name="Decorator" uuid="20067372-e131-423c-934b-431729277b05" base-type="TableDecorator" base-type-id="2ff6a2d7-9573-4060-bfea-29c63d61b079" ver="5" description="" cardinal="1">
			<designed target="JsonDecorator" value="" ver="5"/>
			<do-trace access-modifier="private" target="JsonDecorator" ver="5">
				<body>
					<![CDATA[GetJsonDecorator(badQualityColor, separatorColor, selectionColor)]]>
				</body>
			</do-trace>
		</object>
		<do access-modifier="private" name="GetJsonDecorator" display-name="GetJsonDecorator" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="javascript">
				<![CDATA[var decorator = {};

decorator.StyleDictionary = 
[
	{
		'style_name': "separator_style",
		'style': { 'background_color': `#${separatorColor.toString(16)}` }
	},
	{
		'style_name': "bad_quality_style",
		'style': { 'color': `#${badQualityColor.toString(16)}` }
	},
	{
		'style_name': "selected_style",
		'style': { 'background_color': `#${selectionColor.toString(16)}` }
	}
];

decorator.FormatDictionary = [
	{
		'format_name': "timeStampFormat",
		'format': {	'var_format':[{'value_type': "TimestampType", 'text_format':"dd.MM.yyyy hh:mm:ss"}] }
	}, {
		'format_name': "floatFormat",
		'format': { 'var_format':[{'value_type': "FloatTypeCategory", 'text_format': "%.7g"}] }
	}, {
		'format_name': "doubleFormat",
		'format': { 'var_format':[{'value_type': "FloatTypeCategory", 'text_format': "%.15g"}] }
	}, {
		'format_name': "intFormat",
		'format': { 'var_format':[{'value_type': "IntegerTypeCategory", 'text_format': "%d"}] }
	}, {
		'format_name': "uintFormat",
		'format': { 'var_format':[{'value_type': "IntegerTypeCategory", 'text_format': "%llu"}] }
	}, {
		'format_name': "longFormat",
		'format': { 'var_format':[{'value_type': "IntegerTypeCategory", 'text_format': "%lld"}] }
	}
];

decorator.Decorating = 
[
	{
		'decoration_rule_name': "bad_quality_rule", 
		'decoration_rule': {'or': [{'!=': { 'data:connectionState': 2 }}, {'!=': { 'data:status': 1 }}] },
		'rowstyle': "bad_quality_style"
	},
	{
		'decoration_rule_name': "separator_rule", 
		'decoration_rule': { 'text:path': "" },
		'rowstyle': "separator_style"
	},
	{
		'decoration_rule_name': "selected_rule", 
		'decoration_rule': { 'row:isSelected': true },
		'rowstyle': "selected_style"
	}
];

decorator.Formatting = [
	{
		'formatting_rule_name': "valueColumnRule",
		'formatting_column': "value",
		'conditions': [
			{ 'condition': {'data:type': "float" }, 'format': "floatFormat" },
			{ 'condition': {'data:type': "double" }, 'format': "doubleFormat" },
			{ 'condition': {'or': [{'data:type': "int1" }, {'data:type': "uint1" }, {'data:type': "int2" }, {'data:type': "uint2" }, {'data:type': "int4" }]}, 'format': "intFormat" },
			{ 'condition': {'or': [{'data:type': "uint4" }, {'data:type': "uint8" }]}, 'format': "uintFormat" },
			{ 'condition': {'data:type': "int8"}, 'format': "longFormat" },
			{ 'condition': {'data:type': "timestamp"}, 'format': "timeStampFormat" }
		]
	}
];

//log(JSON.stringify(decorator, null, 2));
return JSON.stringify(decorator);]]>
			</body>
			<param access-modifier="private" name="badQualityColor" display-name="" uuid="bb53872a-9063-44ff-99e7-957a74709301" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="5"/>
			<param access-modifier="private" name="separatorColor" display-name="" uuid="b083e7e7-38b2-44bc-9b71-4755b6774c6a" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="5"/>
			<param access-modifier="private" name="selectionColor" display-name="" uuid="dece321a-35b8-4bc6-b626-b14eaced2419" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="5"/>
		</do>
		<object access-modifier="private" name="Filter" display-name="Filter" uuid="4d8d8e32-1ed4-448b-999e-1041952e2248" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5" description="" cardinal="1">
			<designed target="X" value="0" ver="5"/>
			<designed target="Y" value="25" ver="5"/>
			<designed target="ZValue" value="0" ver="5"/>
			<designed target="Rotation" value="0" ver="5"/>
			<designed target="Scale" value="1" ver="5"/>
			<designed target="Visible" value="true" ver="5"/>
			<designed target="Opacity" value="1" ver="5"/>
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="Tooltip" value="" ver="5"/>
			<designed target="Width" value="550" ver="5"/>
			<designed target="Height" value="23" ver="5"/>
			<designed target="RoundingRadius" value="0" ver="5"/>
			<designed target="PenColor" value="4278190080" ver="5"/>
			<designed target="PenStyle" value="0" ver="5"/>
			<designed target="PenWidth" value="1" ver="5"/>
			<designed target="BrushColor" value="4278190080" ver="5"/>
			<designed target="BrushStyle" value="0" ver="5"/>
			<object access-modifier="private" name="Active" display-name="Active" uuid="2bd421e9-7245-493b-be55-d66e1c54ec3d" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
					<body kind="om">
						<![CDATA[if (value)
{
	// Активируем фильтр
	Visible = true;	
	HeaderHeight = TypeConvert.ToInt4(25 + Filter.Height);
	UpdateLayout();

	i: int4 = 0;	
	while (i < ComboBox.Length)
	{
		if (!View.Column[i].Hidden)
		{
			ComboBox[i].UpdateItems();
			ComboBox[i].ApplyFilter();
		}
		i += 1;
	}
}
else
{
	// Выключаем фильтр
	Visible = false;
	HeaderHeight = 25;

	i: int4 = 0;	
	while (i < ComboBox.Length)
	{
		if (!View.Column[i].Hidden)
			View.Column[i].JsonFilter = "";
		i += 1;
	}
}]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="ComboBox" display-name="ComboBox" uuid="23097a7b-4968-4fb1-9c42-ef13232d6b0d" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="5" description="" cardinal="8">
				<designed target="X" value="0" ver="5"/>
				<designed target="Y" value="0" ver="5"/>
				<designed target="ZValue" value="0" ver="5"/>
				<designed target="Rotation" value="0" ver="5"/>
				<designed target="Scale" value="1" ver="5"/>
				<designed target="Visible" value="true" ver="5"/>
				<designed target="Opacity" value="1" ver="5"/>
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="Tooltip" value="" ver="5"/>
				<designed target="Width" value="100" ver="5"/>
				<designed target="Height" value="23" ver="5"/>
				<designed target="Editable" value="true" ver="5"/>
				<designed target="Text" value="" ver="5"/>
				<designed target="SelectedIndex" value="-1" ver="5"/>
				<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0" ver="5"/>
				<designed target="FontColor" value="4293388263" ver="5"/>
				<designed target="MaxVisibleItems" value="15" ver="5"/>
				<do-trace access-modifier="private" target="FontColor" ver="5">
					<body>
						<![CDATA[private.pTheme.EditorFontColor]]>
					</body>
				</do-trace>
				<designed target="Flip" value="0" ver="5"/>
				<do access-modifier="private" name="ApplyFilter" display-name="ApplyFilter" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
					<body kind="javascript">
						<![CDATA[var filter = Text == "" ? "" : JSON.stringify({ 'text': "*" + Text + "*" });
if (View.Column[Index].JsonFilter != filter)
{
	//log("Apply to " + View.Column[Index].Title + " filter: " + filter);
	View.Column[Index].JsonFilter = filter;
	
	// для остальных отмечаем необходимость обновления
	for (let i = 0; i < Filter.ComboBox.Length; i++)
	{
		if (i != Index)
			Filter.ComboBox[i].itemsUpdated = false;
	}
}]]>
					</body>
				</do>
				<do access-modifier="private" name="UpdateItems" display-name="UpdateItems" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
					<body kind="javascript">
						<![CDATA[if (!itemsUpdated)
{
	//log("Update filter list for " + View.Column[Index].Title);
	
	var items = new Set();
	var rowCount = View.GetRowCount();
	for (var row = 0; row < rowCount; row++)
	{
		var cellData = View.GetCellData(row, Index);
		if (cellData != "")
			items.add(cellData);
	}
	
	// запоминаем текущий текст, чтобы потом его восстановить
	var text = Text;
	
	Clear();
	AddItem("");	// элемент по индексу 0 - фильтр отключен
	for (var element of items)
		AddItem(element);
	
	// восстанавливаем предыдущий выбор
	SelectedIndex = IndexOf(text);
	itemsUpdated = true;
}]]>
					</body>
				</do>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="FocusChanged">
					<body kind="om">
						<![CDATA[if (Focus == false)
	ApplyFilter();
else UpdateItems();]]>
					</body>
				</do-on>
				<object access-modifier="private" name="itemsUpdated" display-name="itemsUpdated" uuid="3cad4dab-9ef0-4df2-86ae-788589728335" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
				<designed target="InsertPolicy" value="0" ver="5"/>
				<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="TextChanged">
					<body kind="om">
						<![CDATA[ApplyFilter();]]>
					</body>
				</do-on>
			</object>
			<do access-modifier="private" name="UpdateLayout" display-name="UpdateLayout" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="om">
					<![CDATA[if (Filter.Active)
{
	//смещенения координаты и ширины
	shiftX: int4 = 2;
	shiftWidth: float = 3;
	
	currentX: int4 = 0;
	currentWidth: float = 0;
	
	i: int4 = 0;
	while (i < ComboBox.Length)
	{
		if (!View.Column[i].Hidden)
		{
			currentWidth = View.GetColumnWidth(i);
			currentX = View.GetColumnLeft(i);
			
			if (currentX >= 0)
			{
				ComboBox[i].X = currentX + shiftX;
				ComboBox[i].Width = currentWidth - shiftWidth;
				ComboBox[i].Visible = true;
			}
			else if ((currentWidth + currentX) - 20 >= 0)
			{
				ComboBox[i].X = shiftX;
				ComboBox[i].Width = (currentWidth + currentX) - shiftWidth;
				ComboBox[i].Visible = true;
			}
			else
				ComboBox[i].Visible = false;	
		}
		else
			ComboBox[i].Visible = false;

		i += 1;
	}
}]]>
				</body>
			</do>
			<init target="Active" ver="5" value="false"/>
			<designed target="Flip" value="0" ver="5"/>
		</object>
		<object access-modifier="private" name="ShowContextMenu" display-name="ShowContextMenu" uuid="d85e6ff7-b51f-436a-bb90-e5d0d86843fa" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<object access-modifier="private" name="mouseX" display-name="mouseX" uuid="e02f2133-c379-44d1-ad2d-13bc08b6e527" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="mouseY" display-name="mouseY" uuid="3c380533-4f88-4e66-a0f8-c02debf7be01" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="MenuResult" display-name="MenuResult" uuid="be90d30a-9c48-463e-88b4-1f777d442915" base-type="MenuResult" base-type-id="0fe7658c-92f4-4af7-b038-3594414ac651" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="OnComplete" display-name="OnComplete" uuid="e2eb2262-b391-45b2-b288-e2d345d22e2b" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[if (MenuResult.Id == "ShowAddDialog")
	ShowAddDialog.Invoke();
else if (MenuResult.Id == "DeleteSelectedRows")
	DeleteSelectedRows.Invoke();
else if (MenuResult.Id == "InsertSeparator")
	InsertSeparator.Invoke();
else if (MenuResult.Id == "DeleteUnselectedRows")
	DeleteUnselectedRows.Invoke();
else if (MenuResult.Id == "SelectAllRows")
	SelectAllRows.Invoke();
else if (MenuResult.Id == "UpSelectedRow")
	UpSelectedRow.Invoke();
else if (MenuResult.Id == "DownSelectedRow")
	DownSelectedRow.Invoke();]]>
					</body>
				</do-on>
			</object>
			<do access-modifier="private" name="GetMenuItems" display-name="GetMenuItems" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
				<body kind="javascript">
					<![CDATA[var items = [];

items.push({
	'id': "ShowAddDialog",
	'title': "Добавить новый параметр...",
	'icon': "Statistics_Icons/Add16.png",
	'keyGesture': "Insert",
	'active': ShowAddDialog.Enabled
});

items.push({
	'id': "DeleteSelectedRows",
	'title': "Удалить выделенные строки",
	'icon': "Statistics_Icons/Remove16.png",
	'keyGesture': "Delete",
	'active': DeleteSelectedRows.Enabled
});

items.push({
	'id': "InsertSeparator",
	'title': "Добавить разделитель",
	'keyGesture': "Ctrl+Insert",
	'active': InsertSeparator.Enabled
});

items.push({ 'title': "-" });

items.push({
	'id': "SelectAllRows",
	'title': "Выделить все строки",
	'keyGesture': "Ctrl+A",
	'active': SelectAllRows.Enabled
});

items.push({
	'id': "DeleteUnselectedRows",
	'title': "Оставить только выделенные строки",
	'active': DeleteUnselectedRows.Enabled
});

if (!View.Filter.Active.Value && !GetSortingMode())
{
	items.push({ 'title': "-" });
	
	items.push({
		'id': 4,
		'title': "Переместить",
		'active': UpSelectedRow.Enabled || DownSelectedRow.Enabled,
		'items': [
			{
				'id': "UpSelectedRow",
				'title': "Вверх",
				'keyGesture': "Ctrl+Вверх",
				'active': UpSelectedRow.Enabled
			},	{
				'id': "DownSelectedRow",
				'title': "Вниз",
				'keyGesture': "Ctrl+Вниз",
				'active': DownSelectedRow.Enabled
			}
		]
	});
}

return JSON.stringify(items);]]>
				</body>
			</do>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-by-id="false" form-action="open-new">
				<object access-modifier="private" uuid="cffb22b5-4e80-4d47-9024-dfb0432a7cd4" base-type="Menu" base-type-id="07bb4545-980a-4140-bbaa-4d1397447864" ver="5">
					<init target="pResult" ver="5" ref="MenuResult"/>
					<init target="pAction" ver="5" ref="OnComplete"/>
					<init target="Items" ver="5">
						<expr>
							<![CDATA[GetMenuItems()]]>
						</expr>
					</init>
					<init target="WindowX" ver="5" ref="mouseX"/>
					<init target="WindowY" ver="5" ref="mouseY"/>
					<init target="init_Theme" ver="5" ref="here.private.pTheme"/>
				</object>
			</do-on>
		</object>
		<object access-modifier="private" name="SortPriorityCount" display-name="SortPriorityCount" uuid="c47b4e33-1696-475e-89f1-ea3aad5de1bd" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5" description="" cardinal="1"/>
		<do access-modifier="private" name="GetSortingMode" display-name="GetSortingStatus" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
			<body kind="om">
				<![CDATA[c: int4 = 0;
while (c < Column.Length)
{
	if (Column[c].SortingEnabled)
		return true;
	c += 1;
}
return false;]]>
			</body>
		</do>
		<object access-modifier="private" name="Drop" display-name="Drop" uuid="45d76d18-226b-45eb-938e-b4fd8feae171" base-type="DragNDrop" base-type-id="c4ddb32f-3653-44c8-be57-3a595e10c2fb" ver="5" description="" cardinal="1">
			<designed target="DragEnabled" value="false" ver="5"/>
			<designed target="DropEnabled" value="true" ver="5"/>
			<designed target="Image" value="" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="OnDrop">
				<body kind="javascript">
					<![CDATA[var itemInfo = data.GetData("statistics-node");
var info = JSON.parse(itemInfo);

var sourceIndex;
if (info.source.mode == 0)
{
	var credentials = info.source.credentials == undefined ? "" : JSON.stringify(info.source.credentials);
	sourceIndex = pSources.ConnectToServer(info.source.location, info.source.port, info.source.title, credentials);
}
else if (info.source.mode == 1)
{
	sourceIndex = pSources.ConnectToSnapshot(info.source.filePath);
}

if (sourceIndex > -1)
	Add(sourceIndex, info.path);]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="SelectedRow" display-name="SelectedRow" uuid="a4a5d4d8-f1eb-4c02-bfb1-4d0bf34e2c54" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="CurrentColumn" display-name="CurrentColumn" uuid="569aca02-db8a-4292-937b-6bb7fd7f5271" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="badQualityColor" display-name="badQualityColor" uuid="75d1c04f-eedc-456d-a84d-ed40fad6173c" base-type="notifying_uint8" base-type-id="2e6d6c20-2489-49e1-9d5f-fe68a21b43df" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="separatorColor" display-name="separatorColor" uuid="2c0b8596-ca33-4f13-8a91-a60f988c86a6" base-type="notifying_uint8" base-type-id="2e6d6c20-2489-49e1-9d5f-fe68a21b43df" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="selectionColor" display-name="selectionColor" uuid="9ee53fb8-8aa5-45a5-8784-294d8bd9d108" base-type="notifying_uint8" base-type-id="2e6d6c20-2489-49e1-9d5f-fe68a21b43df" ver="5" description="" cardinal="1"/>
		<do-trace access-modifier="private" target="selectionColor" ver="5">
			<body>
				<![CDATA[private.pTheme.SelectionColor]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="badQualityColor" ver="5">
			<body>
				<![CDATA[private.pTheme.DisabledFontColor]]>
			</body>
		</do-trace>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="SelectionChanged">
			<body kind="javascript">
				<![CDATA[var selectedRows = JSON.parse(View.GetSelectedRows());
if (selectedRows.length > 0)
	SelectedRow = selectedRows[selectedRows.length-1];
else
	SelectedRow = -1;

private.UpdateViewActions();]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="MouseRelease">
			<body kind="om">
				<![CDATA[if (button == 2)
{
	ShowContextMenu.mouseX = ScreenX(MouseX, MouseY);
	ShowContextMenu.mouseY = ScreenY(MouseX, MouseY);
	ShowContextMenu.Invoke();
}]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="CurrentChanged">
			<body kind="om">
				<![CDATA[CurrentColumn = column > -1 ? column : 3; // по умолчанию будет столбец с параметром
// обновляем активность команд
private.UpdateViewActions();]]>
			</body>
		</do-on>
		<init target="SelectedRow" ver="5" value="-1"/>
		<do access-modifier="private" name="ShiftSelected" display-name="ShiftSelected" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[if (Filter.Active == false)
{
	var viewRows = JSON.parse(GetSelectedRows());
	
	var modelRows = [];
	viewRows.forEach(r => modelRows.push(MapRowToModel(r)));
	
	// сортируем номера строк с учетом направления сдвига
	var sortedRows = modelRows.sort((a, b) => shift*(b-a));
	
	var newRows = [];
	for (let i = 0; i < sortedRows.length; i++)
	{
		var row = sortedRows[i];
		var targetRow = row + shift;	
		
		var sourceRowData = Model.GetRowDataAsJson(row);	
		var targetRowData = Model.GetRowDataAsJson(targetRow);
	
		Model.SetRowDataAsJson(row, targetRowData);
		Model.SetRowDataAsJson(targetRow, sourceRowData);
	
		newRows.push(targetRow);
	}
	
	Model.UpdateItemsRowIndex();
	
	SetSelectedRows(JSON.stringify(newRows));
}]]>
			</body>
			<param access-modifier="private" name="shift" display-name="" uuid="765309ad-b029-474b-9eb3-d377644008f2" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
		</do>
		<do-trace access-modifier="private" target="separatorColor" ver="5">
			<body>
				<![CDATA[private.pTheme.BackgroundColor]]>
			</body>
		</do-trace>
		<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="5" event="KeyPress">
			<body kind="om">
				<![CDATA[//Debug.Log("KeyPress: " + String.ToString(keyCode) + " (" + String.ToString(modifiers) + ")");
if (keyCode == 109) // Delete
{
	DeleteSelectedRows.Invoke();
}
else if (keyCode == 110) // Insert
{
	if (modifiers == 0)
		ShowAddDialog.Invoke();
	else if (modifiers == 0x4000000) // Ctrl
		InsertSeparator.Invoke();
}
else if (keyCode == 105) // Вверх
{
	if (modifiers == 0x4000000) // Ctrl
		UpSelectedRow.Invoke();
}
else if (keyCode == 107) // Вниз
{
	if (modifiers == 0x4000000) // Ctrl
		DownSelectedRow.Invoke();
}
else if (keyCode == 10) // "A"
{
	if (modifiers == 0x4000000) // Ctrl
		SelectAllRows.Invoke();
}]]>
			</body>
		</do-on>
		<init target="CurrentColumn" ver="5" value="3"/>
		<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="5" event="ScrollMove">
			<body kind="om">
				<![CDATA[if (direction == 0)
	Filter.UpdateLayout();]]>
			</body>
		</do-on>
		<do access-modifier="private" name="SelectRow" display-name="SelectRow" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[viewRow: int4 = MapRowFromModel(row);
SetCurrentCell(viewRow, CurrentColumn);
SetSelectedRows("[" + String.ToString(viewRow) + "]");
ScrollTo(viewRow, CurrentColumn, 0);]]>
			</body>
			<param access-modifier="private" name="row" display-name="" uuid="be4dff09-19e4-40ce-b58d-919e4e22889d" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
		</do>
	</object>
	<object access-modifier="private" name="Converter" display-name="Converter" uuid="8ac4ee35-846c-4cb1-8d52-ef700da4b9bb" base-type="Converter" base-type-id="9846118d-6c33-44f8-8ff4-f502280dd5c0" ver="5" description="" cardinal="1"/>
	<object access-modifier="private" name="Model" display-name="Model" uuid="aeaaa7e3-839a-44dc-9d14-08e2005152ec" base-type="TableModel" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="5" description="" cardinal="1">
		<designed target="Frozen" value="false" ver="5"/>
		<designed target="MaxRowCount" value="10000" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="RowsInserted">
			<body kind="om">
				<![CDATA[RowCount = GetRowCount();
IsModified = true;]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="RowsRemoved">
			<body kind="om">
				<![CDATA[RowCount = GetRowCount();
IsModified = true;

// сбрасываем флаг обновления выпадающих списков фильтра
//Debug.Log("Filter for all columns need update");
for(i: int4 = 0; i < View.Filter.ComboBox.Length; i += 1) 
	View.Filter.ComboBox[i].itemsUpdated = false;]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="DataChanged">
			<body kind="om">
				<![CDATA[// сбрасываем флаг обновления выпадающих списков фильтра
for (i: int4 = left; i <= right; i += 1)
{
	column: int4 = View.MapColumnFromModel(i);
	if (column > -1)
	{
		//Debug.Log("Filter for column " +  View.Column[column].Title + "  need update");
		View.Filter.ComboBox[column].itemsUpdated = false;
	}
}]]>
			</body>
		</do-on>
		<do access-modifier="private" name="Initialize" display-name="Initialize" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (GetColumnCount() == 0)
{
	Model.AddColumn("type","","","","string",false,true);
	Model.AddColumn("folder","","","","string",false,true);
	Model.AddColumn("section","","","","string",false,true);
	Model.AddColumn("parameter","","","","string",false,true);
	Model.AddColumn("value","","","","variant",false,true);
	Model.AddColumn("source","","","","string",false,true);	
	Model.AddColumn("itemIndex","","","","int4",false,true);
	Model.AddColumn("sourceIndex","","","","int4",false,true);
	Model.AddColumn("path","","","","string",false,true);
	Model.AddColumn("resolveState","","","","int4",false,true);
	Model.AddColumn("connectionState","","","","uint1",false,true);
	Model.AddColumn("status","","","","uint1",false,true);
}]]>
			</body>
		</do>
		<do access-modifier="private" name="AddParameter" display-name="AddParameter" ver="5" type="int4" type-id="74222947-f188-4195-8e0e-e33bd9827255">
			<body kind="om">
				<![CDATA[row: int4 = GetRowCount();
AddRow();
SetCellData(row, PathColumn, path);	
SetCellData(row, SourceIndexColumn, sourceIndex);
SetCellData(row, SourceColumn, Browser[sourceIndex].StatSource.GetSourceTitle());
return row;]]>
			</body>
			<param access-modifier="private" name="sourceIndex" display-name="" uuid="e39339e0-244b-43f3-b163-7a1f4a00fce8" base-type="int8" base-type-id="1f8f5a02-c52c-4260-90d1-e3b1b93b3949" ver="5"/>
			<param access-modifier="private" name="path" display-name="" uuid="082ad844-7f64-43a6-bec1-2bcfdcff0670" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="FindParameter" display-name="FindParameter" ver="5" type="int4" type-id="74222947-f188-4195-8e0e-e33bd9827255">
			<body kind="om">
				<![CDATA[Initialize();

rowCount: int4 = GetRowCount();
for (row: int4 = 0; row < rowCount; row += 1)
{
	rowSourceIndex: int4 = Variant.ToInt4(GetCellData(row, SourceIndexColumn), -1);
	if (rowSourceIndex == sourceIndex)
	{
		rowPath: string = Variant.ToString(GetCellData(row, PathColumn), "");
		if (rowPath == path)
			return row;
	}
}
return -1;]]>
			</body>
			<param access-modifier="private" name="sourceIndex" display-name="" uuid="8725442d-e270-4f67-b703-bd4929cbbeac" base-type="int8" base-type-id="1f8f5a02-c52c-4260-90d1-e3b1b93b3949" ver="5"/>
			<param access-modifier="private" name="path" display-name="" uuid="a17d9a56-8ddb-4294-a4ce-f39f0601cd3b" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="RequestFailed" display-name="RequestFailed" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[row: int4 = Model.FindParameter(sourceIndex, path);
SetCellData(row, ParameterColumn, path);
SetCellData(row, ResolveStateColumn, Const.ResolveState.Error);]]>
			</body>
			<param access-modifier="private" name="sourceIndex" display-name="" uuid="85a4aac2-8ab9-41e2-99f7-bda957d664d5" base-type="int8" base-type-id="1f8f5a02-c52c-4260-90d1-e3b1b93b3949" ver="5"/>
			<param access-modifier="private" name="path" display-name="" uuid="146b15c0-2bb4-41d7-9466-9fa0e949d0d8" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<param access-modifier="private" name="error" display-name="" uuid="b2e4e8bb-c927-412e-bac4-edaa389a9c2b" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<object access-modifier="private" name="TypeColumn" display-name="TypeColumn" uuid="d4969d2e-439e-43d8-b27b-b06c4b8b9627" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="FolderColumn" display-name="FolderColumn" uuid="db56214d-8000-4f66-bfbd-c50edd25419a" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<designed target="OptOfProcessingEvents" value="0" ver="5"/>
		<init target="FolderColumn" ver="5" value="1"/>
		<object access-modifier="private" name="SectionColumn" display-name="SectionColumn" uuid="ebc2a1e2-0a2c-4254-a439-0695292f57eb" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<init target="SectionColumn" ver="5" value="2"/>
		<object access-modifier="private" name="ParameterColumn" display-name="ParameterColumn" uuid="eeeb2612-d3ad-4093-8ac2-46012ccdb638" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<init target="ParameterColumn" ver="5" value="3"/>
		<object access-modifier="private" name="ValueColumn" display-name="ValueColumn" uuid="6788a2a6-b94a-4c4c-9f7e-16bed2948733" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<init target="ValueColumn" ver="5" value="4"/>
		<object access-modifier="private" name="SourceColumn" display-name="SourceColumn" uuid="5c302abd-1722-44d7-8986-40691a0f5950" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<init target="SourceColumn" ver="5" value="5"/>
		<init target="ConnectionStateColumn" ver="5" value="10"/>
		<object access-modifier="private" name="ItemIndexColumn" display-name="ItemIndexColumn" uuid="5a3b11cc-5af7-4c7b-a2d6-3b352673bc09" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<init target="ItemIndexColumn" ver="5" value="6"/>
		<object access-modifier="private" name="SourceIndexColumn" display-name="SourceIndexColumn" uuid="6b3977d0-2e8d-4636-866b-738bed420504" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<init target="SourceIndexColumn" ver="5" value="7"/>
		<object access-modifier="private" name="PathColumn" display-name="PathColumn" uuid="9eeb5127-58dd-453b-b4d0-a9f396b3b5b5" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<init target="PathColumn" ver="5" value="8"/>
		<object access-modifier="private" name="ResolveStateColumn" display-name="ResolveStateColumn" uuid="6200768f-db07-4486-954c-708144bbe1df" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<init target="ResolveStateColumn" ver="5" value="9"/>
		<object access-modifier="private" name="ConnectionStateColumn" display-name="ConnectionStateColumn" uuid="5d12b190-6f61-4068-baae-108ede5b6499" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="StatusColumn" display-name="StatusColumn" uuid="a8d32fee-611a-4a6e-adc7-274bff4cee10" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="IsModified" display-name="IsModified" uuid="c0ec7008-bab5-47a4-9661-6b5443877165" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="RowCount" display-name="RowCount" uuid="4c76d035-8e16-4b0a-acb1-6c23eb1b691e" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="5" description="" cardinal="1"/>
		<do access-modifier="private" name="MoveParameters" display-name="MoveParameters" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<param access-modifier="private" name="rows" display-name="" uuid="3ed50cab-67fc-47a4-bcf5-5704096f5d1c" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<param access-modifier="private" name="shift" display-name="" uuid="9d145938-a048-4b04-a008-b2e3a6dde606" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			<body kind="javascript">
				<![CDATA[var newRows = [];

// сортируем номера строк с учетом направления сдвига
var sortedRows = JSON.parse(rows).sort((a, b) => shift*(b-a));
log(JSON.stringify(sortedRows));

for (let i = 0; i < sortedRows.length; i++)
{
	var row = sortedRows[i];
	var targetRow = row + shift;	
	
	var sourceRowData = Model.GetRowDataAsJson(row);
	var targetRowData = Model.GetRowDataAsJson(targetRow);

	Model.SetRowDataAsJson(row, targetRowData);
	Model.SetRowDataAsJson(targetRow, sourceRowData);

	newRows.push(targetRow);
}

UpdateItemsRowIndex();

return JSON.stringify(newRows);]]>
			</body>
		</do>
		<do access-modifier="private" name="RemoveParameters" display-name="RemoveParameters" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[// сортируем по убыванию, чтобы при удалении строки не смещались
var sortedRows = JSON.parse(rows).sort((a, b) => b - a);

for (let i = 0; i < sortedRows.length; i += 1)
{
	var row = sortedRows[i];
	
	var sourceIndex = GetCellData(row, SourceIndexColumn);
	if (sourceIndex != null && sourceIndex > -1)
	{
		var itemIndex = GetCellData(row, ItemIndexColumn);
		if (itemIndex != null && itemIndex > -1)
			Items[sourceIndex].Unsubscribe(itemIndex);
	}
	RemoveRow(row);
}

UpdateItemsRowIndex();]]>
			</body>
			<param access-modifier="private" name="rows" display-name="" uuid="06942cfe-5abe-44f1-84d5-1514b9d10946" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="UpdateItemsRowIndex" display-name="UpdateItemsRowIndex" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[rowCount: int4 = GetRowCount();
for (row: int4 = 0; row < rowCount; row += 1)
{
	sourceIndex: int4 = Variant.ToInt4(GetCellData(row, SourceIndexColumn), -1);
	if (sourceIndex > -1)
	{
		itemIndex: int4 = Variant.ToInt4(GetCellData(row, ItemIndexColumn), -1);
		if (itemIndex > -1)
		{
			Items[sourceIndex].Rows[itemIndex] = row;
		}
	}
}]]>
			</body>
		</do>
		<do access-modifier="private" name="UpdateParameterValue" display-name="UpdateParameterValue" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[Model.SetCellData(row, Model.TypeColumn, dataType);
cellValue: variant = Converter.StringToVariant(value, dataType);

//todo #33908 Декоратор не форматирует метку времени если она добавлена в столбец с типом данных Variant
if (dataType == "timestamp")
	cellValue = Converter.VariantToLocalizedString(cellValue, dataType);

Model.SetCellData(row, Model.ValueColumn, cellValue);]]>
			</body>
			<param access-modifier="private" name="row" display-name="" uuid="479dba58-8596-47f0-bfdd-1c0ec3840ab5" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			<param access-modifier="private" name="value" display-name="" uuid="3509b4af-ac6a-4967-b2b1-454e52753d95" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<param access-modifier="private" name="dataType" display-name="" uuid="ce5624c6-3c04-40f2-ae0f-2c4c81e7328d" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<init target="TypeColumn" ver="5" value="0"/>
		<init target="StatusColumn" ver="5" value="11"/>
	</object>
	<object access-modifier="private" name="Layout" display-name="Layout" uuid="b3fdfe41-c146-479a-bf72-330cff44bac5" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="5" description="" cardinal="1">
		<designed target="Orientation" value="2" ver="5"/>
		<designed target="Gap" value="0" ver="5"/>
	</object>
	<do access-modifier="private" name="Clear" display-name="Clear" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[Model.Clear();

for (i: int4 = 0; i < Items.Length; i += 1)
	Items[i].Clear();]]>
		</body>
	</do>
	<do access-modifier="private" name="Add" display-name="Add" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[row: int4 = Model.FindParameter(sourceIndex, path);
if (row > -1)
{
	// выделяем добавленный ранее параметр
	View.SelectRow(row);
}
else
{
	row = Model.AddParameter(sourceIndex, path);

	// для корневого узла сразу получаем дочерние узлы, иначе запускаем разбор пути
	if (path == "")
		Browser[sourceIndex].TryGetChildren(row, path);
	else	Browser[sourceIndex].TryResolvePath(row, path);
}]]>
		</body>
		<param access-modifier="private" name="sourceIndex" display-name="" uuid="5d9b09c6-819a-4a4a-928c-48a9e0b07cdf" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
		<param access-modifier="private" name="path" display-name="" uuid="c3bdaf07-7037-4145-8af4-81b66bbcfeea" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
	</do>
	<do access-modifier="private" name="AddSeparator" display-name="AddSeparator" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[Model.AddRow();]]>
		</body>
	</do>
	<do access-modifier="private" name="GetViewSettings" display-name="GetViewSettings" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
		<body kind="javascript">
			<![CDATA[var settings = { 'Columns': {} };

for (var i = 0; i < View.Column.Length; i++)
{
	var column = View.Column[i];
	if (column.Id != "" && !column.Hidden)
	{
		var columnInfo = {
			"Width": column.Width
		};
		if (column.SortingEnabled)
		{
			columnInfo.SortOrder = column.SortOrder;
			columnInfo.SortPriority = column.SortPriority;
		}
		settings.Columns[column.Id] = columnInfo;
	}
}

settings.ExportToFile = {
	'FileType': ExportToFile.FileType
}

return JSON.stringify(settings);]]>
		</body>
	</do>
	<do access-modifier="private" name="UpdateView" display-name="UpdateView" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="javascript">
			<![CDATA[var settings = JSON.parse(json);

var columns = settings.Columns;
if (columns != undefined)
{
	View.Initialize();
	for (var i = 0; i < View.Column.Length; i++)
	{
		var column = View.Column[i];
		if (column.Id != "")
		{
			var columnInfo = columns[column.Id];
			if (columnInfo != undefined)
			{
				if (column.Width != columnInfo.Width)
					column.Width = columnInfo.Width;
	
				column.SortingEnabled = columnInfo.SortOrder != undefined;
				if (column.SortingEnabled)
				{
					column.SortOrder = columnInfo.SortOrder;
					column.SortPriority = columnInfo.SortPriority;
					if (View.SortPriorityCount < column.SortPriority)
						View.SortPriorityCount = column.SortPriority;
				}
			}
		}
	}

	// сортируем таблицу
	View.ApplySort();
}

var exportToFile = settings.ExportToFile;
if (exportToFile != undefined)
{
	ExportToFile.FileType = exportToFile.FileType;
}]]>
		</body>
		<param access-modifier="private" name="json" display-name="" uuid="207489a3-a60d-41d6-b56c-bd91c1a47748" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
	</do>
	<object access-modifier="private" name="Browser" display-name="Browser" uuid="724b8f63-16d6-4891-b79d-b04a69069aeb" base-type="ApStatJsonBrowser" base-type-id="5e2d9415-bd72-4aae-b63a-00e1b7b84046" ver="5" description="" cardinal="10">
		<designed target="IncludeFolders" value="true" ver="5"/>
		<designed target="IncludeSections" value="true" ver="5"/>
		<designed target="IncludeItems" value="true" ver="5"/>
		<designed target="IncludeNodeValueType" value="true" ver="5"/>
		<designed target="IncludeNodeValue" value="false" ver="5"/>
		<designed target="Recursive" value="true" ver="5"/>
		<designed target="PrettyFormat" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="GetChildrenComplete">
			<body kind="om">
				<![CDATA[//Debug.Log("GetChildren complete at " + DateTime.ToString(DateTime.Now()));
rowCount: int4 = Model.GetRowCount();
for (row: int4 = 0; row < rowCount; row += 1)
{
	sourceIndex: int4 = Variant.ToInt4(Model.GetCellData(row, Model.SourceIndexColumn), -1);
	if (sourceIndex == Index)
	{
		rowPath: string = Variant.ToString(Model.GetCellData(row, Model.PathColumn), "");
		if (rowPath == path)
		{		
			// отмечаем окончание разбора
			Model.SetCellData(row, Model.ResolveStateColumn, Const.ResolveState.Resolved);
			
			// разбираем дочерние узлы и выходим из цикла
			start: uint8 = DateTime.Now();
			ParseChildren(row, path, result);
			//Debug.Log("ParseChildren completed in " + String.ToString((DateTime.Now() - start) / 10000) + " ms");
			break;
		}
	}
}]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="5" event="GetChildrenFailed">
			<body kind="om">
				<![CDATA[//Debug.Log(String.ToString(Index) + ". Filed to get children of '" + path + "': " + errorDescription);
Model.RequestFailed(Index, path, errorDescription);]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="5" event="ResolvePathComplete">
			<body kind="om">
				<![CDATA[//Debug.Log(String.ToString(requestId) + ".RESOLVE: " + result);
rowCount: int4 = Model.GetRowCount();
for (row: int4 = 0; row < rowCount; row += 1)
{
	sourceIndex: int4 = Variant.ToInt4(Model.GetCellData(row, Model.SourceIndexColumn), -1);
	if (sourceIndex == Index)
	{
		rowPath: string = Variant.ToString(Model.GetCellData(row, Model.PathColumn), "");
		if (rowPath == path)
		{
			// обрабатываем разобранный путь и выходим из цикла
			ParsePathNodes(row, path, result);
			break;
		}
	}
}]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_6" display-name="Handler_6" ver="5" event="ResolvePathFailed">
			<body kind="om">
				<![CDATA[//Debug.Log(String.ToString(Index) + ". Filed to resolve '" + path + "': " + errorDescription);
Model.RequestFailed(Index, path, errorDescription);]]>
			</body>
		</do-on>
		<object access-modifier="private" name="StatSource" display-name="StatSource" uuid="7202e504-ff99-4292-a529-17b028231bb6" base-type="Statistics_Source" base-type-id="159f04e7-927b-436a-833f-953d0fcd7f97" base-const="true" base-ref="true" ver="5" description=""/>
		<do access-modifier="private" name="TryResolvePath" display-name="TryResolvePath" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[// отмечаем, что строка находится в состоянии разбора пути
Model.SetCellData(row, Model.ResolveStateColumn, Const.ResolveState.ResolvePath);

// если есть связь, то запускаем разбор
if (StatSource.ConnectionState == 2)
	ResolvePath(path);]]>
			</body>
			<param access-modifier="private" name="row" display-name="" uuid="83ab0064-b84c-40b4-8d7c-cd3fe1de844e" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			<param access-modifier="private" name="path" display-name="" uuid="377ea0f7-ed54-49f6-943e-dbb2c515b7a1" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="ParsePathNodes" display-name="ParsePathNodes" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var pathNodes = JSON.parse(pathNodesJSON);
			
var folder = "";
var section = "";
var parameter = "";
for (let i = 0; i < pathNodes.length; i++)
{
	var node = pathNodes[i];
	if (node.Type == 1)
	{
		if (folder == "")
			folder = node.Name;
		else folder = folder + "." + node.Name;
	}
	else if (node.Type == 2)
	{
		section = node.Name;
	}
	else if (node.Type == 3)
	{
		parameter = node.Name;
	}
}

// заполняем поля разобранного пути
Model.SetCellData(row, Model.FolderColumn, folder);
Model.SetCellData(row, Model.SectionColumn, section);
Model.SetCellData(row, Model.ParameterColumn, parameter);

var lastNode = pathNodes[pathNodes.length - 1];
if (lastNode.Type == 3)
{				
	// это параметр, который будет отображаться в данной строке
	Model.SetCellData(row, Model.ResolveStateColumn, Const.ResolveState.Resolved);
	
	// подписываемся на получение значений
	Items[Index].Subscribe(row, path);
	
	// выделяем добавленный параметр
	let viewRow = View.MapRowFromModel(row);
	View.SetSelectedRows("[" + viewRow + "]");
	View.SetCurrentCell(viewRow, View.CurrentColumn);
	View.ScrollTo(viewRow, View.CurrentColumn, 0);
}
else
{
	// запускаем просмотр дочерних узлов
	TryGetChildren(row, path);
}]]>
			</body>
			<param access-modifier="private" name="row" display-name="" uuid="4507c3b5-5bd8-4c24-8d21-0632be803c22" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			<param access-modifier="private" name="path" display-name="" uuid="9d9d03b3-2f01-4cc8-a5f4-d20436569e46" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<param access-modifier="private" name="pathNodesJSON" display-name="" uuid="ed3b8b6c-d684-460c-8b45-72046157657d" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="TryGetChildren" display-name="TryGetChildren" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[// устанавливаем признак того, что строка в состоянии получения дочерних узлов
Model.SetCellData(row, Model.ResolveStateColumn, Const.ResolveState.GetChildren);

// если есть связь, то запускаем просмотр дочерних узлов
if (StatSource.ConnectionState == 2)
{
	//Debug.Log("GetChildren invoked at " + DateTime.ToString(DateTime.Now()));
	GetChildren(path);
}]]>
			</body>
			<param access-modifier="private" name="row" display-name="" uuid="30f45b16-fcff-41ae-ba19-1a71ce20d870" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			<param access-modifier="private" name="path" display-name="" uuid="7f5b5e66-a30f-483a-a58d-bdd22f55f8b8" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="ParseChildren" display-name="ParseChildren" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var source = StatSource.GetSourceTitle();
var children = JSON.parse(childrenJSON);
var folder = Model.GetCellData(row, Model.FolderColumn) ?? "";
var section = Model.GetCellData(row, Model.SectionColumn) ?? "";

var newRows = [];
var parsedRows = [];
AddChildren(children, folder, section, row, path);

if (newRows.length > 0)
{	
	// добавляем строки в модель
	//log(JSON.stringify(newRows));
	Model.InsertRows(row, newRows.length - 1);
	Model.SetRowsDataAsJson(row, row + newRows.length - 1, JSON.stringify(newRows));
	
	// подписываемся
	for (let r = 0; r < newRows.length; r++)
		Items[Index].Subscribe(row + r, newRows[r].data[Model.PathColumn]);
}
else
{
	// удаляем строку, если ничего не добавилось
	Model.RemoveRow(row);
}

// выделяем строки с разобранными параметрами
if (parsedRows.length > 0)
{
	var viewRows = [];
	parsedRows.forEach(r => viewRows.push(View.MapRowFromModel(r)));

	var lastRow = viewRows[viewRows.length - 1];
	View.ScrollTo(lastRow, View.CurrentColumn, 0);
	View.SetCurrentCell(lastRow, View.CurrentColumn);	
	View.SetSelectedRows(JSON.stringify(viewRows));
}

function AddChildren(children, parentFolder, parentSection, parentRow, parentPath)
{
	var currentRow = parentRow;
	for (let i = 0; i < children.length; i++)
	{		
		let node = children[i];

		let path = Source.EscapePathPart(node.Name);
		if (parentPath != "")
			path = parentPath + "." + path;	
		
		if (node.Type == 1)
		{
			var folder = node.Name;
			if (parentFolder != "")
				folder = parentFolder + "." + folder;
			
			currentRow = AddChildren(node.Children, folder, "", currentRow, path);
		}
		else if (node.Type == 2)
		{
			var section = node.Name;
			currentRow = AddChildren(node.Children, parentFolder, section, currentRow, path);
		}
		else if (node.Type == 3)
		{
			// исключаем повторное добавление параметра
			var existed = Model.FindParameter(Index, path);
			if (existed == -1)
			{
				// заполняем поля строки с параметром
				var parameter = node.Name;
				var rowData = [null, parentFolder, parentSection, parameter, null, source, null, Index, path, null, null, null];
				newRows.push({ 'row': currentRow, 'data': rowData });

				existed = currentRow;
				currentRow += 1;
			}
			
			parsedRows.push(existed);
		}
	}
	return currentRow;
}]]>
			</body>
			<param access-modifier="private" name="row" display-name="" uuid="c9b14b72-981c-455a-9214-d6901326014d" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			<param access-modifier="private" name="path" display-name="" uuid="11645b26-37f0-4879-b26f-8024b73c4dda" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<param access-modifier="private" name="childrenJSON" display-name="" uuid="513d927f-98c9-474b-bca9-162098835bc9" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="ContinueTasks" display-name="ContinueTasks" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[Model.Initialize();

rowCount: int4 = Model.GetRowCount();
for (row: int4 = 0; row < rowCount; row += 1)
{
	sourceIndex: int4 = Variant.ToInt4(Model.GetCellData(row, Model.SourceIndexColumn), -1);
	if (sourceIndex == Index)
	{
		resolveState: int4 = Variant.ToInt4(Model.GetCellData(row, Model.ResolveStateColumn), -1);
		path: string = Variant.ToString(Model.GetCellData(row, Model.PathColumn), "");
		
		if (resolveState == Const.ResolveState.ResolvePath)
		{
			// запускам разбор пути
			ResolvePath(path);
		}
		else if (resolveState == Const.ResolveState.GetChildren)
		{
			// запускаем просмотр дочерних узлов
			GetChildren(path);
		}
	}
}]]>
			</body>
		</do>
		<init target="StatSource" ver="5" ref="init_Sources.Source[Index]"/>
		<init target="Source" ver="5" ref="init_Sources.Source[Index]"/>
		<object access-modifier="private" name="IsActive" display-name="IsActive" uuid="6b8a2818-1c0b-4c45-b31a-1d88201f987c" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[if (oldValue != value)
{
	oldValue = value;
	private.HasActiveSources.Update();
}]]>
				</body>
			</do-on>
			<object access-modifier="private" name="oldValue" display-name="oldValue" uuid="49b6546b-0cc8-46f6-bd5d-511e48060a80" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
		</object>
		<object access-modifier="private" name="ConnectionState" display-name="ConnectionState" uuid="125e6c1c-4316-4b06-9438-a2af956223f0" base-type="notifying_uint1" base-type-id="fed14c54-414c-56bd-549a-8d761c4d6200" ver="5" description="" cardinal="1">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[if (oldValue != value)
{
	oldValue = value;
		
	// при появлении связи нужно продолжить выполнение незаконченных операций
	if (value == 2)
		ContinueTasks();
}]]>
				</body>
			</do-on>
			<object access-modifier="private" name="oldValue" display-name="oldValue" uuid="4270035f-a601-43e6-843e-c4fc37f46927" base-type="uint1" base-type-id="f73099bc-ee13-42cf-82bb-87368b826707" ver="5" description="" cardinal="1"/>
		</object>
		<do-trace access-modifier="private" target="ConnectionState" ver="5">
			<body>
				<![CDATA[StatSource.ConnectionState]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="IsActive" ver="5">
			<body>
				<![CDATA[StatSource.IsActive]]>
			</body>
		</do-trace>
		<init target="IsActive" ver="5" value="false"/>
	</object>
	<designed target="Flip" value="0" ver="5"/>
	<object access-modifier="private" name="Items" display-name="Items" uuid="1c907802-b035-422c-818b-06665b957920" base-type="Statistics_Items" base-type-id="22b19935-161c-4414-860d-8df00bf7c03f" ver="5" cardinal="10">
		<init target="init_Source" ver="5" ref="init_Sources.Source[Index]"/>
		<object access-modifier="private" name="StatSource" display-name="StatSource" uuid="18aee015-744d-452e-82a0-e47d81b65372" base-type="Statistics_Source" base-type-id="159f04e7-927b-436a-833f-953d0fcd7f97" base-const="true" base-ref="true" ver="5" description=""/>
		<init target="StatSource" ver="5" ref="init_Sources.Source[Index]"/>
		<object access-modifier="private" name="IsActive" display-name="IsActive" uuid="9155311f-dfa6-400a-b47c-53f10fbd2e2c" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="javascript">
					<![CDATA[if (oldValue != value)
{
	oldValue = value;
	
	if (!value)
	{
		var rows = [];
		for (var r = 0; r < Model.GetRowCount(); r++)
		{
			//Удаляем все строки с отключаемым источником
			if (Model.GetCellData(r, Model.SourceIndexColumn) == Index)
				rows.push(r);
		}
		if (rows.length > 0)
			Model.RemoveParameters(JSON.stringify(rows));
	}
}]]>
				</body>
			</do-on>
			<object access-modifier="private" name="oldValue" display-name="oldValue" uuid="900d6044-067d-4db3-95b3-ca9ddad57b51" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
		</object>
		<object access-modifier="private" name="ConnectionState" display-name="ConnectionState" uuid="7ffda6d2-9852-484a-baa3-1a91f8dc961a" base-type="notifying_uint1" base-type-id="fed14c54-414c-56bd-549a-8d761c4d6200" ver="5" description="" cardinal="1">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[if (oldValue != value)
{
	oldValue = value;
	//Debug.Log(String.ToString(Index) + ". Обновляем состояние подключения у параметров: " + String.ToString(value));
	for (i: int4 = 0; i < Rows.Length; i += 1)
	{
		if (Rows[i] > -1)
			Model.SetCellData(Rows[i], Model.ConnectionStateColumn, value);
	}
}]]>
				</body>
			</do-on>
			<object access-modifier="private" name="oldValue" display-name="oldValue" uuid="a0a6f6f2-529c-4608-a2d8-4ef09567316a" base-type="uint1" base-type-id="f73099bc-ee13-42cf-82bb-87368b826707" ver="5" description="" cardinal="1"/>
		</object>
		<do-trace access-modifier="private" target="ConnectionState" ver="5">
			<body>
				<![CDATA[StatSource.ConnectionState]]>
			</body>
		</do-trace>
		<object access-modifier="private" name="Rows" display-name="Rows" uuid="e6a536d7-4b1e-4b54-b148-d9d822502f21" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1000"/>
		<object access-modifier="private" name="OnChanged" display-name="OnChanged" uuid="b2c15825-e604-44fe-bff3-bc18f992caf8" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="javascript">
					<![CDATA[var args = JSON.parse(OnChangedArgs.Get());
//Debug.Log(JSON.stringify(args));

var row = Rows[args.index];
if (row > -1)
{	
	Model.SetCellData(row, Model.StatusColumn, args.status);
	
	if (args.status == 1)
	{
		// обновляем значение
		Model.UpdateParameterValue(row, args.value, args.dataType);
	}
}]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="OnError" display-name="OnError" uuid="ffe0b792-d43b-4020-a94f-6850b87e14a2" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="javascript">
					<![CDATA[var args = JSON.parse(OnErrorArgs.Get());

if (args.errorDescription != undefined)
	Debug.Log(args.errorDescription + " - error for '" + args.path + "' on " + StatSource.GetSourceTitle());]]>
				</body>
			</do-on>
		</object>
		<init target="pOnChanged" ver="5" ref="OnChanged"/>
		<init target="pOnError" ver="5" ref="OnError"/>
		<init target="Rows" ver="5" value="-1"/>
		<do access-modifier="private" name="Clear" display-name="Clear" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[base.Clear();
for(i: int4 = 0; i < Rows.Length; i += 1)
	Rows[i] = -1;
CountExceeded = false;]]>
			</body>
		</do>
		<do access-modifier="private" name="Subscribe" display-name="Subscribe" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (!CountExceeded)
{
	itemIndex: int4 = base.Add(path);
	if (itemIndex > -1)
	{
		Rows[itemIndex] = row;
		Model.SetCellData(row, Model.ItemIndexColumn, itemIndex);	
		// устанавливаем в таблице значение состояние подключение к серверу
		Model.SetCellData(row, Model.ConnectionStateColumn, ConnectionState);
		base.Subscribe(itemIndex);
	}
	else
	{
		CountExceeded = true;
		private.ShowWarning.message = "Для одного источника не может отображаться более " + String.ToString(Item.Length) + " параметров";
		private.ShowWarning.Invoke();
	}
}]]>
			</body>
			<param access-modifier="private" name="row" display-name="" uuid="1cf69e29-19ae-40b6-8bcc-a30cf5abca23" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			<param access-modifier="private" name="path" display-name="" uuid="7b2a0145-6fae-4cba-a9b1-3bd93c3152f2" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<object access-modifier="private" name="CountExceeded" display-name="CountExceeded" uuid="d1ef590f-384a-4d12-8330-26375a72b98b" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
		<do access-modifier="private" name="Unsubscribe" display-name="Unsubscribe" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[base.Unsubscribe(itemIndex);
Rows[itemIndex] = -1;
CountExceeded = false;]]>
			</body>
			<param access-modifier="private" name="itemIndex" display-name="" uuid="715d442c-cb4f-47be-ba26-cdff5f62ca5f" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
		</do>
		<do-trace access-modifier="private" target="IsActive" ver="5">
			<body>
				<![CDATA[StatSource.IsActive]]>
			</body>
		</do-trace>
	</object>
	<object access-modifier="private" name="Files" display-name="Files" uuid="a82998a0-f0b2-4c73-b4e7-d781f6afbd71" base-type="FileSystem" base-type-id="34d744f9-7303-4077-a3f7-9c06c0945512" ver="5">
		<designed target="RootPath" value="/" ver="5"/>
	</object>
	<object access-modifier="private" name="Initializer" display-name="Initializer" uuid="6c02f8f5-1236-44fd-b296-c01a4d958664" base-type="Initializer" base-type-id="6db89679-9299-4993-ad1a-0d086cd1c7d2" ver="5" description="" cardinal="1">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Initialized">
			<body kind="om">
				<![CDATA[Model.Initialize();
View.Initialize();
View.Drop.AddAcceptedFormat("statistics-node");]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="pSources" display-name="pSources" uuid="270c8a47-f553-47cc-b997-ec9a1b749e25" base-type="Statistics_Sources" base-type-id="339b01a5-f79f-4676-9044-5a3cdb3c76a9" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="pUserSettingsChanged" display-name="pUserSettingsChanged" uuid="6529c103-e6b2-4e31-b96f-6c808fe330c8" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5" description=""/>
	<param access-modifier="private" name="init_Theme" display-name="Тема оформления" uuid="82a7826d-933d-4882-93f7-348f460df9eb" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" base-const="true" base-ref="true" ver="5"/>
	<param access-modifier="private" name="init_Sources" display-name="init_Sources" uuid="879138ad-d910-4cda-ab23-6c05ac22effd" base-type="Statistics_Sources" base-type-id="339b01a5-f79f-4676-9044-5a3cdb3c76a9" base-const="true" base-ref="true" ver="5" description=""/>
	<do-trace access-modifier="private" target="PenColor" ver="5">
		<body>
			<![CDATA[private.pTheme.BorderColor]]>
		</body>
	</do-trace>
	<param access-modifier="private" name="init_ScreenKeyboard" display-name="Вызов экранной клавиатуры" uuid="6a6e1188-c170-4ae6-8efa-49d31dd3e87b" base-type="ScreenKeyboardOptions" base-type-id="0589bc8e-fbb2-4f0e-b5d2-f0d825538ef1" base-const="true" base-ref="true" ver="5" description=""/>
	<param access-modifier="private" name="init_Permissions" display-name="Разрешения" uuid="585ff6e3-1b6f-4289-b3a3-84c2ad510099" base-type="Statistics_Permissions" base-type-id="cb7a3e0d-75a2-404f-bf4c-763ec4f725c7" base-const="true" base-ref="true" ver="5" description=""/>
	<param access-modifier="private" name="init_Settings" display-name="Настройки" uuid="0c006465-8bb0-4ff8-a0a3-99e2a1f4cfec" base-type="Statistics_Settings" base-type-id="a8c582fd-25fb-4cc3-8522-3166d1a63de6" base-const="true" base-ref="true" ver="5" description=""/>
</type>

