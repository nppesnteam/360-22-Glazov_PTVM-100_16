<type access-modifier="public" name="Explorer" display-name="Explorer" uuid="9013d06f-00da-4a39-a352-02b02f4a6679" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5" description="">
	<designed target="X" value="0" ver="5"/>
	<designed target="Y" value="0" ver="5"/>
	<designed target="ZValue" value="0" ver="5"/>
	<designed target="Rotation" value="0" ver="5"/>
	<designed target="Scale" value="1" ver="5"/>
	<designed target="Visible" value="true" ver="5"/>
	<designed target="Opacity" value="1" ver="5"/>
	<designed target="Enabled" value="true" ver="5"/>
	<designed target="Tooltip" value="" ver="5"/>
	<designed target="Width" value="1000" ver="5"/>
	<designed target="Height" value="400" ver="5"/>
	<designed target="RoundingRadius" value="0" ver="5"/>
	<designed target="PenColor" value="4278190080" ver="5"/>
	<designed target="PenStyle" value="1" ver="5"/>
	<designed target="PenWidth" value="1" ver="5"/>
	<designed target="BrushColor" value="4278190080" ver="5"/>
	<designed target="BrushStyle" value="0" ver="5"/>
	<object access-modifier="private" name="private" display-name="private" uuid="7b9294e9-0adf-4c18-84b1-14829a98ad33" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5">
		<do access-modifier="private" name="SaveLayout" display-name="SaveLayout" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var filePath = GetLayoutFilePath();
try
{
	var settings = 
	{
		"Tree": {
			"Visible": TreeVisible.Value,
			"Width": Splitter.Position.Value
		}
	};

	var folderPath = Files.ParentPath(filePath);
	if (!Files.Exists(folderPath))
		Files.CreateRecursiveFolder(folderPath);
		
	Files.WriteTextFile(filePath, JSON.stringify(settings, null, 2));
}
catch(error)
{
	log("Не удалось сохранить расположение элементов в "  + filePath + ":\n" + error);
}]]>
			</body>
		</do>
		<do access-modifier="private" name="LoadLayout" display-name="LoadLayout" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var filePath = GetLayoutFilePath();
if (Files.Exists(filePath))
{
	//log("Загрузка расположения элементов из файла "  + filePath);
	try
	{
		var json = Files.ReadTextFile(filePath);
		var settings = JSON.parse(json);
		
		var tree = settings.Tree;
		if (tree != undefined)
		{
			Splitter.Position = tree.Width;
			TreeVisible = tree.Visible == true;
		}
	}
	catch(error)
	{
		log("Не удалось загрузить расположение элементов из "  + filePath + ":\n" + error);
	}
}]]>
			</body>
		</do>
		<do access-modifier="private" name="GetLayoutFilePath" display-name="GetLayoutFilePath" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="om">
				<![CDATA[folderPath: string = unit.ProductInfo.GetUserDataFolder();
return Files.CombinePath(folderPath, "layout.json");]]>
			</body>
		</do>
		<object access-modifier="private" name="ChangeCredentials" display-name="ChangeCredentials" uuid="d227f498-a723-4d28-845c-caf21720c6c9" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="19d55fe2-aac5-4c2d-9f99-bac6b51e5e26" base-type="CredentialsDialog" base-type-id="312561c8-0874-4534-9316-938390e51d05" ver="5">
					<init target="pCredentials" ver="5" ref="Credentials"/>
					<init target="OkAction" ver="5" ref="OnComplete"/>
				</object>
			</do-on>
			<object access-modifier="private" name="sourceIndex" display-name="sourceIndex" uuid="bee20dff-552b-4c49-9d41-b2476ea51522" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="OnComplete" display-name="OnComplete" uuid="16817966-f086-4f09-b29c-50cd618e3142" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[credentials: string = Credentials.ToJSON();
Sources.Source[sourceIndex].SetCredentials(credentials);]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="Credentials" display-name="Credentials" uuid="39892107-41a3-4b32-904c-2ba111220cd5" base-type="ApCredentials" base-type-id="fef70643-767d-4533-98e9-412948317273" ver="5" description="" cardinal="1">
				<designed target="FilePath" value="" ver="5"/>
				<do access-modifier="private" name="ToJSON" display-name="ToJSON" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="om">
						<![CDATA[if (Assigned)
{
	folder: string = ProductInfo.GetUserDataFolder();
	Files.CreateRecursiveFolder(folder);
	
	FilePath = Files.CombinePath(folder, String.ToString(DateTime.UtcNow()));
	if (Save())
	{
		credentials: string = Files.ReadTextFile(FilePath);
		//Debug.Log("Credentials: " + credentials);
		Files.RemoveRecursive(FilePath);
		return credentials;
	}
	else
		Debug.Log(GetLastError());
}

return "";]]>
					</body>
				</do>
			</object>
		</object>
		<object access-modifier="private" name="ShowError" display-name="ShowError" uuid="ae783620-38e9-4a16-a2fe-02cd400d89ba" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="47c93f2d-358b-4d3a-84ed-614ae1192907" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="5">
					<init target="Message" ver="5" ref="message"/>
					<init target="Icon" ver="5" value="3"/>
					<init target="Buttons" ver="5" value="0"/>
				</object>
			</do-on>
			<object access-modifier="private" name="message" display-name="message" uuid="5edf45f4-c3bc-4813-a6c9-9745521c8f51" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="title" display-name="title" uuid="5c0a264a-677d-47c1-a0b0-8b8ac5d8c32d" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
		</object>
		<object access-modifier="private" name="ShowWarning" display-name="ShowWarning" uuid="5b284637-77fa-4db1-b231-296dcdc1ce7a" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="0792ada6-273c-4ed4-8ea8-f272bbe448e1" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="5">
					<init target="Message" ver="5" ref="message"/>
					<init target="Icon" ver="5" value="2"/>
					<init target="Buttons" ver="5" value="0"/>
				</object>
			</do-on>
			<object access-modifier="private" name="message" display-name="message" uuid="b18c52ec-182d-43d3-8046-bbb251278154" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="title" display-name="title" uuid="48272363-a33b-403e-b2f6-aad7c8bfc624" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="5" description="" cardinal="1"/>
		</object>
		<object access-modifier="private" name="pTheme" display-name="Тема оформления" uuid="e0344e33-04d3-44b5-a2df-9ff87ac35e8e" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" base-const="true" base-ref="true" ver="5"/>
		<init target="pTheme" ver="5" ref="init_Theme"/>
	</object>
	<object access-modifier="private" name="Layout" display-name="Layout" uuid="e6a99399-4c05-4150-85a9-15261e714bc8" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="5" description="" cardinal="1">
		<designed target="Orientation" value="1" ver="5"/>
		<designed target="Gap" value="0" ver="5"/>
	</object>
	<object access-modifier="private" name="Files" display-name="Files" uuid="2ca687ba-7620-42ff-8ff8-b71224991fad" base-type="FileSystem" base-type-id="34d744f9-7303-4077-a3f7-9c06c0945512" ver="5">
		<designed target="RootPath" value="/" ver="5"/>
	</object>
	<do access-modifier="private" name="SaveSignalsList" display-name="SaveSignals" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<param access-modifier="private" name="filePath" display-name="" uuid="33a8815d-6894-4b31-bd03-b38fd4e3577d" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<body kind="javascript">
			<![CDATA[var signalList = {
	'Sources': [],
	'Signals': []
};

// формируем список источников
for (let sourceIndex = 0; sourceIndex < Sources.Source.Length; sourceIndex++)
{
	var source = Sources.Source[sourceIndex];
	if (source.Active)
	{
		var sourceInfo = {
			'index': sourceIndex,
			'location': source.Location,
			'port': source.Port,
			'title': source.Title,
		};

		var credentials = source.GetCredentials();
		if (credentials != "")
			sourceInfo.credentials = JSON.parse(credentials);
		signalList.Sources.push(sourceInfo);
	}
}

// формируем список параметров
var rowCount = Table.Model.GetRowCount();
for (let row = 0; row < rowCount; row++)
{
	var sourceIndex = Table.Model.GetCellData(row, Table.Model.SourceIndexColumn);
	if (sourceIndex != undefined && sourceIndex > -1)
	{
		// путь до параметра и индекс источника
		signalList.Signals.push({
			'path': Table.Model.GetCellData(row, Table.Model.PathColumn),
			'sourceIndex': Table.Model.GetCellData(row, Table.Model.SourceIndexColumn)
		});
	}
	else
	{
		// разделитель
		signalList.Signals.push({});
	}
}

// сохраняем список в файл
var json = JSON.stringify(signalList, null, 2);
try
{
	Files.WriteTextFile(filePath, json);
}
catch(error)
{
	private.ShowError.message = "Не удалось сохранить список параметров в "  + filePath + ":\n" + error;
	private.ShowError.Invoke();
}]]>
		</body>
	</do>
	<do access-modifier="private" name="OpenSignalsList" display-name="LoadSignals" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<param access-modifier="private" name="filePath" display-name="" uuid="fd4c520e-9f45-4687-89ee-7ad5750aeba2" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<body kind="javascript">
			<![CDATA[Table.Clear();

// запоминаем активные источники
var activeSources = new Set();
for (let si = 0; si < Sources.Source.Length; si++)
{
	var source = Sources.Source[si];
	if (source.Active)
		activeSources.add(si);
}

if (Files.Exists(filePath))
{
	//log("Загрузка списка параметров из файла " + filePath);
	try
	{
		var signalList = JSON.parse(Files.ReadTextFile(filePath));
		
		// подключение к источникам
		var sources = new Map();
		var sourcesList = signalList.Servers == undefined ? (signalList.Sources == undefined ? "" : signalList.Sources) : signalList.Servers; // обратная совместимость
		for (let sourceInfo of sourcesList)
		{
			var credentials = sourceInfo.credentials == undefined ? "" : JSON.stringify(sourceInfo.credentials);
			var sourceTitle = sourceInfo.title == undefined ? "" : sourceInfo.title;
			var sourceIndex = Sources.ConnectToServer(sourceInfo.location, sourceInfo.port, sourceTitle, credentials);
			
			sources.set(sourceInfo.index, sourceIndex);
			activeSources.delete(sourceIndex);
		}
		
		// добавление параметров
		for (let signalInfo of signalList.Signals)
		{
			var path = signalInfo.tag == undefined ? (signalInfo.path == undefined ? "" : signalInfo.path) : signalInfo.tag; // обратная совместимость
			if (path != "")
			{
				var sourceIndex = sources.get(signalInfo.sourceIndex);
				var row = Table.Add(sourceIndex, path);
			}
			else
				Table.InsertSeparator();
		}
	}
	catch(error)
	{
		private.ShowError.message = "Не удалось загрузить список сигналов из "  + filePath + ":\n" + error;
		private.ShowError.Invoke();
	}
}
else
{
		private.ShowWarning.message = "Файл не найден: \n "  + filePath;
		private.ShowWarning.Invoke();
}

// отключаемся от оставшихся неиспользованных источников
for(let sourceIndex of activeSources)
	Sources.Source[sourceIndex].Disconnect();]]>
		</body>
	</do>
	<object access-modifier="private" name="Tree" display-name="Tree" uuid="420b24e8-6cd2-4be6-9ce2-c39a19553c13" base-type="Explorer_Tree" base-type-id="0de295cc-b0bf-4074-8140-d96edc29fcd3" ver="5" description="" cardinal="1">
		<designed target="X" value="0" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Width" value="250" ver="5"/>
		<designed target="Height" value="400" ver="5"/>
		<object access-modifier="private" name="SizeLimits" display-name="SizeLimits" uuid="a02da38d-cd6c-42d7-b488-598f57eadebd" base-type="LayoutSizeLimits" base-type-id="10342c1f-560b-4160-9de5-7e2c08026f47" ver="5" description="" cardinal="1">
			<designed target="MinWidth" value="250" ver="5"/>
			<designed target="MinHeight" value="0" ver="5"/>
			<designed target="MaxWidth" value="250" ver="5"/>
			<designed target="MaxHeight" value="16777215" ver="5"/>
			<do-trace access-modifier="private" target="MinWidth" ver="5">
				<body>
					<![CDATA[Splitter.Position]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="MaxWidth" ver="5">
				<body>
					<![CDATA[Splitter.Position]]>
				</body>
			</do-trace>
		</object>
		<init target="init_ApSources" ver="5" ref="Sources"/>
		<object access-modifier="private" name="DoubleClicked" display-name="DoubleClicked" uuid="a3361c27-08e8-4269-9582-88edbb8dd92e" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="javascript">
					<![CDATA[var itemInfo = GetCurrentItemInfo();
if (itemInfo != "")
{
	var info = JSON.parse(itemInfo);
	// добавляем только параметр (исключаем добавление источников и папок двойным кликом)
	if (info.type != 0 && info.type != null)
	{
		var sourceIndex = Sources.private.FindServer(info.source.location, info.source.port);
		if (sourceIndex > -1)
			Table.Add(sourceIndex, info.path);
	}
}]]>
				</body>
			</do-on>
		</object>
		<init target="pDoubleClicked" ver="5" ref="DoubleClicked"/>
		<object access-modifier="private" name="MouseRightClicked" display-name="MouseRightClicked" uuid="043ca91a-ab9c-488c-b069-74f10e344682" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="om">
					<![CDATA[itemInfo = GetCurrentItemInfo();
if (itemInfo != "")
{
	OpenMenu.mouseX = View.ScreenX(View.MouseX, View.MouseY);
	OpenMenu.mouseY = View.ScreenY(View.MouseX, View.MouseY);
	OpenMenu.Invoke();
}]]>
				</body>
			</do-on>
			<object access-modifier="private" name="itemInfo" display-name="itemInfo" uuid="7aa560d1-b276-43f0-8d8f-41280e52ddfd" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="OpenMenu" display-name="OpenMenu" uuid="127b8e6d-5d68-4337-b620-ebdc5515423b" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<object access-modifier="private" name="mouseX" display-name="mouseX" uuid="46e2b908-5aaa-4f58-89d9-e3a4a3430a1f" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
				<object access-modifier="private" name="mouseY" display-name="mouseY" uuid="1320b749-a048-4ef1-94e2-ddcdba81c5a4" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
				<object access-modifier="private" name="MenuResult" display-name="MenuResult" uuid="8bd0aaf7-6802-4e2e-9b78-8d540f9d2bd9" base-type="MenuResult" base-type-id="0fe7658c-92f4-4af7-b038-3594414ac651" ver="5" description="" cardinal="1"/>
				<do access-modifier="private" name="GetMenuItems" display-name="GetMenuItems" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="javascript">
						<![CDATA[var info = JSON.parse(itemInfo);

var items = [];

if (info.type == null)
{
	items.push({ 'id': "refreshNode", 'title': "Обновить", 'icon': "Explorer_Icons/Refresh16.png", 'active': RefreshCurrentNode.Enabled });
	items.push({ 'id': "disconnect", 'title': "Отключиться", 'icon': "Explorer_Icons/Disconnect16.png" });
	items.push({ 'id': "set_credentials", 'title': "Указать учетные данные..." });
}
else
{
	items.push({ 'id': "refreshNode", 'title': "Обновить", 'icon': "Explorer_Icons/Refresh16.png", 'active': RefreshCurrentNode.Enabled });
	items.push({ 'id': "addNodeToTable", 'title': "Добавить в таблицу", 'icon': "Explorer_Icons/Add16.png" , 'active': ((info.type != 0) ? true: false)});
}

return JSON.stringify(items);]]>
					</body>
				</do>
				<object access-modifier="private" name="OnMenuClick" display-name="OnMenuClick" uuid="e3748b71-1372-4bfc-af67-89eab8aa3c00" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="javascript">
							<![CDATA[var info = JSON.parse(itemInfo);

if (MenuResult.Id == "refreshNode")
{
	RefreshCurrentNode.Invoke();
}
else if (MenuResult.Id == "disconnect")
	Sources.DisconnectFromServer(info.source.location, info.source.port);
else if (MenuResult.Id == "set_credentials")
{
	here.private.ChangeCredentials.sourceIndex = Sources.private.FindServer(info.source.location, info.source.port);
	here.private.ChangeCredentials.Invoke();
}
else if (MenuResult.Id == "addNodeToTable")
{
	var sourceIndex;
	sourceIndex = Sources.private.FindServer(info.source.location, info.source.port);

	if (sourceIndex > -1)
		Table.Add(sourceIndex, info.path);
}]]>
						</body>
					</do-on>
				</object>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-by-id="false" form-action="open-new">
					<object access-modifier="private" uuid="a6c88c49-4e7c-40f2-a835-f04740315cff" base-type="Menu" base-type-id="07bb4545-980a-4140-bbaa-4d1397447864" ver="5">
						<init target="WindowX" ver="5" ref="mouseX"/>
						<init target="WindowY" ver="5" ref="mouseY"/>
						<init target="Items" ver="5">
							<expr>
								<![CDATA[GetMenuItems()]]>
							</expr>
						</init>
						<init target="pResult" ver="5" ref="MenuResult"/>
						<init target="pAction" ver="5" ref="OnMenuClick"/>
					</object>
				</do-on>
			</object>
		</object>
		<init target="pMouseRightClicked" ver="5" ref="MouseRightClicked"/>
		<do-trace access-modifier="private" target="PenColor" ver="5">
			<body>
				<![CDATA[private.pTheme.BorderColor]]>
			</body>
		</do-trace>
		<init target="init_Theme" ver="5" ref="here.init_Theme"/>
		<do-trace access-modifier="private" target="Visible" ver="5">
			<body>
				<![CDATA[TreeVisible]]>
			</body>
		</do-trace>
	</object>
	<object access-modifier="private" name="Splitter" display-name="Splitter" uuid="ba6731f0-bddf-438f-b874-a08923e5cbb5" base-type="HorizontalSplitter" base-type-id="9f2e11a5-219a-4c9b-bceb-928724b2f965" ver="5" description="" cardinal="1">
		<designed target="X" value="996" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Width" value="4" ver="5"/>
		<designed target="Height" value="400" ver="5"/>
		<init target="Position" ver="5" value="250"/>
		<init target="Minimum" ver="5" value="30"/>
		<init target="init_Theme" ver="5" ref="here.init_Theme"/>
		<do-trace access-modifier="private" target="Visible" ver="5">
			<body>
				<![CDATA[TreeVisible]]>
			</body>
		</do-trace>
	</object>
	<object access-modifier="private" name="Table" display-name="Table" uuid="9e4cc256-ebe2-47cd-9b4e-4b33afb3c637" base-type="Explorer_Table" base-type-id="d1d2812d-53dc-43ce-a92a-c3167d8e9e0f" ver="5" cardinal="1">
		<designed target="X" value="254" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Width" value="746" ver="5"/>
		<designed target="Height" value="400" ver="5"/>
		<object access-modifier="private" name="LayoutWeight" display-name="LayoutWeight" uuid="d216adcc-2171-48b4-b503-f83b54555ee1" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="5" description="" cardinal="1">
			<designed target="Weight" value="10000" ver="5"/>
		</object>
		<init target="pLog" ver="5" ref="init_LogView"/>
		<init target="init_Sources" ver="5" ref="here.Sources"/>
		<init target="pSources" ver="5" ref="here.Sources"/>
		<init target="init_ScreenKeyboard" ver="5" ref="here.init_ScreenKeyboard"/>
		<init target="init_Theme" ver="5" ref="here.init_Theme"/>
	</object>
	<param access-modifier="private" name="init_LogView" display-name="init_LogView" uuid="5f5a1485-a4e7-43b6-ac12-bfecac47c804" base-type="LogView" base-type-id="493c7166-bdbb-4717-8f49-2906ed88e930" base-const="true" base-ref="true" ver="5" description=""/>
	<designed target="Flip" value="0" ver="5"/>
	<object access-modifier="private" name="TreeVisible" display-name="Отображать дерево" uuid="8c2f1068-19ad-4679-80a5-ea63462dc26e" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1"/>
	<init target="TreeVisible" ver="5" value="true"/>
	<object access-modifier="private" name="Sources" display-name="Sources" uuid="250bda59-e3f0-40bd-a802-f6bbe3624efd" base-type="Explorer_Sources" base-type-id="f8a32faa-5b1f-449d-afb5-af7f01e4caf9" ver="5" description="" cardinal="1">
		<init target="pLog" ver="5" ref="init_LogView"/>
	</object>
	<object access-modifier="private" name="Debug" display-name="Debug" uuid="aec3f55f-870d-4aa6-841f-b61f7bc71db5" base-type="DebugTool" base-type-id="43946044-139a-43f4-a7b8-19a6074ffc56" ver="5"/>
	<param access-modifier="private" name="init_ScreenKeyboard" display-name="Вызов экранной клавиатуры" uuid="00798d61-6d48-41a3-a97d-a290971a9869" base-type="ScreenKeyboardOptions" base-type-id="0589bc8e-fbb2-4f0e-b5d2-f0d825538ef1" ver="5" description="" cardinal="1" base-ref="true"/>
	<param access-modifier="private" name="init_Theme" display-name="Тема оформления" uuid="585ebb76-9e39-4758-9b3e-fb0e8b8c3818" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" base-const="true" base-ref="true" ver="5"/>
</type>

