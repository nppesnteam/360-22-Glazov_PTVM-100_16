<type access-modifier="private" name="Alarms_ExportAlarms" display-name="Form_2_1" uuid="4eaa655b-e7df-43ce-a704-693e19fb182e" base-type="Alarms_ResizableFormType" base-type-id="72d52d3d-8dc1-421a-8d5b-3d34757967c2" ver="2">
	<designed target="X" value="0" ver="2"/>
	<designed target="Y" value="0" ver="2"/>
	<designed target="Rotation" value="0" ver="2"/>
	<designed target="Scale" value="1" ver="2"/>
	<designed target="Visible" value="true" ver="2"/>
	<designed target="Enabled" value="true" ver="2"/>
	<designed target="Tooltip" value="" ver="2"/>
	<designed target="Width" value="1048" ver="2"/>
	<designed target="Height" value="500" ver="2"/>
	<designed target="PenColor" value="4278190080" ver="2"/>
	<designed target="PenStyle" value="0" ver="2"/>
	<designed target="PenWidth" value="1" ver="2"/>
	<designed target="BrushColor" value="4293980400" ver="2"/>
	<designed target="BrushStyle" value="1" ver="2"/>
	<designed target="WindowX" value="0" ver="2"/>
	<designed target="WindowY" value="0" ver="2"/>
	<designed target="WindowWidth" value="1048" ver="2"/>
	<designed target="WindowHeight" value="500" ver="2"/>
	<designed target="WindowCaption" value="Сохранить в файл" ver="2"/>
	<designed target="ShowWindowCaption" value="true" ver="2"/>
	<designed target="ShowWindowMinimize" value="false" ver="2"/>
	<designed target="ShowWindowMaximize" value="false" ver="2"/>
	<designed target="ShowWindowClose" value="true" ver="2"/>
	<designed target="AlwaysOnTop" value="false" ver="2"/>
	<designed target="WindowSizeMode" value="0" ver="2"/>
	<designed target="WindowBorderStyle" value="2" ver="2"/>
	<designed target="WindowState" value="0" ver="2"/>
	<designed target="WindowScalingMode" value="0" ver="2"/>
	<designed target="MonitorNumber" value="0" ver="2"/>
	<designed target="WindowPosition" value="0" ver="2"/>
	<designed target="WindowCloseMode" value="0" ver="2"/>
	<object access-modifier="private" name="Debug" display-name="Debug" uuid="b48d5662-2c25-4fa3-b5c0-0d8c57afec39" base-type="DebugTool" base-type-id="43946044-139a-43f4-a7b8-19a6074ffc56" ver="2"/>
	<object access-modifier="private" name="Buttons" display-name="Buttons" uuid="e954ef04-9632-41c0-b395-826574e321cc" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="4">
		<designed target="X" value="0" ver="4"/>
		<designed target="Y" value="0" ver="4"/>
		<designed target="ZValue" value="0" ver="4"/>
		<designed target="Rotation" value="0" ver="4"/>
		<designed target="Scale" value="1" ver="4"/>
		<designed target="Visible" value="true" ver="4"/>
		<designed target="Opacity" value="1" ver="4"/>
		<designed target="Enabled" value="true" ver="4"/>
		<designed target="Tooltip" value="" ver="4"/>
		<designed target="Width" value="1220" ver="4"/>
		<designed target="Height" value="50" ver="4"/>
		<designed target="RoundingRadius" value="0" ver="4"/>
		<designed target="PenColor" value="4278190080" ver="4"/>
		<designed target="PenStyle" value="0" ver="4"/>
		<designed target="PenWidth" value="1" ver="4"/>
		<designed target="BrushColor" value="4278190080" ver="4"/>
		<designed target="BrushStyle" value="0" ver="4"/>
		<object access-modifier="private" name="ExportButton" display-name="ExportButton" uuid="48aa3221-adcc-4f47-b6e4-d2468697d319" base-type="Button" base-type-id="61e46e4a-827f-4dd2-ac8a-b68bcaddf442" ver="2">
			<designed target="X" value="10" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="Сохранить в файл" ver="2"/>
			<designed target="Width" value="40" ver="2"/>
			<designed target="Height" value="40" ver="2"/>
			<designed target="Text" value="" ver="2"/>
			<designed target="TextAlignment" value="132" ver="2"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
			<designed target="FontColor" value="0xff000000" ver="2"/>
			<designed target="OnClickFontColor" value="0xff000000" ver="2"/>
			<designed target="OnHoverFontColor" value="0xff000000" ver="2"/>
			<designed target="BrushColor" value="0xfff0f0f0" ver="2"/>
			<designed target="BrushStyle" value="1" ver="2"/>
			<designed target="OnClickBrushColor" value="0xffa0a0a0" ver="2"/>
			<designed target="OnClickBrushStyle" value="1" ver="2"/>
			<designed target="OnHoverBrushColor" value="0xffffffff" ver="2"/>
			<designed target="OnHoverBrushStyle" value="1" ver="2"/>
			<designed target="PenColor" value="0xff000000" ver="2"/>
			<designed target="PenStyle" value="1" ver="2"/>
			<designed target="PenWidth" value="1" ver="2"/>
			<designed target="OnClickPenColor" value="0xff000000" ver="2"/>
			<designed target="OnClickPenStyle" value="1" ver="2"/>
			<designed target="OnClickPenWidth" value="1" ver="2"/>
			<designed target="OnHoverPenColor" value="0xff000000" ver="2"/>
			<designed target="OnHoverPenStyle" value="1" ver="2"/>
			<designed target="OnHoverPenWidth" value="1" ver="2"/>
			<designed target="Checkable" value="false" ver="2"/>
			<designed target="DisabledFontColor" value="0xffa0a0a0" ver="3"/>
			<designed target="DisabledBrushColor" value="0xfff0f0f0" ver="3"/>
			<designed target="DisabledBrushStyle" value="1" ver="3"/>
			<designed target="DisabledPenColor" value="0xffa0a0a0" ver="3"/>
			<designed target="DisabledPenStyle" value="1" ver="3"/>
			<designed target="DisabledPenWidth" value="1" ver="3"/>
			<designed target="ZValue" value="0" ver="3"/>
			<designed target="Opacity" value="1" ver="3"/>
			<designed target="Checked" value="false" ver="4"/>
			<object access-modifier="private" name="Icon" display-name="Icon" uuid="ec63be2c-d586-4e5f-9f8b-0b5f10396bde" base-type="Image" base-type-id="5a6b2782-c728-4a42-8c02-1a83ef97e138" ver="4">
				<designed target="X" value="4" ver="4"/>
				<designed target="Y" value="4" ver="4"/>
				<designed target="ZValue" value="0" ver="4"/>
				<designed target="Rotation" value="0" ver="4"/>
				<designed target="Scale" value="1" ver="4"/>
				<designed target="Visible" value="true" ver="4"/>
				<designed target="Opacity" value="1" ver="4"/>
				<designed target="Enabled" value="true" ver="4"/>
				<designed target="Tooltip" value="" ver="4"/>
				<designed target="Width" value="32" ver="4"/>
				<designed target="Height" value="32" ver="4"/>
				<designed target="PenColor" value="4278190080" ver="4"/>
				<designed target="PenStyle" value="0" ver="4"/>
				<designed target="PenWidth" value="1" ver="4"/>
				<designed target="ImageFile" value="Alarms_Icons/ExportToFile.png" ver="4"/>
				<designed target="Active" value="true" ver="4"/>
				<designed target="CurrentFrameNumber" value="0" ver="4"/>
				<designed target="Speed" value="1" ver="4"/>
			</object>
			<object access-modifier="private" name="ExportToFile" display-name="ExportToFile" uuid="1c865239-1f57-465f-a346-2943a4f2dfba" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="4">
				<designed target="Enabled" value="true" ver="4"/>
				<designed target="InvokeTrigger" value="false" ver="4"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="javascript">
						<![CDATA[// определяем тип файла
var fileType;
if (FileDialogResult.FileType == 0) fileType = "csv";
else if (FileDialogResult.FileType == 1) fileType = "xlsx";
else	if (FileDialogResult.FileType == 2) fileType = "pdf";

var error = "";
try
{
	var header = "";
	if (UpperTextCheckbox.State)
		header += UpperTextEdit.Text;
	if (FilterCheckbox.State)
	{
		if (header != "") header += "\n";
		header += "Фильтр отображения: " + pViewFilter.GetDescription()
	}
	if (RFCheckbox.State && pAlarms.ActiveMode == 1)
	{
		if (header != "") header += "\n";
		header += "Фильтр запроса: " + (private.pAlarms.StatePanel.RequestFilterON.Value ? private.pAlarms.private.RequestFilter.GetDescription() : "")
	}
	Table.SetPageHeaderText(header);
	// сохраняем
	Table.Save(FileDialogResult.FilePath, fileType);
	
	// сообщаем, что сохранили
	ShowComplete.Invoke();
}
catch (err)
{
	// сообщаем об ошибке
	error = err.message;
	private.pAlarms.Dialogs.Message.Error(err.message, pTheme.GetViewSettings(), here.AlwaysOnTop);
}
OnExport.Args.Push(JSON.stringify({"Path":FileDialogResult.FilePath.Value, "Error":error}));
OnExport.Invoke();
]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="ShowSaveFileDialog" display-name="ShowSaveFileDialog" uuid="112601ce-7f85-4fd3-84d9-eb13364a646f" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="4">
				<designed target="Enabled" value="true" ver="4"/>
				<designed target="InvokeTrigger" value="false" ver="4"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
					<object access-modifier="private" uuid="e3e1119b-8ee4-4daa-9cf1-a0ea6467afb1" base-type="SaveFileDialog" base-type-id="d69a91c3-89e9-4e7b-994e-9242dbc5e095" ver="4">
						<init target="FileTypeFilter" ver="5" value="Текстовый файл (*.csv)|*.csv|Книга Excel (*.xlsx)|*.xlsx|Файл Adobe PDF (*.pdf)|*.pdf"/>
						<init target="Result" ver="5" ref="FileDialogResult"/>
						<init target="OnComplete" ver="5" ref="ExportToFile"/>
						<init target="DefaultPath" ver="5">
							<expr>
								<![CDATA[FileDialogResult.FilePath]]>
							</expr>
						</init>
						<init target="DefaultFileName" ver="5">
							<expr>
								<![CDATA[FileDialogResult.FileName]]>
							</expr>
						</init>
						<init target="AlwaysOnTop" ver="5">
							<expr>
								<![CDATA[here.AlwaysOnTop]]>
							</expr>
						</init>
						<init target="init_ScreenKeyboard" ver="5" ref="here.pScreenKeyboard"/>
						<init target="init_Theme" ver="5" ref="here.pTheme"/>
						<init target="RootPath" ver="5">
							<expr>
								<![CDATA[pPermissions.Permission.FileSystem ? "/"//корневой путь произвольного доступа
:pConfig.Export.ExportPath//иначе он ограничен этой папкой]]>
							</expr>
						</init>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="ShowComplete" display-name="ShowComplete" uuid="78749289-065a-4d35-a8c7-deb8746d0360" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="4">
				<designed target="Enabled" value="true" ver="4"/>
				<designed target="InvokeTrigger" value="false" ver="4"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
					<object access-modifier="private" uuid="487f9f9a-e6df-4593-8f50-f8a0bff9f9cf" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="4">
						<init target="Icon" ver="5" value="0"/>
						<init target="Buttons" ver="5" value="0"/>
						<designed target="WindowCaption" value="Экспорт в файл" ver="4"/>
						<init target="pTheme" ver="5" ref="here.pTheme"/>
						<init target="Message" ver="5">
							<expr>
								<![CDATA["Данные сохранены в файл:\n" + FileDialogResult.FilePath]]>
							</expr>
						</init>
						<init target="AlwaysOnTop" ver="5">
							<expr>
								<![CDATA[here.AlwaysOnTop]]>
							</expr>
						</init>
					</object>
				</do-on>
			</object>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="ButtonPressed">
				<body kind="om">
					<![CDATA[fileNameFormat: string = pConfig.ExportFileNameFormat;
if (fileNameFormat == "")
	fileNameFormat = "Alarms_%d-%m-%Y_%H-%M-%S";
fileName: string = DateTime.ToString(DateTime.Now(), fileNameFormat);

exportFolder: string = pConfig.Export.ExportPath;
Alarms_Tools.File.CreateRecursiveFolder(exportFolder);

if (Alarms_Tools.File.Exists(exportFolder))
{
	FileDialogResult.FilePath = Alarms_Tools.File.CombinePath(exportFolder, fileName);
	FileDialogResult.FileName = fileName;
	ShowSaveFileDialog.Invoke();
}
else
	private.pAlarms.Dialogs.Message.Error("Заданный путь '"+exportFolder+"' недоступен.", pTheme.GetViewSettings(), here.AlwaysOnTop);
]]>
				</body>
			</do-on>
			<object access-modifier="private" name="FileDialogResult" display-name="FileDialogResult" uuid="7be8ede8-e40a-4c51-8f0c-3f688ebb855c" base-type="FileDialogResult" base-type-id="602926f1-7d01-4d50-a5c0-d8fd35eadc74" ver="4"/>
			<designed target="Flip" value="0" ver="5"/>
		</object>
		<object access-modifier="private" name="OrientationComboBox" display-name="OrientationComboBox" uuid="78b60ad8-17fa-4070-b3c5-2579568f8a93" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="4">
			<designed target="X" value="60" ver="4"/>
			<designed target="Y" value="10" ver="4"/>
			<designed target="ZValue" value="0" ver="4"/>
			<designed target="Rotation" value="0" ver="4"/>
			<designed target="Scale" value="1" ver="4"/>
			<designed target="Visible" value="true" ver="4"/>
			<designed target="Opacity" value="1" ver="4"/>
			<designed target="Enabled" value="true" ver="4"/>
			<designed target="Tooltip" value="Ориентация страницы" ver="4"/>
			<designed target="Width" value="90" ver="4"/>
			<designed target="Height" value="25" ver="4"/>
			<designed target="Editable" value="false" ver="4"/>
			<designed target="Text" value="" ver="4"/>
			<designed target="SelectedIndex" value="-1" ver="4"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0" ver="4"/>
			<designed target="FontColor" value="4278190080" ver="4"/>
			<designed target="MaxVisibleItems" value="10" ver="4"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="SelectedChanged">
				<body kind="om">
					<![CDATA[if (selected > -1 && initialized)
{
	if (selected == 0)
		SetOrientation(0); // книжная
	else SetOrientation(1); // альбомная
}]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="FocusChanged">
				<body kind="om">
					<![CDATA[// После перевода фокуса на элемент будем считать окончанием инициализации.
// Этот флаг нужен для корректной обработки события SelectedChanged, который несколько раз срабатывает при открытии формы.
if (hasFocus)
	initialized = true;]]>
				</body>
			</do-on>
			<object access-modifier="private" name="initialized" display-name="initialized" uuid="42d68738-9608-4941-a0ac-bc986701d34f" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="4"/>
		</object>
		<object access-modifier="private" name="SelectColumnsButton" display-name="SelectColumnsButton" uuid="d18706f0-ff61-419c-b573-1c71e9e8097c" base-type="Button" base-type-id="61e46e4a-827f-4dd2-ac8a-b68bcaddf442" ver="2">
			<designed target="X" value="160" ver="2"/>
			<designed target="Y" value="10" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="110" ver="2"/>
			<designed target="Height" value="25" ver="2"/>
			<designed target="Text" value="Выбор столбцов" ver="2"/>
			<designed target="TextAlignment" value="132" ver="2"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<designed target="OnClickFontColor" value="4278190080" ver="2"/>
			<designed target="OnHoverFontColor" value="4278190080" ver="2"/>
			<designed target="BrushColor" value="4293980400" ver="2"/>
			<designed target="BrushStyle" value="1" ver="2"/>
			<designed target="OnClickBrushColor" value="4288716960" ver="2"/>
			<designed target="OnClickBrushStyle" value="1" ver="2"/>
			<designed target="OnHoverBrushColor" value="4294967295" ver="2"/>
			<designed target="OnHoverBrushStyle" value="1" ver="2"/>
			<designed target="PenColor" value="4278190080" ver="2"/>
			<designed target="PenStyle" value="1" ver="2"/>
			<designed target="PenWidth" value="1" ver="2"/>
			<designed target="OnClickPenColor" value="4278190080" ver="2"/>
			<designed target="OnClickPenStyle" value="1" ver="2"/>
			<designed target="OnClickPenWidth" value="1" ver="2"/>
			<designed target="OnHoverPenColor" value="4278190080" ver="2"/>
			<designed target="OnHoverPenStyle" value="1" ver="2"/>
			<designed target="OnHoverPenWidth" value="1" ver="2"/>
			<designed target="Checkable" value="false" ver="2"/>
			<designed target="ZValue" value="0" ver="3"/>
			<designed target="DisabledFontColor" value="4278190080" ver="3"/>
			<designed target="DisabledBrushColor" value="4288716960" ver="3"/>
			<designed target="DisabledBrushStyle" value="1" ver="3"/>
			<designed target="DisabledPenColor" value="4288716960" ver="3"/>
			<designed target="DisabledPenStyle" value="1" ver="3"/>
			<designed target="DisabledPenWidth" value="1" ver="3"/>
			<designed target="Opacity" value="1" ver="3"/>
			<designed target="Checked" value="false" ver="4"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ButtonPressed" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="4bc46744-a036-4030-a021-eaf0518a27ff" base-type="Alarms_SelectColumns" base-type-id="3b4031c4-d45e-4596-9232-5120026222ce" ver="4">
					<init target="OnComplete" ver="5" ref="SetVisibleColumns"/>
					<init target="CurrentState" ver="5">
						<expr>
							<![CDATA[Table.GetVisibleColumns()]]>
						</expr>
					</init>
					<init target="pTheme" ver="5" ref="here.pTheme"/>
				</object>
			</do-on>
			<object access-modifier="private" name="SetVisibleColumns" display-name="SetVisibleColumns" uuid="8196548a-7791-4a12-980e-059ce2883369" base-type="EventHandler" base-type-id="c01b71c2-42e8-4333-b70e-cc35fdf96f7e" ver="4">
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[Table.SetVisibleColumns(Args.Get());]]>
					</body>
				</do-on>
			</object>
			<do-trace access-modifier="private" target="Visible" ver="5">
				<body>
					<![CDATA[pConfig.Export.ViewColumnSettings]]>
				</body>
			</do-trace>
		</object>
		<object access-modifier="private" name="FilterCheckbox" display-name="FilterCheckbox" uuid="a502e525-f243-4022-aecc-46f2a9c77fc3" base-type="Checkbox" base-type-id="ba26cad1-a080-4c5d-8847-ce576488cf3f" ver="4">
			<designed target="X" value="280" ver="4"/>
			<designed target="Y" value="10" ver="4"/>
			<designed target="ZValue" value="0" ver="4"/>
			<designed target="Rotation" value="0" ver="4"/>
			<designed target="Scale" value="1" ver="4"/>
			<designed target="Visible" value="true" ver="4"/>
			<designed target="Opacity" value="1" ver="4"/>
			<designed target="Enabled" value="true" ver="4"/>
			<designed target="Tooltip" value="" ver="4"/>
			<designed target="Width" value="135" ver="4"/>
			<designed target="Height" value="25" ver="4"/>
			<designed target="Text" value="Фильтр отображения" ver="4"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0" ver="4"/>
			<designed target="FontColor" value="4278190080" ver="4"/>
			<designed target="State" value="false" ver="4"/>
			<do-trace access-modifier="private" target="FontColor" ver="5">
				<body>
					<![CDATA[pTheme.ForegroundColor]]>
				</body>
			</do-trace>
			<designed target="Flip" value="0" ver="5"/>
		</object>
		<object access-modifier="private" name="RFCheckbox" display-name="RFCheckbox" uuid="2cfeb819-deb4-46f9-b88a-c18675ae1a24" base-type="Checkbox" base-type-id="ba26cad1-a080-4c5d-8847-ce576488cf3f" ver="4">
			<designed target="X" value="415" ver="4"/>
			<designed target="Y" value="10" ver="4"/>
			<designed target="ZValue" value="0" ver="4"/>
			<designed target="Rotation" value="0" ver="4"/>
			<designed target="Scale" value="1" ver="4"/>
			<designed target="Visible" value="true" ver="4"/>
			<designed target="Opacity" value="1" ver="4"/>
			<designed target="Enabled" value="true" ver="4"/>
			<designed target="Tooltip" value="" ver="4"/>
			<designed target="Width" value="108" ver="4"/>
			<designed target="Height" value="25" ver="4"/>
			<designed target="Text" value="Фильтр запроса" ver="4"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0" ver="4"/>
			<designed target="FontColor" value="4278190080" ver="4"/>
			<designed target="State" value="false" ver="4"/>
			<do-trace access-modifier="private" target="FontColor" ver="5">
				<body>
					<![CDATA[pTheme.ForegroundColor]]>
				</body>
			</do-trace>
			<designed target="Flip" value="0" ver="5"/>
			<do-trace access-modifier="private" target="Visible" ver="5">
				<body>
					<![CDATA[private.pAlarms.ActiveMode == 1]]>
				</body>
			</do-trace>
		</object>
		<object access-modifier="private" name="UpperTextCheckbox" display-name="UpperTextCheckbox" uuid="8a7bbe57-5872-4597-9d37-e6752c841b0e" base-type="Checkbox" base-type-id="ba26cad1-a080-4c5d-8847-ce576488cf3f" ver="4">
			<designed target="X" value="530" ver="4"/>
			<designed target="Y" value="10" ver="4"/>
			<designed target="ZValue" value="0" ver="4"/>
			<designed target="Rotation" value="0" ver="4"/>
			<designed target="Scale" value="1" ver="4"/>
			<designed target="Visible" value="true" ver="4"/>
			<designed target="Opacity" value="1" ver="4"/>
			<designed target="Enabled" value="true" ver="4"/>
			<designed target="Tooltip" value="Печатать текст колонтитула" ver="4"/>
			<designed target="Width" value="60" ver="4"/>
			<designed target="Height" value="25" ver="4"/>
			<designed target="Text" value="Текст" ver="4"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0" ver="4"/>
			<designed target="FontColor" value="4278190080" ver="4"/>
			<designed target="State" value="false" ver="4"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="StateChanged">
				<body kind="om">
					<![CDATA[UpperTextEdit.Enabled = UpperTextCheckbox.State;]]>
				</body>
			</do-on>
			<do-trace access-modifier="private" target="FontColor" ver="5">
				<body>
					<![CDATA[pTheme.ForegroundColor]]>
				</body>
			</do-trace>
			<designed target="Flip" value="0" ver="5"/>
		</object>
		<object access-modifier="private" name="UpperTextEdit" display-name="UpperTextEdit" uuid="ca5efad9-6ae7-4cfe-abc3-fe164f1ff13c" base-type="LineEdit" base-type-id="53a97863-93f3-45a1-a2ea-9ff98d2dcdd9" ver="5" description="" cardinal="1">
			<designed target="X" value="600" ver="5"/>
			<designed target="Y" value="10" ver="5"/>
			<designed target="ZValue" value="0" ver="5"/>
			<designed target="Rotation" value="0" ver="5"/>
			<designed target="Scale" value="1" ver="5"/>
			<designed target="Flip" value="0" ver="5"/>
			<designed target="Visible" value="true" ver="5"/>
			<designed target="Opacity" value="1" ver="5"/>
			<designed target="Enabled" value="false" ver="5"/>
			<designed target="Tooltip" value="" ver="5"/>
			<designed target="Width" value="210" ver="5"/>
			<designed target="Height" value="25" ver="5"/>
			<designed target="Text" value="" ver="5"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0" ver="5"/>
			<designed target="FontColor" value="4278190080" ver="5"/>
			<designed target="TextAlignment" value="129" ver="5"/>
			<designed target="HideInput" value="false" ver="5"/>
			<designed target="PlaceholderText" value="" ver="5"/>
			<designed target="ReadOnly" value="false" ver="5"/>
		</object>
	</object>
	<do-on access-modifier="private" name="Handler_AboutToOpen" display-name="Handler_AboutToOpen" ver="5" event="AboutToOpen">
		<body kind="om">
			<![CDATA[Buttons.OrientationComboBox.AddItem("Книжная");
Buttons.OrientationComboBox.AddItem("Альбомная");
Buttons.OrientationComboBox.SelectedIndex = 1;

Buttons.UpperTextEdit.Text = pConfig.Export.HeaderText;
Buttons.UpperTextCheckbox.State = pConfig.Export.HeaderTextUse;

Table.Initialize();

if (LoadView() == false)
	SetOrientation(1);
]]>
		</body>
	</do-on>
	<do-on access-modifier="private" name="Handler_KeyPress" display-name="Handler_KeyPress" ver="5" event="KeyPress">
		<body kind="om">
			<![CDATA[if (event.KeyCode == 75)
	Close();]]>
		</body>
	</do-on>
	<designed target="ZValue" value="0" ver="3"/>
	<designed target="Opacity" value="1" ver="3"/>
	<do-on access-modifier="private" name="Handler_WindowSizeChanged" display-name="Handler_WindowSizeChanged" ver="5" event="WindowSizeChanged">
		<body kind="om">
			<![CDATA[Width = WindowWidth;
Height = WindowHeight;
UpdateLayout();]]>
		</body>
	</do-on>
	<do access-modifier="private" name="SetOrientation" display-name="SetOrientation" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[//Debug.Log("SetOrientation: " + String.ToString(orientation));
Table.SetPageOrientation(orientation);

// в зависимости от ориентации страницы задаем размер таблицы
// размер А4 при разрешении 96 dpi будет 794 x 1123, но нужно учесть ещё ширину полей 30/50
a4width: int4 = 794 - 30 - 45/*подгонка мимо теории*/;
a4height: int4 = 1123 - 50 - 25/*подгонка мимо теории*/;
Table.Width = (orientation == 0 ? a4width : a4height) -10;

// выбираем масштаб отображения, чтобы вместился в размер формы
fw: double = (Width - 10)/Table.Width;
Table.Scale = Math.Min(1, fw);
Table.Height = 440/Table.Scale;

// корректируем положение таблицы относительно верхнего левого угла
Table.X = 5 + (Width - 10 - Table.Width*Table.Scale)/2;
]]>
		</body>
		<param access-modifier="private" name="orientation" display-name="" uuid="be85646a-f516-4f97-add9-53a304c25d95" base-type="uint1" base-type-id="f73099bc-ee13-42cf-82bb-87368b826707" ver="4"/>
	</do>
	<do access-modifier="private" name="UpdateLayout" display-name="UpdateLayout" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[Buttons.Width = Width;
]]>
		</body>
	</do>
	<object access-modifier="private" name="Table" display-name="Table" uuid="64e5921e-082e-4fb2-b753-4ee60b8eecbb" base-type="Table" base-type-id="c65ff4dc-f22b-47d3-9333-72c4e4e5f662" ver="2">
		<designed target="X" value="5" ver="2"/>
		<designed target="Y" value="55" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Width" value="1038" ver="2"/>
		<designed target="Height" value="440" ver="2"/>
		<designed target="SelectionBehavior" value="1" ver="2"/>
		<designed target="SelectionMode" value="0" ver="2"/>
		<object access-modifier="private" name="Columns" display-name="Columns" uuid="c62c5784-c81b-49ea-acdd-020a87d4668b" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2" cardinal="26">
			<designed target="Title" value="" ver="2"/>
			<designed target="Description" value="" ver="2"/>
			<designed target="Id" value="" ver="2"/>
			<designed target="BackgroundColor" value="0xffffffff" ver="2"/>
			<designed target="ForegroundColor" value="0xff000000" ver="2"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
			<designed target="TitleBackgroundColor" value="0xffffffff" ver="2"/>
			<designed target="TitleForegroundColor" value="0xff000000" ver="2"/>
			<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
			<designed target="Width" value="60" ver="2"/>
			<designed target="WidthResizeMode" value="0" ver="2"/>
			<designed target="Hidden" value="false" ver="2"/>
			<designed target="NumberFormat" value="%d" ver="2"/>
			<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
			<designed target="Emptiable" value="true" ver="2"/>
			<designed target="TextAlignment" value="129" ver="2"/>
			<designed target="JsonFilter" value="" ver="2"/>
			<designed target="SortingEnabled" value="false" ver="3"/>
			<designed target="SortOrder" value="0" ver="3"/>
			<designed target="SortPriority" value="0" ver="3"/>
			<designed target="WordWrap" value="true" ver="3"/>
			<designed target="TitleTextAlignment" value="132" ver="3"/>
			<designed target="SortMode" value="0" ver="3"/>
			<designed target="ColumnOwnId" value="" ver="4"/>
			<do-trace access-modifier="private" target="TitleBackgroundColor" ver="5">
				<body>
					<![CDATA[pTheme.BackgroundColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="TitleForegroundColor" ver="5">
				<body>
					<![CDATA[pTheme.ForegroundColor]]>
				</body>
			</do-trace>
			<object access-modifier="private" name="CustomTimeFormat" display-name="CustomTimeFormat" uuid="4559da8c-7a71-4219-8a77-fbe26fd3e439" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="5" description="" cardinal="1"/>
			<do-trace access-modifier="private" target="TimeFormat" ver="5">
				<body>
					<![CDATA[CustomTimeFormat!="" ? CustomTimeFormat : (pConfig.ShowMilliseconds ? "dd.MM.yyyy hh:mm:ss.zzz" : "dd.MM.yyyy hh:mm:ss")]]>
				</body>
			</do-trace>
			<object access-modifier="private" name="guiFlag" display-name="guiFlag" uuid="10c6e8f1-e3f5-4176-82e5-293a3c7a084f" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
		</object>
		<designed target="LatestRowTracking" value="false" ver="2"/>
		<designed target="HeaderHeight" value="23" ver="3"/>
		<designed target="HeaderVisible" value="true" ver="3"/>
		<designed target="RowHeight" value="23" ver="3"/>
		<designed target="RowOrder" value="0" ver="3"/>
		<designed target="SelectionOverlayEnabled" value="false" ver="3"/>
		<object access-modifier="private" name="TableDecorator_1" display-name="TableDecorator_1" uuid="c7446abc-03bd-4762-9041-212d09fd5698" base-type="TableDecorator" base-type-id="2ff6a2d7-9573-4060-bfea-29c63d61b079" ver="3">
			<designed target="JsonDecorator" value="" ver="3"/>
		</object>
		<designed target="HorizontalScrollMode" value="1" ver="4"/>
		<designed target="VerticalScrollMode" value="0" ver="4"/>
		<designed target="HorizontalScrollBarPolicy" value="0" ver="4"/>
		<designed target="VerticalScrollBarPolicy" value="0" ver="4"/>
		<designed target="DelayedSortingEnabled" value="false" ver="4"/>
		<designed target="BackgroundColor" value="0xffffffff" ver="4"/>
		<designed target="FrameColor" value="0xff5f5f5f" ver="4"/>
		<designed target="GridColor" value="0xffd8d8d8" ver="4"/>
		<do access-modifier="private" name="Initialize" display-name="Initialize" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[for (let i = 0; i < Columns.Length; i++)
	// неиспользуемую колонку скрываем и помечаем пустым заголовком
	{
		Columns[i].Hidden = true;
		Columns[i].Title = "";
		Columns[i].Description = "";
	}
// Импорт параметров таблицы
Table.RowOrder = 1;//#24120 настройка порядка важна (значение должно соответствовать исходной таблицы)
var filters = pViewFilter.JsonFilters.Value == "" ? [] : JSON.parse(pViewFilter.JsonFilters.Value);
var n = -1;
var indexesArray = [];
for (let i = 0; i < pConfig.TableView.Columns.Length; i++)
if (pConfig.TableView.Columns[i].guiFlag || i==pConfig.TableView.Static.Subcondition.pos)
{
	n++;
	var column = pConfig.TableView.Columns[i];
	{
		Columns[n].Title = column.Title;
		Columns[n].Description = column.Title;
		Columns[n].Id = column.Id;
		Columns[n].guiFlag = column.guiFlag;
		Columns[n].Hidden = column.Hidden;
		Columns[n].Width = column.Width;
		Columns[n].WidthResizeMode = column.WidthResizeMode;
		Columns[n].Font = column.Font;
		Columns[n].TitleFont = column.TitleFont;
		Columns[n].CustomTimeFormat = column.CustomTimeFormat;
		indexesArray[column.GetIndex()] = n;
		
		// сортировка
		Columns[n].SortPriority = column.SortPriority;
		Columns[n].SortOrder = column.SortOrder;
		Columns[n].SortingEnabled = column.SortingEnabled;
		
		// фильтрация
		var jf = filters[pConfig.TableView.Columns[i].Id];
		if (jf == undefined) jf = "";
		if (Columns[n].JsonFilter != jf)
			Columns[n].JsonFilter = jf;
	}

}
//#25486 расстановка столбцов должна выполняться в порядке их расположения
for (let i = 0; i < indexesArray.length; i++)
	if (indexesArray[i] != null)
		MoveColumn(Columns[indexesArray[i]].GetIndex(), i);
ApplySort();

RowHeight = pConfig.TableView.RowHeight.Value;
HeaderHeight = pConfig.TableView.HeaderHeight.Value;
TableDecorator_1.JsonDecorator = pConfig.EventSettings.BuildDecorator(pAlarmsTable.ActiveMode == 1, true, pConfig.NotAckOtherEvents.Value, true, pConfig.MergeEvents.Value, pAlarmsTable.SnapshotON.Value);]]>
			</body>
		</do>
		<do access-modifier="private" name="GetVisibleColumns" display-name="GetVisibleColumns" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="javascript">
				<![CDATA[var columns = [];
for(let i = 0; i < Columns.Length; i++)
{
	if (Columns[i].guiFlag)
	{
		var column = {};
		column.Index = Columns[i].GetIndex();
		column.Title = Columns[i].Title;
		column.State = !Columns[i].Hidden;
		columns.push(column);
	}
}

columns.sort(function (a, b)
{
  if (a.Index > b.Index)
    return 1;
  else if (a.Index < b.Index)
    return -1;
  else return 0;
});

return JSON.stringify(columns);]]>
			</body>
		</do>
		<do access-modifier="private" name="SetVisibleColumns" display-name="SetVisibleColumns" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var columns = JSON.parse(value);
for(let j = 0; j < Columns.Length; j++)
if (Columns[j].guiFlag)
{
	var column = Columns[j];
	var hidden = true;
	for(let i = 0; i < columns.length; i++)
	{
		// в диалог выбора столбцы поступают отсортированные, поэтому идентифицируем их по заголовку
		if (columns[i].Title == column.Title)
		{
			hidden = !columns[i].State;
			break;
		}
	}
	
	if (column.Hidden != hidden)
		column.Hidden = hidden;
}]]>
			</body>
			<param access-modifier="private" name="value" display-name="" uuid="3548ffbb-04ab-4314-a2d5-363082cdfc08" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
		</do>
		<do-trace access-modifier="private" target="BackgroundColor" ver="5">
			<body>
				<![CDATA[pTheme.EditorBrushColor]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="FrameColor" ver="5">
			<body>
				<![CDATA[pTheme.BorderColor]]>
			</body>
		</do-trace>
		<designed target="RowHeightResizeMode" value="3" ver="5"/>
		<init target="TableModel" ver="5" ref="iAlarmsTable.TableOne.TableModel_1"/>
		<object access-modifier="private" name="pAlarmsTable" display-name="pAlarmsTable" uuid="b5be3571-de66-4a9e-b369-263ceaaae557" base-type="Alarms_Table" base-type-id="521d4d69-1b32-4210-ae17-099df1125e3c" base-const="true" base-ref="true" ver="5" description=""/>
		<init target="pAlarmsTable" ver="5" ref="iAlarmsTable"/>
	</object>
	<object access-modifier="private" name="pTheme" display-name="Тема оформления" uuid="c4e70474-72e9-4a36-ac42-3f04a1df84a4" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" base-const="true" base-ref="true" ver="4"/>
	<do-trace access-modifier="private" target="BrushColor" ver="5">
		<body>
			<![CDATA[pTheme.BackgroundColor]]>
		</body>
	</do-trace>
	<designed target="WindowIconPath" value="Alarms_Icons/ExportToFile16.png" ver="5"/>
	<do access-modifier="private" name="SaveView" display-name="SaveView" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="javascript">
			<![CDATA[var filePath = Alarms_Tools.File.CombinePath(pConfig.ConfigurationFolder.Path, "exportview.json");
try
{
	var View = { Orientation:Buttons.OrientationComboBox.SelectedIndex, Columns:{} };
	for(let i = 0; i < Table.Columns.Length; i++)
	{
		if (Table.Columns[i].guiFlag)
		{
			var column = {};
			column.Title = Table.Columns[i].Title;//для справки
			column.Hidden = Table.Columns[i].Hidden;
			Table.Columns[i].Hidden = false;//#37659 чит для сохранения пользовательской ширины вместо костыля columnWidths
			column.Width = Table.Columns[i].Width;
			column.Index = Table.Columns[i].GetIndex();//пока не используется
			View.Columns[Table.Columns[i].Id] = column;
		}
	}
	Alarms_Tools.File.WriteTextFile(filePath, JSON.stringify(View, null, 2));
}
catch(error)
{
	log("Не удалось сохранить в "  + filePath + ": " + error);
}]]>
		</body>
	</do>
	<do-on access-modifier="private" name="Handler_Closed" display-name="Handler_Closed" ver="5" event="Closed">
		<body kind="om">
			<![CDATA[SaveView();
//#32126 связываем текст с печатным аналогом в виду предстоящего общего решения
pConfig.Export.HeaderText = Buttons.UpperTextEdit.Text;
pConfig.Export.HeaderTextUse = Buttons.UpperTextCheckbox.State;
pConfig.Export.SaveSettings();
]]>
		</body>
	</do-on>
	<do access-modifier="private" name="LoadView" display-name="LoadView" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="javascript">
			<![CDATA[var success = false;
var filePath = Alarms_Tools.File.CombinePath(pConfig.ConfigurationFolder.Path, "exportview.json");
if (Alarms_Tools.File.Exists(filePath))
try
{
	var json = Alarms_Tools.File.ReadTextFile(filePath);
	var View = JSON.parse(json);
	
	SetOrientation(View.Orientation);
	Orientation:Buttons.OrientationComboBox.SelectedIndex = View.Orientation;
	
	for(let i = 0; i < Table.Columns.Length; i++)
	if (Table.Columns[i].guiFlag)
	{
		var id = Table.Columns[i].Id;
		var column = View.Columns[id];
		if (column != undefined)
		{
			Table.Columns[i].Hidden = column.Hidden;
			Table.Columns[i].Width = column.Width;
		}
		else
			Table.Columns[i].Hidden = true;//#32689 новые столбцы должны быть скрытыми, и не портить сохранённый дизайн
	}
	success = true;
}
catch(error)
{
	log("Не удалось загрузить "  + filePath + ": " + error);
}
return success;]]>
		</body>
	</do>
	<designed target="Flip" value="0" ver="5"/>
	<do-on access-modifier="private" name="Handler_WindowActivationChanged" display-name="Handler_WindowActivationChanged" ver="5" event="WindowActivationChanged">
		<body kind="om">
			<![CDATA[if (!active) return;
Buttons.ExportButton.Focus = true;
]]>
		</body>
	</do-on>
	<object access-modifier="private" name="pConfig" display-name="pConfig" uuid="fabec22e-ae65-4319-bb0a-11165f799feb" base-type="Alarms_Config" base-type-id="cac958c3-d08c-4b7b-8345-d70ccc130514" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="pScreenKeyboard" display-name="pScreenKeyboard" uuid="d807442a-e385-4ed8-a7e5-52556f01c8af" base-type="ScreenKeyboardOptions" base-type-id="0589bc8e-fbb2-4f0e-b5d2-f0d825538ef1" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="pViewFilter" display-name="pViewFilter" uuid="02e7a445-2a8a-4bfe-b8df-348510a06978" base-type="Alarms_ViewFilter" base-type-id="ab719db0-02af-4b41-b039-70a478bd4e78" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="pPermissions" display-name="pPermissions" uuid="f8fa6f0f-8b31-49b9-9355-6880a4f44be6" base-type="Alarms_Permissions" base-type-id="eaa1f2f7-6334-4d05-a44d-ca72425d2f9f" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="OnExport" display-name="OnExport" uuid="fc0d063b-dda9-4866-b3ad-e90b88779139" base-type="EventHandler" base-type-id="c01b71c2-42e8-4333-b70e-cc35fdf96f7e" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="private" display-name="private" uuid="302bd122-f2ec-4327-9410-d9ccd205bc67" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="3">
		<object access-modifier="private" name="Message" display-name="Message" uuid="a17c3bd0-b125-4b11-a147-6d55f2d5da26" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="4">
			<designed target="Enabled" value="true" ver="4"/>
			<designed target="InvokeTrigger" value="false" ver="4"/>
			<object access-modifier="private" name="message" display-name="message" uuid="087cb08c-9c22-47b4-98d6-9c3438922c42" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="e159852f-b45f-4c92-97df-004569e1cce6" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="4">
					<init target="Message" ver="5">
						<expr>
							<![CDATA[message]]>
						</expr>
					</init>
					<init target="Buttons" ver="5" value="0"/>
					<designed target="WindowCaption" value="Ошибка" ver="4"/>
					<init target="Icon" ver="5">
						<expr>
							<![CDATA[icon]]>
						</expr>
					</init>
					<init target="pTheme" ver="5" ref="colortheme"/>
					<init target="AlwaysOnTop" ver="5">
						<expr>
							<![CDATA[topmost]]>
						</expr>
					</init>
				</object>
			</do-on>
			<do access-modifier="private" name="Error" display-name="Error" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="om">
					<![CDATA[Message.icon = 3;
Message.message = text;
Message.colortheme.UpdateView(theme);
Message.topmost = alwaysOnTop;
Message.Invoke();]]>
				</body>
				<param access-modifier="private" name="text" display-name="" uuid="f5e81ec1-17da-4da6-900f-1c331a9f30e3" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				<param access-modifier="private" name="theme" display-name="" uuid="8a9200ac-8364-4657-9cc7-617c953d5ef8" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				<param access-modifier="private" name="alwaysOnTop" display-name="" uuid="61d17751-22f1-4883-bbda-362806976348" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
			</do>
			<do access-modifier="private" name="Info" display-name="Info" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
				<body kind="om">
					<![CDATA[Message.icon = 0;
Message.message = text;
Message.colortheme.UpdateView(theme);
Message.topmost = alwaysOnTop;
Message.Invoke();]]>
				</body>
				<param access-modifier="private" name="text" display-name="" uuid="19c3def7-e6ce-471b-8979-27d7e3782354" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				<param access-modifier="private" name="theme" display-name="" uuid="50d3ae4a-d65e-4a95-ab12-c7ea2cf862b8" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				<param access-modifier="private" name="alwaysOnTop" display-name="" uuid="b7f77d1d-654b-46f0-be07-23d0a26b62a7" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
			</do>
			<object access-modifier="private" name="colortheme" display-name="colortheme" uuid="fb9db5a3-fcc4-4d95-acb8-6b021ddabc80" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="topmost" display-name="topmost" uuid="d9420d3c-6b5a-40db-bc7e-6d8b24151ee1" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="icon" display-name="icon" uuid="b07ed127-3d8b-4d94-a466-1ddfeb9a508a" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		</object>
		<object access-modifier="private" name="pAlarms" display-name="pAlarms" uuid="992dba5b-d2ad-4b74-b6b2-c3cebfcecf1b" base-type="Alarms_Table" base-type-id="521d4d69-1b32-4210-ae17-099df1125e3c" base-const="true" base-ref="true" ver="5" description=""/>
		<init target="pAlarms" ver="5" ref="iAlarmsTable"/>
	</object>
	<param access-modifier="private" name="iAlarmsTable" display-name="iAlarmsTable" uuid="ef07b99f-4007-4bf9-94a1-83b9a2e0602b" base-type="Alarms_Table" base-type-id="521d4d69-1b32-4210-ae17-099df1125e3c" base-const="true" base-ref="true" ver="5" description=""/>
</type>

