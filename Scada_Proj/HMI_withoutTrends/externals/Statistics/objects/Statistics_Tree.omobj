<type access-modifier="private" name="Statistics_Tree" display-name="Statistics_Tree" uuid="5747a4ab-c283-43d3-a75b-7c699c0b8969" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="5" description="">
	<designed target="X" value="0" ver="5"/>
	<designed target="Y" value="0" ver="5"/>
	<designed target="ZValue" value="0" ver="5"/>
	<designed target="Rotation" value="0" ver="5"/>
	<designed target="Scale" value="1" ver="5"/>
	<designed target="Visible" value="true" ver="5"/>
	<designed target="Opacity" value="1" ver="5"/>
	<designed target="Enabled" value="true" ver="5"/>
	<designed target="Tooltip" value="" ver="5"/>
	<designed target="Width" value="250" ver="5"/>
	<designed target="Height" value="400" ver="5"/>
	<designed target="RoundingRadius" value="0" ver="5"/>
	<designed target="PenColor" value="0xff808080" ver="5"/>
	<designed target="PenStyle" value="1" ver="5"/>
	<designed target="PenWidth" value="1" ver="5"/>
	<designed target="BrushColor" value="4278190080" ver="5"/>
	<designed target="BrushStyle" value="0" ver="5"/>
	<object access-modifier="private" name="private" display-name="private" uuid="b82b6d6e-ae9f-4a09-b4b6-173c2f2828b1" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5">
		<object access-modifier="private" name="pTheme" display-name="pTheme" uuid="f87379b0-6bd3-406b-99a4-43cd93570815" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" ver="5" base-ref="true"/>
		<object access-modifier="private" name="SingleConnection" display-name="SingleConnection" uuid="5643b579-bf98-4c6f-8c24-1561490996ef" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
		<init target="SingleConnection" ver="5" ref="init_SingleConnection"/>
		<init target="pTheme" ver="5" ref="init_Theme"/>
	</object>
	<object access-modifier="private" name="Debug" display-name="Debug" uuid="6be8725b-1c76-4095-8e99-0e58ed1cbdd4" base-type="DebugTool" base-type-id="43946044-139a-43f4-a7b8-19a6074ffc56" ver="5"/>
	<object access-modifier="private" name="Files" display-name="Files" uuid="8aea3788-9e08-48b7-8bca-34ca24fcd0e6" base-type="FileSystem" base-type-id="34d744f9-7303-4077-a3f7-9c06c0945512" ver="5" description="" cardinal="1">
		<designed target="RootPath" value="/" ver="5"/>
	</object>
	<object access-modifier="private" name="SearchBar" display-name="SearchBar" uuid="d3bfdb32-e1cb-4aa4-9f07-7f5d1944a563" base-type="SearchBar" base-type-id="eed9303b-0032-4f78-8bfe-aff18c14190a" ver="5" description="" cardinal="1">
		<designed target="X" value="0" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Width" value="250" ver="5"/>
		<designed target="Height" value="22" ver="5"/>
		<object access-modifier="private" name="PatternChanged" display-name="PatternChanged" uuid="96d43eaf-c05d-4594-97e5-8d8ddf69b0a3" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
				<body kind="om">
					<![CDATA[//Debug.Log("Filter items tree: " + SearchBar.Pattern);
View.SetColumnFilter(0, SearchBar.Pattern);]]>
				</body>
			</do-on>
		</object>
		<init target="pPatternChanged" ver="5" ref="PatternChanged"/>
		<do-trace access-modifier="private" target="PenColor" ver="5">
			<body>
				<![CDATA[private.pTheme.BorderColor]]>
			</body>
		</do-trace>
	</object>
	<object access-modifier="private" name="View" display-name="View" uuid="d8fb5a18-9fca-4233-a8f3-ef0dc018f4de" base-type="Tree" base-type-id="bebad81f-83c4-4dc1-8ac4-e7fe7b6ee966" ver="5" description="" cardinal="1">
		<designed target="X" value="1" ver="5"/>
		<designed target="Y" value="23" ver="5"/>
		<designed target="ZValue" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Scale" value="1" ver="5"/>
		<designed target="Visible" value="true" ver="5"/>
		<designed target="Opacity" value="1" ver="5"/>
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="Tooltip" value="" ver="5"/>
		<designed target="Width" value="249" ver="5"/>
		<designed target="Height" value="377" ver="5"/>
		<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0" ver="5"/>
		<designed target="FontColor" value="0xff000000" ver="5"/>
		<designed target="BackgroundColor" value="0xffffffff" ver="5"/>
		<designed target="FrameVisible" value="false" ver="5"/>
		<designed target="ColumnCount" value="0" ver="5"/>
		<designed target="HeaderVisible" value="false" ver="5"/>
		<designed target="CurrentItem" value="" ver="5"/>
		<object access-modifier="private" name="Margins" display-name="Margins" uuid="36972e51-6d05-4170-bc8e-3629f68b124e" base-type="LayoutMargins" base-type-id="d86ce751-1ea7-42c6-8d4b-10c651a2727d" ver="5" description="" cardinal="1">
			<designed target="Top" value="1" ver="5"/>
			<designed target="Bottom" value="0" ver="5"/>
			<designed target="Left" value="1" ver="5"/>
			<designed target="Right" value="0" ver="5"/>
		</object>
		<do-trace access-modifier="private" target="FontColor" ver="5">
			<body>
				<![CDATA[private.pTheme.ForegroundColor]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="BackgroundColor" ver="5">
			<body>
				<![CDATA[private.pTheme.EditorBrushColor]]>
			</body>
		</do-trace>
		<object access-modifier="private" name="DataSource" display-name="DataSource" uuid="5a8662d4-1132-4dab-b22f-da822be8593b" base-type="TreeDataSource" base-type-id="be3b13bc-c755-41ae-bc8c-867e6c690575" ver="5" description="" cardinal="1">
			<object access-modifier="private" name="NodeName" display-name="NodeName" uuid="66649b0f-f71e-4650-9afa-410bffda6338" base-type="TreeColumn" base-type-id="b2427bd0-4897-43ca-b426-97290870cf62" ver="5" description="" cardinal="1">
				<designed target="Name" value="Name" ver="5"/>
				<designed target="Id" value="name" ver="5"/>
				<designed target="Type" value="1" ver="5"/>
			</object>
			<object access-modifier="private" name="NodeId" display-name="NodeId" uuid="17317bc7-2ecc-4523-9c4b-19ed94dc92e9" base-type="TreeColumn" base-type-id="b2427bd0-4897-43ca-b426-97290870cf62" ver="5" description="" cardinal="1">
				<designed target="Name" value="Id" ver="5"/>
				<designed target="Id" value="id" ver="5"/>
				<designed target="Type" value="2" ver="5"/>
			</object>
			<object access-modifier="private" name="ParentNodeId" display-name="ParentNodeId" uuid="37536490-1ce3-4531-8621-ca98ffcca0f1" base-type="TreeColumn" base-type-id="b2427bd0-4897-43ca-b426-97290870cf62" ver="5" description="" cardinal="1">
				<designed target="Name" value="Parent" ver="5"/>
				<designed target="Id" value="parent_id" ver="5"/>
				<designed target="Type" value="3" ver="5"/>
			</object>
			<object access-modifier="private" name="NodeType" display-name="NodeType" uuid="4593f4ca-f03e-49d2-b118-3a49eed11935" base-type="TreeColumn" base-type-id="b2427bd0-4897-43ca-b426-97290870cf62" ver="5" description="" cardinal="1">
				<designed target="Name" value="NodeType" ver="5"/>
				<designed target="Id" value="node_type" ver="5"/>
				<designed target="Type" value="5" ver="5"/>
			</object>
			<object access-modifier="private" name="HasChildren" display-name="HasChildren" uuid="a6c16413-5b20-42ac-a1a4-5b3b2fbf1c56" base-type="TreeColumn" base-type-id="b2427bd0-4897-43ca-b426-97290870cf62" ver="5" description="" cardinal="1">
				<designed target="Name" value="HasChildren" ver="5"/>
				<designed target="Id" value="has_children" ver="5"/>
				<designed target="Type" value="6" ver="5"/>
			</object>
			<object access-modifier="private" name="NodeDatatype" display-name="NodeDatatype" uuid="b80cdcab-da90-410c-9944-9ebaaf473aa1" base-type="TreeColumn" base-type-id="b2427bd0-4897-43ca-b426-97290870cf62" ver="5" description="" cardinal="1">
				<designed target="Name" value="value_type" ver="5"/>
				<designed target="Id" value="value_type" ver="5"/>
				<designed target="Type" value="4" ver="5"/>
			</object>
			<object access-modifier="private" name="Browser" display-name="Browser" uuid="c518cac5-905c-4676-bd44-aec0a5d417ca" base-type="ApStatRmapBrowser" base-type-id="8755b42b-4022-4d47-913e-4095decba71b" ver="5" description="" cardinal="10">
				<designed target="IncludeFolders" value="true" ver="5"/>
				<designed target="IncludeSections" value="true" ver="5"/>
				<designed target="IncludeItems" value="true" ver="5"/>
				<designed target="Recursive" value="true" ver="5"/>
				<object access-modifier="private" name="StatSource" display-name="StatSource" uuid="ac7c62fb-b3cb-40c2-a55d-9c5132cd7f61" base-type="Statistics_Source" base-type-id="159f04e7-927b-436a-833f-953d0fcd7f97" base-const="true" base-ref="true" ver="5" description=""/>
				<object access-modifier="private" name="TreeNodeId" display-name="TreeNodeId" uuid="cde1dec7-9385-464e-b39a-70349f5c642a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
				<object access-modifier="private" name="IsActive" display-name="IsActive" uuid="b6b19f8d-0b37-4bee-b2ac-c31a541c7abb" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
						<body kind="om">
							<![CDATA[if (value)
{
	// добавляем в дерево узел, соответствующий этому источнику данных
	if (!private.SingleConnection)
		TreeNodeId = AddItem("", StatSource.GetSourceTitle());
}
else
{
	// удаляем узел источника данных
	if (TreeNodeId != "")
	{
		RemoveItem(TreeNodeId);
		TreeNodeId = "";
	}
}]]>
						</body>
					</do-on>
				</object>
				<object access-modifier="private" name="ConnectionState" display-name="ConnectionState" uuid="c8ad7915-f3e2-468f-82ec-a6eb41e210ee" base-type="notifying_uint1" base-type-id="fed14c54-414c-56bd-549a-8d761c4d6200" ver="5" description="" cardinal="1">
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
						<body kind="om">
							<![CDATA[if (StatSource.IsActive)
{
	RefreshCurrentNode.UpdateEnabled();
	ConnectionStateChanged(value, ErrorState);
}]]>
						</body>
					</do-on>
				</object>
				<init target="Source" ver="5" ref="init_Sources.Source[Index]"/>
				<do access-modifier="private" name="ConnectionStateChanged" display-name="ConnectionStateChanged" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
					<body kind="om">
						<![CDATA[//Debug.Log(StatSource.GetSourceTitle() + " isConnected = " + String.ToString(isConnected) + ", errorState = " + String.ToString(errorState));

// обновляем иконку узла, соответствующую источнику данных
if (!private.SingleConnection)
{
	if (errorState == 0 && connectionState == 2)
		SetItemIconPath(TreeNodeId, "Statistics_Icons/NetDevice16.png" , NodeNameColumn);
	else SetItemIconPath(TreeNodeId, "Statistics_Icons/NetDeviceDisconnected16.png" , NodeNameColumn);
}

if (errorState == 0)
{
	// закрываем узел, чтобы при его раскрытии обновить иконки
	//todo можно будет добавить просмотр после подключения, когда появится возможность обновлять иконки полученных узлов
	//CollapseItem(TreeNodeId);

	if (connectionState == 2)
	{
		if (private.SingleConnection)
		{
			// при одиночном подключении сразу запускаем просмотр
			BrowseNode("");
		}
		else
		{
			if (IsItemExpanded(TreeNodeId))
				RefreshNode(TreeNodeId);
			else
				SetItemExpandPolicy(TreeNodeId, 0);// добавляем возможность раскрыть узел
		}
	}
}
else if (ChildCount(TreeNodeId) == 0)
	SetItemExpandPolicy(TreeNodeId, 1); // убираем возможность раскрыть узел, если ранее узел не браузился]]>
					</body>
					<param access-modifier="private" name="connectionState" display-name="" uuid="edc10553-33cf-4ddd-bae4-93c535cef26f" base-type="uint1" base-type-id="f73099bc-ee13-42cf-82bb-87368b826707" ver="5"/>
					<param access-modifier="private" name="errorState" display-name="" uuid="fcf2afd7-564a-41d7-9da0-e7ae51412ba3" base-type="uint1" base-type-id="f73099bc-ee13-42cf-82bb-87368b826707" ver="5"/>
				</do>
				<object access-modifier="private" name="ErrorState" display-name="ErrorState" uuid="4a19cd65-770c-48d5-96de-942009fd60b9" base-type="notifying_uint1" base-type-id="fed14c54-414c-56bd-549a-8d761c4d6200" ver="5" description="" cardinal="1">
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
						<body kind="om">
							<![CDATA[if (StatSource.Active)
	ConnectionStateChanged(ConnectionState, value);]]>
						</body>
					</do-on>
				</object>
				<init target="StatSource" ver="5" ref="init_Sources.Source[Index]"/>
				<do-trace access-modifier="private" target="ConnectionState" ver="5">
					<body>
						<![CDATA[StatSource.ConnectionState]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="ErrorState" ver="5">
					<body>
						<![CDATA[StatSource.ErrorState]]>
					</body>
				</do-trace>
				<do-trace access-modifier="private" target="IsActive" ver="5">
					<body>
						<![CDATA[StatSource.IsActive]]>
					</body>
				</do-trace>
			</object>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="OnNodeReceived">
				<body kind="om">
					<![CDATA[//Debug.Log("При просмотре получено узлов: "+ String.ToString(nodeCount));

if (private.SingleConnection)
{
	SetChildrenIcons("");
}
else
{
	// обновим иконки полученных элементов
	for (i: int4 = 0; i < DataSource.Browser.Length; i += 1)
	{
		if (DataSource.Browser[i].StatSource.ConnectionState == 2)
			SetChildrenIcons(DataSource.Browser[i].TreeNodeId);
	}
}]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="NodeNameColumn" display-name="NodeNameColumn" uuid="a8efd745-df1d-4051-93c2-2030ffba5638" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="ItemIdColumn" display-name="ItemIdColumn" uuid="65818825-0fb1-4282-b6e4-3d97a3759c5d" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="ParentIdColumn" display-name="ParentIdColumn" uuid="38e83c4f-66f9-4399-8a5c-9ab67b6444bb" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="NodeTypeColumn" display-name="NodeTypeColumn" uuid="987a1bfc-00df-41db-bca6-73549173d6a9" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="IsHasChildrenColumn" display-name="IsHasChildrenColumn" uuid="a8a3817c-fdce-4bf0-8939-be990988f325" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="ItemCDTColumn" display-name="ItemCDTColumn" uuid="4e717268-bd4d-46eb-b5ce-fe9dcb9f8101" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ItemExpanded">
			<body kind="javascript">
				<![CDATA[SetItemIcon(itemId, true);

if (ChildCount(itemId) != 0)
{
	var children = JSON.parse(EnumChildrenJSON(itemId));
	for (let i = 0; i < children.length; i++)
		SetItemIcon(children[i], false);
}
else
{
	// если родительский узел пустой, значит это корневой узел источника данных
	if (GetParentId(itemId) == "")
	{
		// запускаем просмотр узлов, который будет выполняться рекусривно
		BrowseNode(itemId);
	}
}]]>
			</body>
		</do-on>
		<do access-modifier="private" name="Initialize" display-name="Initialize" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[SetColumnHidden(ItemIdColumn, true);
SetColumnHidden(ParentIdColumn, true);
SetColumnHidden(NodeTypeColumn, true);
SetColumnHidden(IsHasChildrenColumn, true);
SetColumnHidden(ItemCDTColumn, true);]]>
			</body>
		</do>
		<object access-modifier="private" name="itemIsPressed" display-name="itemIsPressed" uuid="2a5b42da-1dc6-4dda-b715-eead54700cad" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description="" cardinal="1"/>
		<do-on access-modifier="private" name="Handler_7" display-name="Handler_7" ver="5" event="MouseMove">
			<body kind="javascript">
				<![CDATA[if (itemIsPressed)
{
	itemIsPressed = false;
	
	var itemInfo = GetCurrentItemInfo();
	if (itemInfo != "")
	{
		Drag.Image = GetItemIconPath(CurrentItem, false);
		Drag.SetData("statistics-node", itemInfo);
		Drag.DoDragDrop();
	}
}]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_8" display-name="Handler_8" ver="5" event="MouseRelease">
			<body kind="om">
				<![CDATA[itemIsPressed = false;]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_9" display-name="Handler_9" ver="5" event="MouseLeave">
			<body kind="om">
				<![CDATA[itemIsPressed = false;]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_10" display-name="Handler_10" ver="5" event="ItemPressed">
			<body kind="om">
				<![CDATA[if (event.Button == 1)
	itemIsPressed = true;]]>
			</body>
		</do-on>
		<do access-modifier="private" name="SetItemIcon" display-name="SetItemIcon" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[icon: string = GetItemIconPath(itemId, isExpanded);
SetItemIconPath(itemId, icon, NodeNameColumn);]]>
			</body>
			<param access-modifier="private" name="itemId" display-name="" uuid="84851ccf-3601-419c-afdb-4f379950005f" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<param access-modifier="private" name="isExpanded" display-name="" uuid="0cc7d8dc-4c10-412b-85e9-e9b4ac4668ec" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
		</do>
		<do access-modifier="private" name="GetItemIconPath" display-name="GetItemIconPath" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="om">
				<![CDATA[nodeType: int4 = Variant.ToInt4(GetItemData(itemId, NodeTypeColumn), 0);
if (nodeType == 0)
{
	sourceIndex: int4 = GetSourceIndex(itemId);
	if (sourceIndex > -1)
	{
		if (DataSource.Browser[sourceIndex].StatSource.ConnectionState == 2)
			return "Statistics_Icons/NetDevice16.png";
		else return "Statistics_Icons/NetDeviceDisconnected16.png";
	}
} 
else if (nodeType == 1)
{
	if (isExpanded)
		return "CommonLib_Icons/FolderOpened.png";
	else return "CommonLib_Icons/FolderClosed.png";
}
else if (nodeType == 2)
{
	return "Statistics_Icons/ItemGroup.png";
}
else if (nodeType == 3)
{
	cdt: uint1 = String.ToUint1(GetItemText(itemId, ItemCDTColumn), 0);
	fileName: string;
	if (cdt == 1) fileName = "Boolean.png";
	else if (cdt == 2) fileName = "Byte.png";
	else if (cdt == 3) fileName = "SByte.png";
	else if (cdt == 4) fileName = "Int16.png";
	else if (cdt == 5) fileName = "UInt16.png";
	else if (cdt == 6) fileName = "Int32.png";
	else if (cdt == 7) fileName = "UInt32.png";
	else if (cdt == 8) fileName = "Int64.png";
	else if (cdt == 9) fileName = "UInt64.png";
	else if (cdt == 10) fileName = "Single.png";
	else if (cdt == 11) fileName = "Double.png";
	else if (cdt == 12) fileName = "DateTime.png";
	else if (cdt == 14) fileName = "String.png";
	else fileName = "Object.png";
	return "CommonLib_Icons/Items/" + fileName;
}
return "";]]>
			</body>
			<param access-modifier="private" name="itemId" display-name="" uuid="7e1fbe89-3fec-4835-83fa-7429d61c7ac6" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<param access-modifier="private" name="isExpanded" display-name="" uuid="db7814ae-9555-41eb-a840-51549a3b0c47" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
		</do>
		<do-on access-modifier="private" name="Handler_11" display-name="Handler_11" ver="5" event="ItemCollapsed">
			<body kind="om">
				<![CDATA[SetItemIcon(itemId, false);]]>
			</body>
		</do-on>
		<do access-modifier="private" name="SetChildrenIcons" display-name="SetChildrenIcons" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[// Обработка элементов узла
var childrenJson = EnumChildrenJSON(parentId);
if (childrenJson != "")
{
	var children = JSON.parse(childrenJson);

	// Устанавливаем иконку для каждого элемента
	for (let i = 0; i < children.length; i++)
		SetItemIcon(children[i], false);
}]]>
			</body>
			<param access-modifier="private" name="parentId" display-name="" uuid="5eb0413d-5a61-4b2d-b6b5-1a9a828031b9" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do-on access-modifier="private" name="Handler_12" display-name="Handler_12" ver="5" event="MouseRightClick">
			<body kind="om">
				<![CDATA[pMouseRightClicked.Invoke();]]>
			</body>
		</do-on>
		<do access-modifier="private" name="GetItemPath" display-name="GetItemPath" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="om">
				<![CDATA[itemPath: string = "";
while (itemId != "")
{
	// получаем родительский узел
	parentId: string = GetParentId(itemId);
	
	// если родительский узел пустой, значит мы дошли до корневого узла источника данных
	if (!private.SingleConnection && parentId == "")
		break;

	name: string = DataSource.Browser.Source.EscapePathPart(GetItemText(itemId, NodeNameColumn));
	if (itemPath == "")
		itemPath = name;
	else itemPath = name + "." + itemPath;

	// переходим к родительскому узлу
	itemId = parentId;
}
return itemPath;]]>
			</body>
			<param access-modifier="private" name="itemId" display-name="" uuid="ee674a4e-1a40-4337-8a5b-765497022300" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="BrowseNode" display-name="BrowseNode" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[sourceIndex: int4 = GetSourceIndex(itemId);
if (sourceIndex > -1)
{
	nodeName: string = GetItemPath(itemId);
	//Debug.Log("Browse " + nodeName + " on " + DataSource.Browser[sourceIndex].StatSource.GetSourceTitle());
	DataSource.Browser[sourceIndex].GetChildrenWithRequestId(nodeName, itemId);
}]]>
			</body>
			<param access-modifier="private" name="itemId" display-name="" uuid="abc822ca-c645-469e-92ee-08039ea28412" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="RefreshNode" display-name="RefreshNode" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[RemoveChildren(itemId);
// закрываем узел, чтобы при его раскрытии обновить иконки
CollapseItem(itemId);
BrowseNode(itemId);]]>
			</body>
			<param access-modifier="private" name="itemId" display-name="" uuid="91f96631-7b3c-442f-a21d-7e659bc8e5bc" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<do access-modifier="private" name="GetSourceIndex" display-name="GetSourceIndex" ver="5" type="int4" type-id="74222947-f188-4195-8e0e-e33bd9827255">
			<body kind="om">
				<![CDATA[// в режиме одного подключения всегда используем первый браузер
if (private.SingleConnection)
	return 0;

while (itemId != "")
{
	// получаем родительский узел
	parentId: string = GetParentId(itemId);
	
	// если родительский узел пустой, значит мы дошли до корневого узла источника данных
	if (parentId == "")
	{
		// ищем источник данных с этим идентификатором узла
		for (i: int4 = 0; i < DataSource.Browser.Length; i += 1)
		{
			if (DataSource.Browser[i].TreeNodeId == itemId)
				return i;
		}
	}
	itemId = parentId;
}
return -1;]]>
			</body>
			<param access-modifier="private" name="itemId" display-name="" uuid="59a6d847-1a0d-479d-b245-bb26cbdbdf42" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		</do>
		<designed target="Flip" value="0" ver="5"/>
		<do-on access-modifier="private" name="Handler_13" display-name="Handler_13" ver="5" event="ItemDoubleClicked">
			<body kind="om">
				<![CDATA[pDoubleClicked.Invoke();]]>
			</body>
		</do-on>
		<object access-modifier="private" name="Drag" display-name="Drag" uuid="52b5b50c-1876-4703-a324-d73b0a0b94f5" base-type="DragNDrop" base-type-id="c4ddb32f-3653-44c8-be57-3a595e10c2fb" ver="5" description="" cardinal="1">
			<designed target="DragEnabled" value="true" ver="5"/>
			<designed target="DropEnabled" value="false" ver="5"/>
			<designed target="Image" value="" ver="5"/>
		</object>
		<do-on access-modifier="private" name="Handler_14" display-name="Handler_14" ver="5" event="CurrentItemChanged">
			<body kind="om">
				<![CDATA[RefreshCurrentNode.UpdateEnabled();]]>
			</body>
		</do-on>
		<init target="NodeNameColumn" ver="5" value="0"/>
		<init target="ItemIdColumn" ver="5" value="1"/>
		<init target="ParentIdColumn" ver="5" value="2"/>
		<init target="NodeTypeColumn" ver="5" value="3"/>
		<init target="IsHasChildrenColumn" ver="5" value="4"/>
		<init target="ItemCDTColumn" ver="5" value="5"/>
	</object>
	<object access-modifier="private" name="Layout" display-name="Layout" uuid="38ed0acd-da26-4011-b45c-eac949ffc975" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="5" description="" cardinal="1">
		<designed target="Orientation" value="2" ver="5"/>
		<designed target="Gap" value="0" ver="5"/>
	</object>
	<do-trace access-modifier="private" target="PenColor" ver="5">
		<body>
			<![CDATA[private.pTheme.BorderColor]]>
		</body>
	</do-trace>
	<object access-modifier="private" name="Initializer" display-name="Initializer" uuid="48687bf5-5171-4672-b0b9-2d728daf8248" base-type="Initializer" base-type-id="6db89679-9299-4993-ad1a-0d086cd1c7d2" ver="5" description="" cardinal="1">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Initialized">
			<body kind="om">
				<![CDATA[View.Initialize();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="RefreshCurrentNode" display-name="RefreshCurrentNode" uuid="af1a4435-24ba-4bf7-9bf5-dcccf0a887e7" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="InvokeTrigger" value="false" ver="5"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
			<body kind="om">
				<![CDATA[View.RefreshNode(View.CurrentItem);]]>
			</body>
		</do-on>
		<do access-modifier="private" name="UpdateEnabled" display-name="UpdateEnabled" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[itemId: string = View.CurrentItem;
sourceIndex: int4 = View.GetSourceIndex(itemId);
if (sourceIndex > -1)
{	
	if (View.DataSource.Browser[sourceIndex].ConnectionState.Value == 2)
	{
		nodeType: int4 = Variant.ToInt4(View.GetItemData(itemId, View.NodeTypeColumn), 0);
		Enabled = nodeType == 0 || nodeType == 1 || nodeType == 2;
	}
	else
		Enabled = false;
}
else
	Enabled = false;]]>
			</body>
		</do>
	</object>
	<object access-modifier="private" name="pDoubleClicked" display-name="pDoubleClicked" uuid="2d1e3842-5877-4c46-9486-f854983974d1" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="pMouseRightClicked" display-name="pMouseRightClicked" uuid="ad05d36b-e4bf-417d-be52-8bd86afb1da9" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5" description=""/>
	<designed target="Flip" value="0" ver="5"/>
	<do access-modifier="private" name="GetCurrentItemInfo" display-name="GetCurrentItemInfo" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
		<body kind="javascript">
			<![CDATA[var itemId = View.CurrentItem;
if (itemId != "")
{
	var sourceIndex = View.GetSourceIndex(itemId);
	if (sourceIndex > -1)
	{
		var source = View.DataSource.Browser[sourceIndex].StatSource;
		var info = {
			'type': View.GetItemData(itemId, View.NodeTypeColumn) ?? 0,
			'path': View.GetItemPath(itemId),
			'source': {
				'mode': source.Mode,
				'connected': source.ConnectionState.Value == 2,
			}
		};
		
		if (source.Mode == 0)
		{
			info.source.location = source.Location;
			info.source.port = source.Port;
			info.source.title = source.Title;
			
			var credentials = source.GetCredentials();
			if (credentials != "")
				info.source.credentials = JSON.parse(credentials);
		}
		else if (source.Mode == 1)
		{
			info.source.filePath = source.FilePath;
		}
		
		return JSON.stringify(info);
	}
}
return "";]]>
		</body>
	</do>
	<param access-modifier="private" name="init_Theme" display-name="Тема оформления" uuid="e2e38b22-7aae-482f-9ac5-d952f05af6c7" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" base-const="true" base-ref="true" ver="5"/>
	<param access-modifier="private" name="init_Sources" display-name="init_Sources" uuid="20d9434d-89e6-43da-b3e8-0ed057a4f076" base-type="Statistics_Sources" base-type-id="339b01a5-f79f-4676-9044-5a3cdb3c76a9" base-const="true" base-ref="true" ver="5" description=""/>
	<param access-modifier="private" name="init_SingleConnection" display-name="init_SingleConnection" uuid="49d803cf-50f3-4802-ab6d-d94b01583f06" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5" description=""/>
	<object access-modifier="private" name="Margins" display-name="Margins" uuid="660d6e5c-ac89-4f18-9ad7-2a37a5781def" base-type="LayoutMargins" base-type-id="d86ce751-1ea7-42c6-8d4b-10c651a2727d" ver="5" description="" cardinal="1">
		<designed target="Top" value="0" ver="5"/>
		<designed target="Bottom" value="1" ver="5"/>
		<designed target="Left" value="0" ver="5"/>
		<designed target="Right" value="0" ver="5"/>
	</object>
</type>

