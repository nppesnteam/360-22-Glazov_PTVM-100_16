<type access-modifier="private" name="UsersList" display-name="UsersList" uuid="a9102f11-aedf-44ca-a9c0-2fb9b31ee30d" base-type="Form" base-type-id="ffaf5544-6200-45f4-87ec-9dd24558a9d5" ver="5">
	<designed target="X" value="0" ver="5"/>
	<designed target="Y" value="0" ver="5"/>
	<designed target="Rotation" value="0" ver="5"/>
	<designed target="Scale" value="1" ver="5"/>
	<designed target="Visible" value="true" ver="5"/>
	<designed target="Enabled" value="true" ver="5"/>
	<designed target="Tooltip" value="" ver="5"/>
	<designed target="Width" value="845" ver="5"/>
	<designed target="Height" value="400" ver="5"/>
	<designed target="PenColor" value="4278190080" ver="5"/>
	<designed target="PenStyle" value="0" ver="5"/>
	<designed target="PenWidth" value="1" ver="5"/>
	<designed target="BrushColor" value="4293980400" ver="5"/>
	<designed target="BrushStyle" value="0" ver="5"/>
	<designed target="WindowX" value="0" ver="5"/>
	<designed target="WindowY" value="0" ver="5"/>
	<designed target="WindowWidth" value="845" ver="5"/>
	<designed target="WindowHeight" value="400" ver="5"/>
	<designed target="WindowCaption" value="Пользователи" ver="5"/>
	<designed target="ShowWindowCaption" value="true" ver="5"/>
	<designed target="ShowWindowMinimize" value="true" ver="5"/>
	<designed target="ShowWindowMaximize" value="true" ver="5"/>
	<designed target="ShowWindowClose" value="true" ver="5"/>
	<designed target="AlwaysOnTop" value="false" ver="5"/>
	<designed target="WindowSizeMode" value="0" ver="5"/>
	<designed target="WindowBorderStyle" value="1" ver="5"/>
	<designed target="WindowState" value="0" ver="5"/>
	<designed target="WindowScalingMode" value="0" ver="5"/>
	<designed target="MonitorNumber" value="0" ver="5"/>
	<designed target="WindowPosition" value="0" ver="5"/>
	<designed target="WindowCloseMode" value="0" ver="5"/>
	<object access-modifier="private" name="private" display-name="private" uuid="48b43183-ea63-4962-b868-3f9d211cd2f9" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5">
		<object access-modifier="private" name="pTheme" display-name="pTheme" uuid="80af4a1a-0537-467e-878e-f1c18675179b" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" base-const="true" base-ref="true" ver="5" description=""/>
		<object access-modifier="private" name="pScreenKeyboard" display-name="pScreenKeyboard" uuid="feadd4a9-9c32-4fa0-a7db-f444fdcc74d3" base-type="ScreenKeyboardOptions" base-type-id="0589bc8e-fbb2-4f0e-b5d2-f0d825538ef1" base-const="true" base-ref="true" ver="5" description=""/>
		<object access-modifier="private" name="Create" display-name="Create" uuid="dfeb1246-adcc-4dfa-aa01-9c2e4bffa6c5" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[if (value)
{
	Commands.DoCreate = false;

	SystemCommands.GoTo.frameCode = SystemCommands.Forms.UserCreate;
	SystemCommands.GoTo = true;
}]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="Edit" display-name="Edit" uuid="860f736c-0369-4edb-9ddd-8fe6fafda087" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[if (value)
{
	Commands.DoEdit = false;

	if (!IsUserIdValid())
		return;
	
	SystemCommands.GoTo.sendData = private.SelectedUserId;
	SystemCommands.GoTo.frameCode = SystemCommands.Forms.UserEdit;
	SystemCommands.GoTo = true;
}]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="Remove" display-name="Remove" uuid="59a20e3c-0259-4144-90c6-9612987b124f" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[if (value)
{
	Commands.DoRemoveSelected = false;
	
	if (!IsUserIdValid())
		return;
	
	if (SelectedUserLogin == SecurityContext.CurrentUser)
	{
		ShowForbiddenMessage.message = "Пользователя '" + SelectedUserLogin + "', нельзя удалить - его сессия активна";
		ShowForbiddenMessage.Invoke();
	}
	else 
	{
		ShowRemoveDialog.message = "Вы действительно хотите удалить пользователя '" + SelectedUserLogin + "'?";
		if (pSettings.DomainNodes != "")
			SecurityContext.ReadNodesQueue.Init(SecurityContext.GetNodesCount());
		else
			ShowRemoveDialog.Invoke();
	}
}]]>
				</body>
			</do-on>
			<object access-modifier="private" name="ShowRemoveDialog" display-name="ShowRemoveDialog" uuid="1d878a31-c4cf-4e24-b705-45d10fae6ef3" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
					<object access-modifier="private" uuid="2918e963-faec-48f3-be8e-59df4ab121da" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="5">
						<designed target="WindowCaption" value="Удалить пользователя" ver="5"/>
						<init target="Icon" ver="5" value="1"/>
						<init target="Buttons" ver="5" value="2"/>
						<init target="YesAction" ver="5" ref="RemoveSelectedUser"/>
						<init target="Message" ver="5" ref="message"/>
					</object>
				</do-on>
				<object access-modifier="private" name="message" display-name="message" uuid="0923d19a-f1f9-41f9-8650-c23a8c9e16a1" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="5"/>
			</object>
			<object access-modifier="private" name="ShowForbiddenMessage" display-name="ShowForbiddenMessage" uuid="7f4b9d01-4d83-409c-a292-9902378040ab" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<object access-modifier="private" name="message" display-name="message" uuid="6394ee73-7ebb-4c45-9be2-ae0efba12360" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
					<object access-modifier="private" uuid="52c76077-08d1-40bb-bbd2-fc897347ed34" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="5">
						<designed target="WindowCaption" value="Удалить пользователя" ver="5"/>
						<init target="Icon" ver="5" value="2"/>
						<init target="Buttons" ver="5" value="0"/>
						<init target="Message" ver="5">
							<expr>
								<![CDATA[message]]>
							</expr>
						</init>
					</object>
				</do-on>
			</object>
			<object access-modifier="private" name="RemoveSelectedUser" display-name="RemoveSelectedUser" uuid="be17f066-9d87-4373-839a-ec5f89917f93" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[if (private.IsUserIdValid())
	SecurityManager.DeleteUser(private.SelectedUserId);]]>
					</body>
				</do-on>
			</object>
		</object>
		<do-trace access-modifier="private" target="Remove" ver="5">
			<body>
				<![CDATA[Commands.DoRemoveSelected]]>
			</body>
		</do-trace>
		<object access-modifier="private" name="ExportToFile" display-name="ExportToFile" uuid="860095cb-a587-4abb-9b75-82c71eed4222" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[if (value)
{
	SystemCommands.DoExportToFile = false;
	ShowExportSettingsDialog.Invoke();	
}]]>
				</body>
			</do-on>
			<object access-modifier="private" name="ShowExportSettingsDialog" display-name="ShowExportSettingsDialog" uuid="31df32b8-1fd9-4804-a5c9-0306bafba08d" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<object access-modifier="private" name="Folder" display-name="Folder" uuid="44e6abc0-1e27-4430-bec6-9bcaa89e86c8" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				<object access-modifier="private" name="FileType" display-name="FileType" uuid="c4bb8954-b2c0-4955-97f5-636803c7de99" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
				<object access-modifier="private" name="ExportSettingsResult" display-name="ExportSettingsResult" uuid="5ff48844-1057-49d1-ad07-9ca30513afcd" base-type="ExportSettingsResult" base-type-id="75c6ad0a-e6d8-4bbe-afb1-ede4c5a88b39" ver="5" description="" cardinal="1"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
					<object access-modifier="private" uuid="438f0bf5-4ffe-4e79-bbef-a4198fa0b5e4" base-type="ExportSettingsDialog" base-type-id="6baaeecf-5f5b-4973-86c7-165d2c4c37c9" ver="5">
						<init target="Init_Theme" ver="5" ref="here.private.pTheme"/>
						<init target="Init_ScreenKeyboardOptions" ver="5" ref="here.private.pScreenKeyboard"/>
						<init target="pOnComplete" ver="5" ref="StartExport"/>
						<init target="DefaultFileName" ver="5" value="Список пользователей"/>
						<init target="FileTypeFilter" ver="5" value="Книга Excel (*.xlsx)|*.xlsx|Текстовый файл (*.csv)|*.csv"/>
						<init target="DefaultFileType" ver="5" ref="FileType"/>
						<init target="pPermissions" ver="5" ref="here.pPermissions"/>
						<init target="DefaultFolderPath" ver="5">
							<expr>
								<![CDATA[GetExportFolderPath()]]>
							</expr>
						</init>
						<init target="pResult" ver="5" ref="ExportSettingsResult"/>
					</object>
				</do-on>
				<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[folder: string = GetExportFolderPath();
Files.CreateRecursiveFolder(folder);]]>
					</body>
				</do-on>
				<object access-modifier="private" name="StartExport" display-name="StartExport" uuid="c17f386a-ac7f-4737-81fd-dd6302737132" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[// запоминаем выбранную папку
pSettings.ExportFolder = ExportSettingsResult.FolderPath;

// выбираем формат в зависимости от типа файла
format: string;
if (ExportSettingsResult.FileType == 0)
	format = "xlsx";
else if (ExportSettingsResult.FileType == 1)
	format = "csv";	

//сохранить список пользователей
if (TryUsersViewExport(ExportSettingsResult.FilePath, format))
{
	//сохранить параметры как значения по умолчанию
	Folder = ExportSettingsResult.FolderPath;
	FileType = ExportSettingsResult.FileType;
	private.SaveViewSettings();

	//если требуется сохраняем таблицы прав пользователей
	if (ExportSettingsResult.ExportUserRights)
	{
		//запускаем экспорт прав пользователей в таблицы
		userCount: int4 = UsersView.TableModel.GetRowCount();
		SystemCommands.Statusbar.Init(userCount);
		SystemCommands.Statusbar.Update("Запуск экспорта списка прав пользователей");
		UserRightsExporter.FileFormat = format;
		UserRightsExporter.UserLoadQueue.Init(userCount);
	}
	else
	{
		//уведомляем об успешном окончании экспорта
		ShowComplete.message = "Список пользователей успешно сохранен \n" + Files.ToNative(ExportSettingsResult.FilePath);
		ShowComplete.Invoke();
	}
}]]>
						</body>
					</do-on>
				</object>
				<do access-modifier="private" name="TryUsersViewExport" display-name="TryUsersViewExport" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
					<body kind="javascript">
						<![CDATA[try
{
	UsersView.Save(filePath, format);
	return true;
}
catch (error)
{
	ShowError.message = `Не удалось сохранить список пользователей в файл \n${filePath}\n${error.message}`;
	ShowError.Invoke();
	return false;
}]]>
					</body>
					<param access-modifier="private" name="filePath" display-name="" uuid="70e7ed94-70da-4289-93ec-d02070b6aac9" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
					<param access-modifier="private" name="format" display-name="" uuid="0cfcb66e-61fe-47a2-952b-87ab7ac96c81" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				</do>
				<do access-modifier="private" name="GetExportFolderPath" display-name="GetExportFolderPath" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
					<body kind="om">
						<![CDATA[// Если есть доступ к файловой системе, то используем последнюю использованную, иначе разрешенную папку
folder: string = pPermissions.FileSystemAccess ? Folder : pSettings.ExportFolder;

// Если путь не указан, то используем Export в папке с данными программы
if (folder == "")
	folder = Files.CombinePath(unit.ProductInfo.GetProgramDataFolder(), "Export");

return folder;]]>
					</body>
				</do>
			</object>
			<object access-modifier="private" name="UserRightsExporter" display-name="UserRightsExporter" uuid="9155e2d0-0943-4bf2-9a32-bc4bf575b812" base-type="" base-type-id="00000000-0000-0000-0000-000000000000" ver="5" description="" cardinal="1">
				<object access-modifier="private" name="LoadUserById" display-name="LoadUserById" uuid="2ea18f78-6218-4d8c-a4a8-33519db58e24" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<object access-modifier="private" name="userId" display-name="userId" uuid="5b1f492b-e790-40f5-9dae-586f93c85c09" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" frame-link="Exportrer" form-action="open-in-frame" form-by-id="false">
						<object access-modifier="private" uuid="ecbe8ddb-102a-4fe3-991f-ec5e61fe421a" base-type="UserEdit" base-type-id="8a05ed29-54f1-4d67-aa5a-6085548cc89b" ver="5">
							<init target="UserId" ver="5" ref="userId"/>
							<init target="ExportMode" ver="5" value="true"/>
							<init target="SystemCommands" ver="5" ref="here.SystemCommands"/>
							<init target="pExportComplete" ver="5" ref="ExportComplete"/>
							<init target="init_Theme" ver="5" ref="here.private.pTheme"/>
							<init target="init_ScreenKeyboard" ver="5" ref="here.private.pScreenKeyboard"/>
							<init target="pExportError" ver="5" ref="ExportError"/>
							<init target="pSettings" ver="5" ref="here.pSettings"/>
							<init target="ExportFileFormat" ver="5" ref="FileFormat"/>
						</object>
					</do-on>
					<object access-modifier="private" name="ExportComplete" display-name="ExportComplete" uuid="034534e6-148d-4728-87c7-d070d94abb56" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
						<designed target="Enabled" value="true" ver="5"/>
						<designed target="InvokeTrigger" value="false" ver="5"/>
						<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
							<body kind="om">
								<![CDATA[UserLoadQueue.IsCompleted();]]>
							</body>
						</do-on>
					</object>
					<object access-modifier="private" name="ExportError" display-name="ExportError" uuid="63907603-f2dd-4245-9a40-84dd67fb4b61" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
						<designed target="Enabled" value="true" ver="5"/>
						<designed target="InvokeTrigger" value="false" ver="5"/>
						<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
							<body kind="om">
								<![CDATA[UserLoadQueue.Stop();]]>
							</body>
						</do-on>
					</object>
				</object>
				<object access-modifier="private" name="UserLoadQueue" display-name="UserLoadQueue" uuid="d49c2c91-bb0a-4272-bb17-119bfaa2b417" base-type="ActionsQueue" base-type-id="7cd7ab97-3392-4032-badc-0d7bdd897063" ver="5" description="" cardinal="1">
					<object access-modifier="private" name="DoLoad" display-name="DoLoad" uuid="35e35f8e-836d-4e16-8455-1e73ae96512a" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
						<designed target="Enabled" value="true" ver="5"/>
						<designed target="InvokeTrigger" value="false" ver="5"/>
						<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
							<body kind="om">
								<![CDATA[//подготовить uid пользователя для загрузки
currentIndex: int4 = GetCurrentIndex();
userId: string = Variant.ToString(UsersView.Model.GetCellData(currentIndex, 0), "");
dispayName: string = Variant.ToString(UsersView.Model.GetCellData(currentIndex, 2), "");

if (userId != "" && dispayName != "")
{
	LoadUserById.userId = userId;
	currentUserDispayName = dispayName;
	LoadUserById.Invoke();
}
else
{
	UserLoadQueue.Stop();
	ShowError.message = "Не удалость получить uid пользователя для экспортирования прав";
	ShowError.Invoke();
}]]>
							</body>
						</do-on>
					</object>
					<init target="pExecuteAction" ver="5" ref="DoLoad"/>
					<object access-modifier="private" name="ExportComplete" display-name="ExportComplete" uuid="f99b04cf-b86b-4d08-917d-c79a2f6d3541" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
						<designed target="Enabled" value="true" ver="5"/>
						<designed target="InvokeTrigger" value="false" ver="5"/>
						<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
							<body kind="om">
								<![CDATA[SystemCommands.Statusbar.Update("Список прав пользователя '" + currentUserDispayName + "' сохранен");]]>
							</body>
						</do-on>
					</object>
					<object access-modifier="private" name="OnFinished" display-name="OnFinished" uuid="9d51e6b1-dfb1-40fd-ab62-8b3d345d84e8" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
						<designed target="Enabled" value="true" ver="5"/>
						<designed target="InvokeTrigger" value="false" ver="5"/>
						<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
							<body kind="om">
								<![CDATA[//экспорт успешно завершен
SystemCommands.Statusbar.Update("");

//уведомить пользователя
exportFolderPath: string = ExportToFile.ShowExportSettingsDialog.ExportSettingsResult.FolderPath;
ShowComplete.message = "Список пользователей и таблицы назначенных прав сохранены в директорию:\n" + Files.ToNative(exportFolderPath);
ShowComplete.Invoke();

//вернуть управление пользователю
SystemCommands.GoTo.doUnblockingControll();]]>
							</body>
						</do-on>
					</object>
					<init target="pFinished" ver="5" ref="OnFinished"/>
					<init target="pActionComplete" ver="5" ref="ExportComplete"/>
					<object access-modifier="private" name="OnInterrupted" display-name="OnInterrupted" uuid="4f95bdab-2e20-4919-9db2-d4f16669ba84" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
						<designed target="Enabled" value="true" ver="5"/>
						<designed target="InvokeTrigger" value="false" ver="5"/>
						<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
							<body kind="om">
								<![CDATA[//остановка экспорта
SystemCommands.Statusbar.Update("");

//вернуть управление пользователю
SystemCommands.GoTo.doUnblockingControll();]]>
							</body>
						</do-on>
					</object>
					<object access-modifier="private" name="currentUserDispayName" display-name="currentUserDispayName" uuid="a315695d-7519-408e-aed8-88f87fe962a6" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
					<init target="pStoped" ver="5" ref="OnInterrupted"/>
				</object>
				<object access-modifier="private" name="FileFormat" display-name="FileFormat" uuid="7834ca54-7663-41e3-8e0e-7d4868ebad73" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
			</object>
		</object>
		<object access-modifier="private" name="ImportFromFile" display-name="ImportFromFile" uuid="0c5dab31-3a5e-453b-8f90-8a89813e0bfb" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="5" description="" cardinal="1">
			<object access-modifier="private" name="ShowOpenDialog" display-name="ShowOpenDialog" uuid="ae04e27d-f49f-4e34-a857-782a32405e9e" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
					<object access-modifier="private" uuid="e68c5705-564a-4289-8255-b1c5f177da34" base-type="OpenFileDialog" base-type-id="41505bc5-e0a8-4d93-b1a9-de842aaf215b" ver="5">
						<init target="Result" ver="5" ref="DialogResult"/>
						<init target="OnComplete" ver="5" ref="StartImport"/>
						<init target="FileTypeFilter" ver="5" value="Книга Excel (*.xlsx)|*.xlsx|Текстовый файл (*.csv)|*.csv"/>
						<init target="init_Theme" ver="5" ref="here.private.pTheme"/>
						<init target="init_ScreenKeyboard" ver="5" ref="here.private.pScreenKeyboard"/>
						<init target="DefaultFileType" ver="5" ref="FileType"/>
						<init target="DefaultPath" ver="5" ref="Folder"/>
					</object>
				</do-on>
				<object access-modifier="private" name="Folder" display-name="Folder" uuid="4f00f9e4-b293-46d5-9e06-48fe3db45d81" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
				<object access-modifier="private" name="FileType" display-name="FileType" uuid="cd4de079-2f82-45a4-8f79-cb3833fc8778" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
				<object access-modifier="private" name="DialogResult" display-name="DialogResult" uuid="2ac8dd67-6fab-46ca-82fd-f40bfd1c46ca" base-type="FileDialogResult" base-type-id="602926f1-7d01-4d50-a5c0-d8fd35eadc74" ver="5"/>
				<object access-modifier="private" name="StartImport" display-name="StartImport" uuid="a6bbfe4d-1062-41f3-a5d6-dc638fda119b" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[//запускаем импортер и блокируем управление до завершения
Importer.LoadFile(DialogResult.FilePath);
SystemCommands.GoTo.doBlockingControll();

// запоминаем выбор как значение по умолчанию
Folder = DialogResult.FolderPath;
FileType = DialogResult.FileType;
SaveViewSettings();]]>
						</body>
					</do-on>
				</object>
			</object>
			<object access-modifier="private" name="Importer" display-name="Importer" uuid="685ce28e-6bf1-418b-9ee5-18228c6671a4" base-type="UserListImporter" base-type-id="a1e430d4-51a5-4f1d-b125-8b6fae7c6553" ver="5" description="" cardinal="1">
				<object access-modifier="private" name="OnComplete" display-name="OnComplete" uuid="50fd0e95-9021-49ed-97e3-c19e54fe0546" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[//уведомить пользователя об окончании импорта
ShowComplete.message = GetResultDescriptionMessage();
ShowComplete.Invoke();

//освободить ресурсы
Release();

//обновить список пользователя
SecurityManager.RequestUsersList();

SystemCommands.GoTo.doBlockingControll();]]>
						</body>
					</do-on>
				</object>
				<init target="pComplete" ver="5" ref="OnComplete"/>
				<object access-modifier="private" name="OnError" display-name="OnError" uuid="a7ff9e00-4606-4c25-a661-cb898867ebc5" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
					<designed target="Enabled" value="true" ver="5"/>
					<designed target="InvokeTrigger" value="false" ver="5"/>
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
						<body kind="om">
							<![CDATA[//уведомить об ошибке
ShowError.message = GetResultDescriptionMessage();
ShowError.Invoke();

//освободить ресурсы
Release();

//вернуть управление пользователю
SystemCommands.GoTo.doUnblockingControll();]]>
						</body>
					</do-on>
				</object>
				<init target="pError" ver="5" ref="OnError"/>
				<object access-modifier="private" name="progress" display-name="progress" uuid="26fcd6e7-c2de-4b4a-a5d3-27c1b4eb5630" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="5" description="" cardinal="1">
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
						<body kind="om">
							<![CDATA[SystemCommands.Statusbar.operationProgress = value;]]>
						</body>
					</do-on>
				</object>
				<do-trace access-modifier="private" target="progress" ver="5">
					<body>
						<![CDATA[Progress]]>
					</body>
				</do-trace>
				<object access-modifier="private" name="status" display-name="status" uuid="0b43d84c-f441-4c8b-bc95-255002d2b32c" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="5" description="" cardinal="1">
					<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
						<body kind="om">
							<![CDATA[SystemCommands.Statusbar.operationStatus = value;]]>
						</body>
					</do-on>
				</object>
				<do-trace access-modifier="private" target="status" ver="5">
					<body>
						<![CDATA[Status]]>
					</body>
				</do-trace>
			</object>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[if (value)
{
	SystemCommands.DoImport.Value = false;
	ShowOpenDialog.Invoke();
}]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="SelectedUserId" display-name="SelectedUserId" uuid="c8311ca1-043c-4d99-a2f3-c4a65206b152" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="5">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
				<body kind="om">
					<![CDATA[isUserDataValid: bool = value != "";
Commands.DoEdit.CanExecute = isUserDataValid;
Commands.DoRemoveSelected.CanExecute = isUserDataValid;]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="SelectedUserLogin" display-name="SelectedUserLogin" uuid="30fd2f59-e254-4e8a-bd4d-d3dea471a94a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<do access-modifier="private" name="SaveViewSettings" display-name="SaveViewSettings" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[SystemCommands.ViewSettings.Update(SystemCommands.Forms.UserList, GetViewSettings());]]>
			</body>
		</do>
		<object access-modifier="private" name="ShowComplete" display-name="ShowComplete" uuid="272107a4-e0d1-44bb-af7b-a825828496ac" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="cfdb3311-d8fc-41e4-9671-241f9759e304" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="5">
					<init target="Message" ver="5" ref="message"/>
					<init target="Buttons" ver="5" value="0"/>
					<init target="Icon" ver="5" value="0"/>
					<init target="pTheme" ver="5" ref="here.private.pTheme"/>
					<init target="WindowCaption" ver="5" ref="title"/>
				</object>
			</do-on>
			<object access-modifier="private" name="title" display-name="title" uuid="2674e042-7dde-4ae4-8d4d-ee21e92ed5ea" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="message" display-name="message" uuid="df882fff-7e15-4c8a-978e-6956e9de3cda" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<init target="title" ver="5" value="Сообщение"/>
		</object>
		<object access-modifier="private" name="ShowError" display-name="ShowError" uuid="f94bc62e-69b5-4d45-8ecb-086b23e3657b" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="961912a1-c5ad-47ab-87b0-b7cfadf6de00" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="5">
					<init target="Message" ver="5" ref="message"/>
					<init target="Buttons" ver="5" value="0"/>
					<init target="Icon" ver="5" value="3"/>
					<designed target="WindowCaption" value="Ошибка" ver="5"/>
					<init target="pTheme" ver="5" ref="here.private.pTheme"/>
					<init target="WindowCaption" ver="5" ref="title"/>
				</object>
			</do-on>
			<object access-modifier="private" name="title" display-name="title" uuid="bc2433b4-f514-4ecf-8722-61c8faca99df" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="message" display-name="message" uuid="cf59e7c1-a21c-4e75-a82d-df6159ec83f4" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
			<init target="title" ver="5" value="Ошибка"/>
		</object>
		<do-trace access-modifier="private" target="ExportToFile" ver="5">
			<body>
				<![CDATA[SystemCommands.DoExportToFile]]>
			</body>
		</do-trace>
		<do access-modifier="private" name="IsUserIdValid" display-name="IsUserIdValid" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
			<body kind="om">
				<![CDATA[return SelectedUserId != "";]]>
			</body>
		</do>
		<do-trace access-modifier="private" target="Edit" ver="5">
			<body>
				<![CDATA[Commands.DoEdit]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="Create" ver="5">
			<body>
				<![CDATA[Commands.DoCreate]]>
			</body>
		</do-trace>
		<init target="pTheme" ver="5" ref="init_Theme"/>
		<init target="pScreenKeyboard" ver="5" ref="init_ScreenKeyboard"/>
		<do-trace access-modifier="private" target="ImportFromFile" ver="5">
			<body>
				<![CDATA[SystemCommands.DoImport]]>
			</body>
		</do-trace>
	</object>
	<object access-modifier="private" name="Debug" display-name="Debug" uuid="0cb94c26-ad9a-46d9-88eb-6db58b03798a" base-type="DebugTool" base-type-id="43946044-139a-43f4-a7b8-19a6074ffc56" ver="5"/>
	<object access-modifier="private" name="SecurityContext" display-name="SecurityContext" uuid="f7025263-41d3-4e2b-8069-e118de68110d" base-type="SecurityContext" base-type-id="d9cb0fff-b70a-4e2d-833d-3f73cf74e0dd" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="RemoteGetLoggedUsersFinished">
			<body kind="om">
				<![CDATA[userOnCurrentNode: string = "";

for (userIndex :uint4 = 0; userIndex < GetRemoteLoggedUsersCount(); userIndex += 1) 
{
	userOnCurrentNode = GetRemoteLoggedUserByIndex(userIndex);
	if (userOnCurrentNode == private.SelectedUserLogin)
	{
		private.Remove.ShowForbiddenMessage.message = "Пользователя '" + userOnCurrentNode + "', нельзя удалить - его сессия активна на узле: '"+ReadNodesQueue.ReadedNodeName+"'";
		private.Remove.ShowForbiddenMessage.Invoke();
		ReadNodesQueue.Stop();
		return;	
	}
}

ReadNodesQueue.IsCompleted();]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="RemoteGetLoggedUsersFailed">
			<body kind="om">
				<![CDATA[nodeName:string = ReadNodesQueue.ReadedNodeName;
message:string = "";
if (errorCode == 1)
	message = "Не удалось отправить запрос на удаленную машину";
else if (errorCode == 2)
	message = "Имя удаленной машины совпадает с именем локальной";
else
	message = "Ошибка при получении списка пользователей с узла";

private.ShowError.message = message + ". Узел '"+nodeName+"'" + "\nКод ошибки: "+String.ToString(errorCode);	//Описание ошибки
private.ShowError.Invoke();
ReadNodesQueue.IsCompleted();

/*
//Код - Описание - Источник
1 - не удалось отправить запрос на удаленную машину.		- Ошибка SecurityAgent
2 - имя удаленной машины совпадает с именем локальной	- Ошибка SecurityAgent
3 - ошибка при передаче запроса на удаленную машину 		- Ошибка HMI.Secirity
4 - исключение при попытке запроса									- Ошибка HMI.Secirity
*/]]>
			</body>
		</do-on>
		<object access-modifier="private" name="ReadNodesQueue" display-name="ReadNodesQueue" uuid="a4a45918-b39a-4aac-a59f-a39a3b9a81e3" base-type="ActionsQueue" base-type-id="7cd7ab97-3392-4032-badc-0d7bdd897063" ver="5" description="" cardinal="1">
			<object access-modifier="private" name="DoRead" display-name="DoRead" uuid="c0b5d2fd-562d-47c9-88f3-8495e7929a88" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="javascript">
						<![CDATA[var nodesAsString = pSettings.DomainNodes;

if (nodesAsString == "")
{
	Stop();
	return;
}

//получаем массив имен узлов
let nodeList = nodesAsString.split(",").map((node) => node.trim()).filter((node) => node != "");
let index = GetCurrentIndex();
let nodeName = nodeList[index];
ReadedNodeName = nodeName;
RemoteGetLoggedUsersList(nodeName);]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="OnFinished" display-name="OnFinished" uuid="aa602d21-8708-439d-9796-dcf05b194baf" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[here.private.Remove.ShowRemoveDialog.Invoke();
ReadedNodeName = "";]]>
					</body>
				</do-on>
			</object>
			<init target="pExecuteAction" ver="5" ref="DoRead"/>
			<init target="pFinished" ver="5" ref="OnFinished"/>
			<object access-modifier="private" name="ReadedNodeName" display-name="ReadedNodeName" uuid="d5a77056-846f-4616-abcc-5b245952f395" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
		</object>
		<do access-modifier="private" name="GetNodesCount" display-name="GetNodesCount" ver="5" type="int4" type-id="74222947-f188-4195-8e0e-e33bd9827255">
			<body kind="javascript">
				<![CDATA[return pSettings.DomainNodes.split(",").map((node) => node.trim()).filter((node) => node != "").length;]]>
			</body>
		</do>
	</object>
	<object access-modifier="private" name="SecurityManager" display-name="SecurityManager" uuid="b4806a19-1a05-4741-8104-8683c906f33e" base-type="SecurityManager" base-type-id="179958e0-f45a-40f3-9668-98e4ea2987da" ver="5">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="RequestUsersListComplete">
			<body kind="javascript">
				<![CDATA[//обновление списка пользователей
const usersModel = UsersView.TableModel;
usersModel.Clear();

if (JSONUsersList != "")
{
	var users = JSON.parse(JSONUsersList).data;
	if (users.length > 0)
	{
		UsersView.TableModel.InsertRows(0, users.length);
		for (let i = 0; i < users.length; i++)
		{
			let user = users[i];
			let userData = [
				user.uid,
				user.symbolicId,
				user.displayName,
				user.givenName,
				user.sn,
				user.initials,
				user.employeeType,
				user.departmentNumber,
				user.mail,
				user.telephoneNumber,
				user.description,
				(user.groups != undefined && user.groups != "")?(user.groups.join(', ')):(null),
				(user.roles != undefined && user.roles != "")?(user.roles.join(', ')):(null)
			];
			usersModel.SetRowDataAsJson(i, JSON.stringify(userData));
		}
	}
}

Commands.DoCreate.CanExecute = true;
SystemCommands.DoImport.CanExecute = true;
SystemCommands.DoExportToFile.CanExecute = usersModel.GetRowCount() > 0;
SystemCommands.GoTo.doUnblockingControll();]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="DeleteUserComplete">
			<body kind="om">
				<![CDATA[private.SelectedUserId = "";
private.SelectedUserLogin = "";
RequestUsersList();]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="RequestUsersListFailed">
			<body kind="om">
				<![CDATA[SystemCommands.GoTo.doUnblockingControll();
private.ShowError.message = GetErrorDescriptionByCode(FailReason);
private.ShowError.Invoke();]]>
			</body>
		</do-on>
		<init target="SecurityContext" ver="5" ref="here.SecurityContext"/>
		<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="5" event="DeleteUserFailed">
			<body kind="om">
				<![CDATA[SystemCommands.GoTo.doUnblockingControll();
private.ShowError.message = GetErrorDescriptionByCode(FailReason);
private.ShowError.Invoke();]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="5" event="LastActionError">
			<body kind="om">
				<![CDATA[SystemCommands.GoTo.doUnblockingControll();
private.ShowError.message = ErrorMessage;
private.ShowError.Invoke();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="UsersView" display-name="UsersView" uuid="debe2cc8-05de-4af8-915a-64aeae66fd47" base-type="Table" base-type-id="c65ff4dc-f22b-47d3-9333-72c4e4e5f662" ver="5">
		<designed target="X" value="0" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Scale" value="1" ver="5"/>
		<designed target="Visible" value="true" ver="5"/>
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="Width" value="845" ver="5"/>
		<designed target="Height" value="400" ver="5"/>
		<designed target="SelectionBehavior" value="1" ver="5"/>
		<designed target="SelectionMode" value="3" ver="5"/>
		<designed target="HeaderHeight" value="25" ver="5"/>
		<designed target="HeaderVisible" value="true" ver="5"/>
		<designed target="RowHeight" value="25" ver="5"/>
		<designed target="RowOrder" value="0" ver="5"/>
		<designed target="LatestRowTracking" value="false" ver="5"/>
		<designed target="SelectionOverlayEnabled" value="false" ver="5"/>
		<designed target="DelayedSortingEnabled" value="false" ver="5"/>
		<designed target="HorizontalScrollMode" value="0" ver="5"/>
		<designed target="VerticalScrollMode" value="0" ver="5"/>
		<designed target="HorizontalScrollBarPolicy" value="0" ver="5"/>
		<designed target="VerticalScrollBarPolicy" value="0" ver="5"/>
		<object access-modifier="private" name="Column" display-name="Column" uuid="af4d8cf9-f7bf-4de3-89da-c45e15ce2f90" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="5" cardinal="12">
			<designed target="Title" value="" ver="5"/>
			<designed target="Description" value="" ver="5"/>
			<designed target="Id" value="" ver="5"/>
			<designed target="BackgroundColor" value="0xffffffff" ver="5"/>
			<designed target="ForegroundColor" value="0xff000000" ver="5"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="5"/>
			<designed target="TitleBackgroundColor" value="0xfff0f0f0" ver="5"/>
			<designed target="TitleForegroundColor" value="0xff000000" ver="5"/>
			<designed target="TitleFont" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="5"/>
			<designed target="Width" value="100" ver="5"/>
			<designed target="WidthResizeMode" value="0" ver="5"/>
			<designed target="Emptiable" value="true" ver="5"/>
			<designed target="Hidden" value="false" ver="5"/>
			<designed target="NumberFormat" value="%d" ver="5"/>
			<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="5"/>
			<designed target="TextAlignment" value="129" ver="5"/>
			<designed target="JsonFilter" value="" ver="5"/>
			<designed target="SortingEnabled" value="false" ver="5"/>
			<designed target="SortOrder" value="0" ver="5"/>
			<designed target="SortPriority" value="0" ver="5"/>
			<designed target="WordWrap" value="true" ver="5"/>
			<designed target="TitleTextAlignment" value="132" ver="5"/>
			<designed target="SortMode" value="0" ver="5"/>
			<designed target="ColumnOwnId" value="" ver="5"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="MouseDoubleClick">
				<body kind="om">
					<![CDATA[if (SystemCommands.GoTo.CanExecute)
	Commands.DoEdit = true;]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="MouseTitleClick">
				<body kind="om">
					<![CDATA[// меняем направление сортировки: прямая -> обратная -> отключена и т.д.
if (SortingEnabled)
{
	if (SortOrder == 0)
		SortOrder = 1; // меняем направление сортировки
	else SortingEnabled = false; // отключаем сортировку
}
else
{
	// включаем сортировку
	SortOrder = 0;
	SortingEnabled = true;
}

// eсли сортировка по новому столбцу, то увеличиваем приоритет
if (SortingEnabled && SortPriority != SortPriorityCount)
{
	SortPriorityCount = SortPriorityCount + 1;
	SortPriority = SortPriorityCount;
}

// сортируем таблицу
ApplySort();

private.SaveViewSettings();]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="WidthChanged">
				<body kind="om">
					<![CDATA[private.SaveViewSettings();]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="5" event="MouseRightTitleClick">
				<body kind="om">
					<![CDATA[ShowColumnsMenu.mouseX = ScreenX(MouseX, MouseY);
ShowColumnsMenu.mouseY = ScreenY(MouseX, MouseY);
ShowColumnsMenu.Invoke();]]>
				</body>
			</do-on>
			<do-trace access-modifier="private" target="BackgroundColor" ver="5">
				<body>
					<![CDATA[here.private.pTheme.EditorBrushColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="ForegroundColor" ver="5">
				<body>
					<![CDATA[here.private.pTheme.EditorFontColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="Font" ver="5">
				<body>
					<![CDATA[here.private.pTheme.Font]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="TitleBackgroundColor" ver="5">
				<body>
					<![CDATA[here.private.pTheme.BackgroundColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="TitleForegroundColor" ver="5">
				<body>
					<![CDATA[here.private.pTheme.ForegroundColor]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="TitleFont" ver="5">
				<body>
					<![CDATA[here.private.pTheme.TitleFont]]>
				</body>
			</do-trace>
		</object>
		<init target="TableModel" ver="5" ref="Model"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="CurrentChanged">
			<body kind="om">
				<![CDATA[if (row >= 0 && row < GetRowCount())
{
	rowInModel: int4 = MapRowToModel(row);
	private.SelectedUserId = Variant.ToString(TableModel.GetCellData(rowInModel, 0), "");
	private.SelectedUserLogin = Variant.ToString(TableModel.GetCellData(rowInModel, 1), "");
}]]>
			</body>
		</do-on>
		<object access-modifier="private" name="SortPriorityCount" display-name="SortPriorityCount" uuid="951c644e-01d9-4716-8689-326b04d20574" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="Model" display-name="Model" uuid="6a9435f7-a5d1-4cad-8425-b9b6c786488f" base-type="TableModel" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="5">
			<designed target="MaxRowCount" value="100000" ver="5"/>
			<designed target="Frozen" value="false" ver="5"/>
			<designed target="OptOfProcessingEvents" value="0" ver="5"/>
		</object>
		<do access-modifier="private" name="Init" display-name="Init" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (Model.GetColumnCount() > 0)
	return;

Column[0].Id = "symbolicId";
Column[0].Title = "Логин";
Column[0].SortingEnabled = true;
Column[0].SortOrder = 0;
	
Column[1].Id = "displayName";
Column[1].Title = "Отображаемое имя";
	
Column[2].Id = "givenName";
Column[2].Title = "Имя";
	
Column[3].Id = "sn";
Column[3].Title = "Фамилия";
	
Column[4].Id = "initials";
Column[4].Title = "Отчество";
	
Column[5].Id = "employeeType";
Column[5].Title = "Должность";
	
Column[6].Id = "departmentNumber";
Column[6].Title = "Подразделение";
	
Column[7].Id = "mail";
Column[7].Title = "Почта";
	
Column[8].Id = "telephoneNumber";
Column[8].Title = "Телефон";
	
Column[9].Id = "description";
Column[9].Title = "Дополнительные сведения";
	
Column[10].Id = "groups";
Column[10].Title = "Группы";
	
Column[11].Id = "roles";
Column[11].Title = "Роли";
	
ApplySort();

Decorator.JsonDecorator = GetJsonDecorator(selectionColor);
	
Model.AddColumn("uid","","","","string",false,true);
Model.AddColumn("symbolicId","","","","string",false,true);
Model.AddColumn("displayName","","","","string",false,true);
Model.AddColumn("givenName","","","","string",false,true);
Model.AddColumn("sn","","","","string",false,true);
Model.AddColumn("initials","","","","string",false,true);
Model.AddColumn("employeeType","","","","string",false,true);
Model.AddColumn("departmentNumber","","","","string",false,true);
Model.AddColumn("mail","","","","string",false,true);
Model.AddColumn("telephoneNumber","","","","string",false,true);
Model.AddColumn("description","","","","string",false,true);
Model.AddColumn("groups","","","","string",false,true);
Model.AddColumn("roles","","","","string",false,true);]]>
			</body>
		</do>
		<object access-modifier="private" name="ShowColumnsMenu" display-name="ShowColumnsMenu" uuid="77440ac2-5357-45c5-a044-f114382adc6f" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<do access-modifier="private" name="GetMenuItems" display-name="GetMenuItems" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
				<body kind="javascript">
					<![CDATA[var items = [];
for (var i = 0; i < Column.Length; i++)
{
	var column = Column[i];	
	items.push({
		'id': i,
		'title': column.Title,
		'checked': !column.Hidden,
		'active': i > 0,
		'staysOpen': true
	});
}

return JSON.stringify(items);]]>
				</body>
			</do>
			<object access-modifier="private" name="MenuResult" display-name="MenuResult" uuid="4a895538-19e9-4604-8d28-6586dd05efce" base-type="MenuResult" base-type-id="0fe7658c-92f4-4af7-b038-3594414ac651" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="MenuItemClick" display-name="MenuItemClick" uuid="59ac08e9-cfc4-49d2-9098-573b0b88a078" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[i:int4 = String.ToInt4(MenuResult.Id, -1);
ChangeColumnVisibilityById(i);]]>
					</body>
				</do-on>
			</object>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-new" form-by-id="false">
				<object access-modifier="private" uuid="d1088ed2-4d55-4415-ad24-0311f2613da4" base-type="Menu" base-type-id="07bb4545-980a-4140-bbaa-4d1397447864" ver="5">
					<init target="Items" ver="5">
						<expr>
							<![CDATA[GetMenuItems()]]>
						</expr>
					</init>
					<init target="pAction" ver="5" ref="MenuItemClick"/>
					<init target="pResult" ver="5" ref="MenuResult"/>
					<init target="WindowX" ver="5" ref="mouseX"/>
					<init target="WindowY" ver="5" ref="mouseY"/>
					<init target="init_Theme" ver="5" ref="here.private.pTheme"/>
				</object>
			</do-on>
			<object access-modifier="private" name="mouseX" display-name="mouseX" uuid="aad48e17-d37d-4929-be5b-ad734bb5d6e7" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="mouseY" display-name="mouseY" uuid="e54ddff9-cf25-4079-99b8-ccc030592307" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		</object>
		<designed target="FrameColor" value="0xff808080" ver="5"/>
		<designed target="BackgroundColor" value="0xffffffff" ver="5"/>
		<designed target="GridColor" value="0xffc0c0c0" ver="5"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="KeyPress">
			<body kind="om">
				<![CDATA[//Debug.Log("KeyPress: " + String.ToString(keyCode));
if (!SystemCommands.GoTo.CanExecute)
	return;

if (keyCode == 110) // Insert
	Commands.DoCreate = true;
else if (keyCode == 82) // Enter
	Commands.DoEdit = true;
else if (keyCode == 109) // Delete
	Commands.DoRemoveSelected = true;]]>
			</body>
		</do-on>
		<object access-modifier="private" name="ShowContexMenu" display-name="ShowContexMenu" uuid="84deb819-29a0-4b89-8afb-a2c5b7e060e4" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
			<designed target="Enabled" value="true" ver="5"/>
			<designed target="InvokeTrigger" value="false" ver="5"/>
			<object access-modifier="private" name="MenuResult" display-name="MenuResult" uuid="b4a8a2e6-ffb5-497c-8005-9a804f6c5d91" base-type="MenuResult" base-type-id="0fe7658c-92f4-4af7-b038-3594414ac651" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="MenuItemClick" display-name="MenuItemClick" uuid="48151335-8ece-4d9e-afd1-ca0e4e3d888c" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="5" description="" cardinal="1">
				<designed target="Enabled" value="true" ver="5"/>
				<designed target="InvokeTrigger" value="false" ver="5"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked">
					<body kind="om">
						<![CDATA[cmd: string = MenuResult.Id;

if (cmd == "insert")
	Commands.DoCreate = true;
else if (cmd == "edit")
	Commands.DoEdit = true;
else if (cmd == "delete")
	Commands.DoRemoveSelected = true;
else if (cmd == "export")
	SystemCommands.DoExportToFile = true;
else if (cmd == "import")
	SystemCommands.DoImport = true;
else
	ChangeColumnVisibilityById(String.ToInt4(MenuResult.Id, -1));]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="mouseX" display-name="mouseX" uuid="f70e842e-d82f-494c-8768-bb72616c18d8" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<object access-modifier="private" name="mouseY" display-name="mouseY" uuid="2ea7844e-2a3f-4263-b011-1e6ddd70d9f0" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-by-id="false" form-action="open-new">
				<object access-modifier="private" uuid="5ac84c77-2cec-4843-ba58-2c7587a7c7de" base-type="Menu" base-type-id="07bb4545-980a-4140-bbaa-4d1397447864" ver="5">
					<init target="pAction" ver="5" ref="MenuItemClick"/>
					<init target="pResult" ver="5" ref="MenuResult"/>
					<init target="WindowX" ver="5" ref="mouseX"/>
					<init target="WindowY" ver="5" ref="mouseY"/>
					<init target="Items" ver="5">
						<expr>
							<![CDATA[GetMenuItems()]]>
						</expr>
					</init>
					<init target="init_Theme" ver="5" ref="here.private.pTheme"/>
				</object>
			</do-on>
			<do access-modifier="private" name="GetMenuItems" display-name="GetMenuItems" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
				<body kind="javascript">
					<![CDATA[var items = [];
if (pConfigurationAccess.Value)
{
	items.push({
		'id': "insert",
		'title': "Добавить учетную запись пользователя...",
		'active': Commands.DoCreate.CanExecute.Value,
		'icon': "Security_Icons/Add16.png",
		'keyGesture': "Insert"
	});

	items.push({
		'id': "edit",
		'title': "Редактировать учетную запись пользователя... ",
		'active': Commands.DoEdit.CanExecute.Value,
		'icon': "Security_Icons/Edit16.png",
		'keyGesture': "Enter"
	});

	items.push({
		'id': "delete",
		'title': "Удалить учетную запись пользователя...",
		'active': Commands.DoRemoveSelected.CanExecute.Value,
		'icon': "Security_Icons/Delete16.png",
		'keyGesture': "Delete"
	});

	items.push({
		'title': "-"
	});

	//до решения задачи по импорту
	/* 
	items.push({
		'id': "import",
		'title': "Импорт из файла...",
		'active': SystemCommands.DoImport.CanExecute.Value
	});
	*/
}

items.push({
	'id': "export",
	'title': "Экспорт в файл...",
	'active': SystemCommands.DoExportToFile.CanExecute.Value
});

items.push({
	'title': "-"
});

let columns = JSON.parse(ShowColumnsMenu.GetMenuItems());
items.push({
	'id': "",
	'title': "Столбцы",
	'items': columns
});

return JSON.stringify(items);]]>
				</body>
			</do>
		</object>
		<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="MouseRelease">
			<body kind="om">
				<![CDATA[//Debug.Log("MouseRelease button: "+String.ToString(button));
//ПКМ
if (button == 2)
{
	ShowContexMenu.mouseX = ScreenX(MouseX, MouseY);
	ShowContexMenu.mouseY = ScreenY(MouseX, MouseY);
	ShowContexMenu.Invoke();
}
]]>
			</body>
		</do-on>
		<do access-modifier="private" name="ChangeColumnVisibilityById" display-name="ChangeColumnVisibilityById" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<param access-modifier="private" name="id" display-name="" uuid="df955075-9c63-4763-8d58-cca7fc558604" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			<body kind="om">
				<![CDATA[if (id >= 0 && id < Column.Length)
{
	Column[id].Hidden = !Column[id].Hidden;
	private.SaveViewSettings();
}]]>
			</body>
		</do>
		<do-trace access-modifier="private" target="FrameColor" ver="5">
			<body>
				<![CDATA[here.private.pTheme.BorderColor]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="BackgroundColor" ver="5">
			<body>
				<![CDATA[here.private.pTheme.EditorBrushColor]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="GridColor" ver="5">
			<body>
				<![CDATA[here.private.pTheme.DisabledBorderColor]]>
			</body>
		</do-trace>
		<designed target="RowHeightResizeMode" value="3" ver="5"/>
		<object access-modifier="private" name="selectionColor" display-name="selectionColor" uuid="2b277f0d-2149-4cf6-8330-83a88ff59235" base-type="notifying_uint8" base-type-id="2e6d6c20-2489-49e1-9d5f-fe68a21b43df" ver="5" description="" cardinal="1"/>
		<do-trace access-modifier="private" target="selectionColor" ver="5">
			<body>
				<![CDATA[private.pTheme.SelectionColor]]>
			</body>
		</do-trace>
		<object access-modifier="private" name="Decorator" display-name="Decorator" uuid="f49323db-467a-46b5-b643-a3ff2f1878f6" base-type="TableDecorator" base-type-id="2ff6a2d7-9573-4060-bfea-29c63d61b079" ver="5" description="" cardinal="1">
			<designed target="JsonDecorator" value="" ver="5"/>
		</object>
		<do access-modifier="private" name="GetJsonDecorator" display-name="GetJsonDecorator" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="javascript">
				<![CDATA[var decorator = {};

decorator.StyleDictionary = [
	{
		'style_name': "selected_style",
		'style': { 'background_color': `#${selectionColor.toString(16)}` }
	}
];

decorator.Decorating = [
	{
		'decoration_rule_name': "selected_rule", 
		'decoration_rule': { 'row:isSelected': true },
		'rowstyle': "selected_style"
	}

];

return JSON.stringify(decorator);]]>
			</body>
			<param access-modifier="private" name="selectionColor" display-name="" uuid="fa73edfe-e47f-44a5-b3c5-ed951c2a4a9e" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="5"/>
		</do>
	</object>
	<designed target="ZValue" value="0" ver="5"/>
	<designed target="Opacity" value="1" ver="5"/>
	<object access-modifier="private" name="Files" display-name="Files" uuid="058ff2bf-2732-4da3-b3ac-9c3396f56047" base-type="FileSystem" base-type-id="34d744f9-7303-4077-a3f7-9c06c0945512" ver="5">
		<designed target="RootPath" value="/" ver="5"/>
	</object>
	<object access-modifier="private" name="pConfigurationAccess" display-name="Разрешить редактирование" uuid="53ce6fb9-1aa9-407c-a168-45f867f4fbdc" base-type="BoolTokenProxy" base-type-id="9cc1c61e-9310-406a-8f93-18028f747d59" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="Commands" display-name="Commands" uuid="ae49d8aa-bbc4-4fb3-bb21-4734dc84173b" base-type="ListCommands" base-type-id="d481f36c-0b94-4338-a60e-3e31bf7df8a1" base-const="true" base-ref="true" ver="5"/>
	<object access-modifier="private" name="Layout" display-name="Layout" uuid="8996f187-d614-415c-b302-a3296cc51ae2" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="5">
		<designed target="Orientation" value="1" ver="5"/>
		<designed target="Gap" value="0" ver="5"/>
	</object>
	<object access-modifier="private" name="SystemCommands" display-name="SystemCommands" uuid="ba32585c-e6b7-433c-b066-0e3e6035c1bd" base-type="SystemCommands" base-type-id="0b754dab-38c6-43db-a050-37201965421c" base-const="true" base-ref="true" ver="5"/>
	<designed target="WindowIconPath" value="" ver="5"/>
	<do access-modifier="private" name="GetViewSettings" display-name="GetViewSettings" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
		<body kind="javascript">
			<![CDATA[var settings = {
	"UsersTable" : {
		"Columns" : {}
	},
	"Export" : {
		"Folder": private.ExportToFile.ShowExportSettingsDialog.Folder,
		"FileType" : private.ExportToFile.ShowExportSettingsDialog.FileType,
		"ExportUserRights" : private.ExportToFile.ShowExportSettingsDialog.ExportSettingsResult.ExportUserRights
	},
	"Import" : {
		"Folder": private.ImportFromFile.ShowOpenDialog.Folder,
		"FileType" : private.ImportFromFile.ShowOpenDialog.FileType
	}
};

for (var i = 0; i < UsersView.Column.Length; i++)
{		
	var column = UsersView.Column[i];
	var columnInfo = {
		"Index": column.Index,
		"Width": column.Width,
		"Hidden": column.Hidden
	};
	if (column.SortingEnabled != false)
	{
		columnInfo.SortOrder = column.SortOrder;
		columnInfo.SortPriority = column.SortPriority;
	}
	settings.UsersTable.Columns[column.Id] = columnInfo;
}

return JSON.stringify(settings);]]>
		</body>
	</do>
	<do access-modifier="private" name="UpdateView" display-name="UpdateView" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<param access-modifier="private" name="settings" display-name="" uuid="40795f03-fda3-4616-a6a7-a6b37eec820e" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5"/>
		<body kind="javascript">
			<![CDATA[var content = JSON.parse(settings);

let exportSettings = content.Export;
if (exportSettings != undefined)
{
	private.ExportToFile.ShowExportSettingsDialog.Folder = exportSettings.Folder;
	private.ExportToFile.ShowExportSettingsDialog.FileType = exportSettings.FileType;
	private.ExportToFile.ShowExportSettingsDialog.ExportSettingsResult.ExportUserRights = exportSettings.ExportUserRights;
}

let importSettings = content.Import;
if (importSettings != undefined)
{
	private.ImportFromFile.ShowOpenDialog.Folder = importSettings.Folder;
	private.ImportFromFile.ShowOpenDialog.FileType = importSettings.FileType;
}

var usersTable = content.UsersTable;
if (usersTable != undefined)
{
	if (usersTable.Columns != undefined)
	{
		for (var i = 0; i < UsersView.Column.Length; i++)
		{
			var column = UsersView.Column[i];

			var columnInfo = usersTable.Columns[column.Id];
			if (columnInfo != undefined)
			{
				// ширину столбца изменяем, только если она больше 0
				if (columnInfo.Width > 0) 
					column.Width = columnInfo.Width;

				column.Hidden = columnInfo.Hidden;
				
				column.SortingEnabled = columnInfo.SortOrder != undefined;
				if (column.SortingEnabled)
				{
					column.SortOrder = columnInfo.SortOrder;
					column.SortPriority = columnInfo.SortPriority;					
				}
			}
		}
		
		UsersView.ApplySort();
	}
}]]>
		</body>
	</do>
	<designed target="Flip" value="0" ver="5"/>
	<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="WindowSizeChanged">
		<body kind="om">
			<![CDATA[Width = WindowWidth;
Height = WindowHeight;]]>
		</body>
	</do-on>
	<param access-modifier="private" name="init_Theme" display-name="Тема оформления" uuid="4ee99825-d8f3-4d3d-a1cd-c65edf31a4b0" base-type="Theme" base-type-id="05d4d7df-0f8e-4ec1-ac85-b5460e30af81" base-const="true" base-ref="true" ver="5" description=""/>
	<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="5" event="AboutToOpen">
		<body kind="om">
			<![CDATA[UsersView.Init();
SecurityManager.RequestUsersList();
SystemCommands.GoTo.doBlockingControll();


UpdateView(SystemCommands.ViewSettings.Data[SystemCommands.Forms.UserList]);]]>
		</body>
	</do-on>
	<object access-modifier="private" name="pSettings" display-name="pSettings" uuid="f902e9c7-1a53-49ec-8aa7-8d165d857dc2" base-type="SecurityConfigurator_Settings" base-type-id="a7c582fd-25fb-4cc3-8522-3166d1a63de6" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="pPermissions" display-name="pPermissions" uuid="3f3af5a3-7bc8-4e78-b189-036cb75b5238" base-type="SecurityConfigurator_Permissions" base-type-id="a6a67dc7-2872-46c8-a397-13aa48ddb4e7" base-const="true" base-ref="true" ver="5" description=""/>
	<param access-modifier="private" name="init_ScreenKeyboard" display-name="Вызов экранной клавиатуры" uuid="23294ec7-038b-43e5-9e31-e1ac1eee81c1" base-type="ScreenKeyboardOptions" base-type-id="0589bc8e-fbb2-4f0e-b5d2-f0d825538ef1" base-const="true" base-ref="true" ver="5" description=""/>
	<do-on access-modifier="private" name="Handler_5" display-name="Handler_5" ver="5" event="KeyPress">
		<body kind="om">
			<![CDATA[keyCode: uint4 = event.KeyCode;

if (keyCode == 48) 				// right shift
	private.ImportFromFile.Importer.LoadFile("");]]>
		</body>
	</do-on>
	<object access-modifier="private" name="Exportrer" display-name="Exportrer" uuid="35a49a08-ece4-4060-8946-d18c9fd3603e" base-type="Frame" base-type-id="71f78e19-ef99-4133-a029-2968b14f02b6" ver="5" description="" cardinal="1">
		<designed target="X" value="422.5" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="ZValue" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Scale" value="1" ver="5"/>
		<designed target="Flip" value="0" ver="5"/>
		<designed target="Visible" value="false" ver="5"/>
		<designed target="Opacity" value="1" ver="5"/>
		<designed target="Enabled" value="true" ver="5"/>
		<designed target="Tooltip" value="" ver="5"/>
		<designed target="Width" value="422.5" ver="5"/>
		<designed target="Height" value="400" ver="5"/>
		<designed target="PenColor" value="4278190080" ver="5"/>
		<designed target="PenStyle" value="1" ver="5"/>
		<designed target="PenWidth" value="1" ver="5"/>
		<designed target="BrushColor" value="4278190080" ver="5"/>
		<designed target="BrushStyle" value="0" ver="5"/>
		<designed target="OverrideScaling" value="false" ver="5"/>
		<designed target="ShowScrollBars" value="true" ver="5"/>
		<designed target="MoveByMouse" value="false" ver="5"/>
	</object>
</type>

